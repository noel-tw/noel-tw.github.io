{
  "openapi": "3.0.1",
  "info": {
    "title": "InEight InEight Application v1 Direct API",
    "contact": {
      "name": "Customer Support",
      "url": "https://Ryvit.com",
      "email": "support@Ryvit.com"
    },
    "version": "1"
  },
  "servers": [
    {
      "url": "https://api.xchange.trimble.com/connect/v1/",
      "description": "Production Server"
    }
  ],
  "paths": {
    "/direct/actions/{action_key_value}": {
      "get": {
        "tags": [
          "Actions"
        ],
        "summary": "Get an Action instance.",
        "operationId": "GET /direct/actions/{action_key_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/action_key_value"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Action Identifier"
                    },
                    "data": {
                      "type": "object",
                      "description": "Contains the input object to the Action POST call."
                    },
                    "dataObjectCode": {
                      "type": "string",
                      "description": "Data Object Code"
                    },
                    "actionCode": {
                      "type": "string",
                      "description": "Action Code"
                    },
                    "subscriberCode": {
                      "type": "string",
                      "description": "Subscriber Code"
                    },
                    "createdUtc": {
                      "type": "string",
                      "description": "Action Created Date"
                    },
                    "status": {
                      "enum": [
                        "Queued",
                        "Processing",
                        "Failed",
                        "Successful"
                      ],
                      "type": "string",
                      "description": "Action Status"
                    },
                    "result": {
                      "type": "string",
                      "description": "This object definition is defined on each Action POST.  See Responses: \"x-$.result for Successful\" and \"x-$.result for Failed\" for the specific action based on the $.dataObjectCode and $.actionCode properties."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/employees/cache": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Gets all Employees objects from the cache.",
        "description": "InEight employee data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/employees/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_employees_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/employees/cache/search": {
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Search through Employees objects in the data cache",
        "description": "InEight employee data object.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/employees/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_employees_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/employees/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Gets one Employees object from the cache.",
        "description": "InEight employee data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/employees/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_employees_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/employees/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Gets one Employees object from the cache.",
        "description": "InEight employee data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/employees/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_employees_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/employees/cache/EmployeeId/{EmployeeId}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Gets one Employees object from the cache.",
        "description": "InEight employee data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/employees/cache/EmployeeId/{EmployeeId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "EmployeeId",
            "in": "path",
            "description": "The EmployeeId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_employees_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/employees/cache/SourceSystemId/{SourceSystemId}": {
      "get": {
        "tags": [
          "Employees"
        ],
        "summary": "Gets one Employees object from the cache.",
        "description": "InEight employee data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/employees/cache/SourceSystemId/{SourceSystemId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "SourceSystemId",
            "in": "path",
            "description": "The SourceSystemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_employees_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/employees/actions/upsert": {
      "post": {
        "tags": [
          "Employees"
        ],
        "summary": "Executes the Update or insert action for the Employees data object.",
        "description": "Add or update InEight employees.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/employees/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Employees": {
                    "type": "array",
                    "items": {
                      "required": [
                        "SourceSystemId",
                        "CraftId",
                        "EmployeeId",
                        "FirstName",
                        "LastName",
                        "CanReportTime",
                        "CurrencyCode",
                        "UoMName"
                      ],
                      "type": "object",
                      "properties": {
                        "CraftId": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "VendorCode": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "EmployeeId": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "FirstName": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "LastName": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "IsActive": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "EmployeePIN": {
                          "maxLength": 64,
                          "type": "string",
                          "nullable": true,
                          "writeOnly": true
                        },
                        "CanReportTime": {
                          "type": "boolean"
                        },
                        "Language": {
                          "type": "string"
                        },
                        "EmailAddress": {
                          "type": "string",
                          "nullable": true
                        },
                        "WorkPhoneNumber": {
                          "type": "string",
                          "nullable": true
                        },
                        "WorkCellPhoneNumber": {
                          "type": "string",
                          "nullable": true
                        },
                        "SourceSystemId": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "SourceSystemName": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "StartDate": {
                          "type": "string",
                          "nullable": true
                        },
                        "EndDate": {
                          "type": "string",
                          "nullable": true
                        },
                        "CurrencyCode": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "UoMName": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "StraightTimeRate": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true,
                          "writeOnly": true
                        },
                        "OverTimeFactor": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "OverTimeRate": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true,
                          "writeOnly": true
                        },
                        "DoubleTimeFactor": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "DoubleTimeRate": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true,
                          "writeOnly": true
                        },
                        "UseBaseWageFactors": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "UnionSourceSystemId": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "PrimaryCompany": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "JobTitle": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "UnionJobTitle": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "SupervisorId": {
                          "maxLength": 200,
                          "type": "string",
                          "nullable": true
                        },
                        "CountryISOCode": {
                          "maxLength": 10,
                          "type": "string",
                          "nullable": true
                        },
                        "DefaultCostCenterSourceSystemId": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "AdditionalPayrollInstructionCode": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "IsOverrideAdditionalPayrollInstructionCodeAllowed": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "IsAvailableWeeklyTimeSheet": {
                          "type": "boolean",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "Employees": {
                      "type": "array",
                      "items": {
                        "required": [
                          "SourceSystemId",
                          "CraftId",
                          "EmployeeId",
                          "FirstName",
                          "LastName",
                          "CanReportTime",
                          "CurrencyCode",
                          "UoMName"
                        ],
                        "type": "object",
                        "properties": {
                          "CraftId": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "VendorCode": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "EmployeeId": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "FirstName": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "LastName": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "IsActive": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "EmployeePIN": {
                            "maxLength": 64,
                            "type": "string",
                            "nullable": true,
                            "writeOnly": true
                          },
                          "CanReportTime": {
                            "type": "boolean"
                          },
                          "Language": {
                            "type": "string"
                          },
                          "EmailAddress": {
                            "type": "string",
                            "nullable": true
                          },
                          "WorkPhoneNumber": {
                            "type": "string",
                            "nullable": true
                          },
                          "WorkCellPhoneNumber": {
                            "type": "string",
                            "nullable": true
                          },
                          "SourceSystemId": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "SourceSystemName": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "StartDate": {
                            "type": "string",
                            "nullable": true
                          },
                          "EndDate": {
                            "type": "string",
                            "nullable": true
                          },
                          "CurrencyCode": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "UoMName": {
                            "maxLength": 255,
                            "type": "string"
                          },
                          "StraightTimeRate": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true,
                            "writeOnly": true
                          },
                          "OverTimeFactor": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "OverTimeRate": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true,
                            "writeOnly": true
                          },
                          "DoubleTimeFactor": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "DoubleTimeRate": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true,
                            "writeOnly": true
                          },
                          "UseBaseWageFactors": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "UnionSourceSystemId": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "PrimaryCompany": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "JobTitle": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "UnionJobTitle": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "SupervisorId": {
                            "maxLength": 200,
                            "type": "string",
                            "nullable": true
                          },
                          "CountryISOCode": {
                            "maxLength": 10,
                            "type": "string",
                            "nullable": true
                          },
                          "DefaultCostCenterSourceSystemId": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "AdditionalPayrollInstructionCode": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "IsOverrideAdditionalPayrollInstructionCodeAllowed": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "IsAvailableWeeklyTimeSheet": {
                            "type": "boolean",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/projects/cache": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets all Projects objects from the cache.",
        "description": "InEight project data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/projects/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_projects_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/projects/cache/search": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Search through Projects objects in the data cache",
        "description": "InEight project data object.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/projects/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_projects_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/projects/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets one Projects object from the cache.",
        "description": "InEight project data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/projects/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_projects_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/projects/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets one Projects object from the cache.",
        "description": "InEight project data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/projects/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_projects_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/projects/cache/ProjectDisplayId/{ProjectDisplayId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets one Projects object from the cache.",
        "description": "InEight project data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/projects/cache/ProjectDisplayId/{ProjectDisplayId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ProjectDisplayId",
            "in": "path",
            "description": "The ProjectDisplayId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_projects_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/projects/cache/SourceSystemId/{SourceSystemId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets one Projects object from the cache.",
        "description": "InEight project data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/projects/cache/SourceSystemId/{SourceSystemId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "SourceSystemId",
            "in": "path",
            "description": "The SourceSystemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_projects_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/projects/actions/upsert": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Executes the Update or insert action for the Projects data object.",
        "description": "Add or update InEight projects.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/projects/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Projects": {
                    "type": "array",
                    "items": {
                      "required": [
                        "ProjectDisplayId",
                        "SourceSystemId",
                        "ProjectName",
                        "OrganizationSourceSystemId",
                        "BaseCurrency",
                        "TimeZone",
                        "ProjectStatusName"
                      ],
                      "type": "object",
                      "properties": {
                        "ProjectDisplayId": {
                          "maxLength": 200,
                          "type": "string"
                        },
                        "SourceSystemId": {
                          "maxLength": 200,
                          "type": "string"
                        },
                        "SourceSystemName": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "ProjectName": {
                          "maxLength": 300,
                          "type": "string"
                        },
                        "OrganizationSourceSystemId": {
                          "maxLength": 300,
                          "type": "string"
                        },
                        "BaseCurrency": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "TimeZone": {
                          "maxLength": 100,
                          "type": "string"
                        },
                        "ProjectStatusName": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "StartDate": {
                          "maxLength": 25,
                          "type": "string",
                          "nullable": true
                        },
                        "EndDate": {
                          "maxLength": 25,
                          "type": "string",
                          "nullable": true
                        },
                        "City": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "RegionISOCode": {
                          "maxLength": 10,
                          "type": "string",
                          "nullable": true
                        },
                        "CountryISOCode": {
                          "maxLength": 10,
                          "type": "string",
                          "nullable": true
                        },
                        "ZipCode": {
                          "maxLength": 10,
                          "type": "string",
                          "nullable": true
                        },
                        "Address1": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        },
                        "Address2": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        },
                        "Latitude": {
                          "type": "string",
                          "nullable": true
                        },
                        "Longitude": {
                          "type": "string",
                          "nullable": true
                        },
                        "Notes": {
                          "type": "string",
                          "nullable": true
                        },
                        "IsActive": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "OriginalContractAmount": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "ContractNumber": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "DateProjectStarted": {
                          "maxLength": 25,
                          "type": "string",
                          "nullable": true
                        },
                        "ContractDate": {
                          "maxLength": 25,
                          "type": "string",
                          "nullable": true
                        },
                        "OriginalContractCompletionDate": {
                          "maxLength": 25,
                          "type": "string",
                          "nullable": true
                        },
                        "OriginalDuration": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "ForecastStartDate": {
                          "type": "string",
                          "description": "",
                          "nullable": true
                        },
                        "ForecastCompletionDate": {
                          "type": "string",
                          "description": "",
                          "nullable": true
                        },
                        "ForecastDuration": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "ForecastExtensionsReductions": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "ForecastRevisedDuration": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "ForecastRevisedCompletionDate": {
                          "type": "string",
                          "description": "",
                          "nullable": true
                        },
                        "ContractExtensionsReductions": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "ContractRevisedDuration": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "ContractRevisedCompletionDate": {
                          "type": "string",
                          "description": "",
                          "nullable": true
                        },
                        "CertificateOfSubstantialCompletionExpectedDate": {
                          "type": "string",
                          "description": "",
                          "nullable": true
                        },
                        "CertificateOfSubstantialCompletionAwardedDate": {
                          "type": "string",
                          "description": "",
                          "nullable": true
                        },
                        "CertificateOfFinalCompletionExpectedDate": {
                          "type": "string",
                          "description": "",
                          "nullable": true
                        },
                        "CertificateOfFinalCompletionAwardedDate": {
                          "type": "string",
                          "description": "",
                          "nullable": true
                        },
                        "CompanyLegalName": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "",
                          "nullable": true
                        },
                        "ProjectAttributes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "AttributeName": {
                                "type": "string",
                                "description": "",
                                "nullable": true
                              },
                              "AttributeSourceSystemId": {
                                "type": "string",
                                "description": "",
                                "nullable": true
                              },
                              "AttributeValue": {
                                "type": "string",
                                "description": "",
                                "nullable": true
                              }
                            }
                          }
                        },
                        "Markets": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "Projects": {
                      "type": "array",
                      "items": {
                        "required": [
                          "SourceSystemId",
                          "ProjectDisplayId",
                          "ProjectName",
                          "OrganizationSourceSystemId",
                          "BaseCurrency",
                          "TimeZone",
                          "ProjectStatusName"
                        ],
                        "type": "object",
                        "properties": {
                          "ProjectDisplayId": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "SourceSystemId": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "SourceSystemName": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "ProjectName": {
                            "maxLength": 300,
                            "type": "string"
                          },
                          "OrganizationSourceSystemId": {
                            "maxLength": 300,
                            "type": "string"
                          },
                          "BaseCurrency": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "TimeZone": {
                            "maxLength": 100,
                            "type": "string"
                          },
                          "ProjectStatusName": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "StartDate": {
                            "maxLength": 25,
                            "type": "string",
                            "nullable": true
                          },
                          "EndDate": {
                            "maxLength": 25,
                            "type": "string",
                            "nullable": true
                          },
                          "City": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "RegionISOCode": {
                            "maxLength": 10,
                            "type": "string",
                            "nullable": true
                          },
                          "CountryISOCode": {
                            "maxLength": 10,
                            "type": "string",
                            "nullable": true
                          },
                          "ZipCode": {
                            "maxLength": 10,
                            "type": "string",
                            "nullable": true
                          },
                          "Address1": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          },
                          "Address2": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          },
                          "Latitude": {
                            "type": "string",
                            "nullable": true
                          },
                          "Longitude": {
                            "type": "string",
                            "nullable": true
                          },
                          "Notes": {
                            "type": "string",
                            "nullable": true
                          },
                          "IsActive": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "OriginalContractAmount": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "ContractNumber": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "DateProjectStarted": {
                            "maxLength": 25,
                            "type": "string",
                            "nullable": true
                          },
                          "ContractDate": {
                            "maxLength": 25,
                            "type": "string",
                            "nullable": true
                          },
                          "OriginalContractCompletionDate": {
                            "maxLength": 25,
                            "type": "string",
                            "nullable": true
                          },
                          "OriginalDuration": {
                            "type": "number",
                            "nullable": true
                          },
                          "ForecastStartDate": {
                            "type": "string",
                            "description": "",
                            "nullable": true
                          },
                          "ForecastCompletionDate": {
                            "type": "string",
                            "description": "",
                            "nullable": true
                          },
                          "ForecastDuration": {
                            "type": "string",
                            "description": "",
                            "nullable": true
                          },
                          "ForecastExtensionsReductions": {
                            "type": "string",
                            "description": "",
                            "nullable": true
                          },
                          "ForecastRevisedDuration": {
                            "type": "string",
                            "description": "",
                            "nullable": true
                          },
                          "ForecastRevisedCompletionDate": {
                            "type": "string",
                            "description": "",
                            "nullable": true
                          },
                          "ContractExtensionsReductions": {
                            "type": "string",
                            "description": "",
                            "nullable": true
                          },
                          "ContractRevisedDuration": {
                            "type": "string",
                            "description": "",
                            "nullable": true
                          },
                          "ContractRevisedCompletionDate": {
                            "type": "string",
                            "description": "",
                            "nullable": true
                          },
                          "CertificateOfSubstantialCompletionExpectedDate": {
                            "type": "string",
                            "description": "",
                            "nullable": true
                          },
                          "CertificateOfSubstantialCompletionAwardedDate": {
                            "type": "string",
                            "description": "",
                            "nullable": true
                          },
                          "CertificateOfFinalCompletionExpectedDate": {
                            "type": "string",
                            "description": "",
                            "nullable": true
                          },
                          "CertificateOfFinalCompletionAwardedDate": {
                            "type": "string",
                            "description": "",
                            "nullable": true
                          },
                          "CompanyLegalName": {
                            "type": "string",
                            "description": "",
                            "nullable": true
                          },
                          "ProjectAttributes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "AttributeName": {
                                  "type": "string",
                                  "description": "",
                                  "nullable": true
                                },
                                "AttributeSourceSystemId": {
                                  "type": "string",
                                  "description": "",
                                  "nullable": true
                                },
                                "AttributeValue": {
                                  "type": "string",
                                  "description": "",
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "Markets": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment/cache": {
      "get": {
        "tags": [
          "Equipment"
        ],
        "summary": "Gets all Equipment objects from the cache.",
        "description": "InEight equipment data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_equipment_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment/cache/search": {
      "post": {
        "tags": [
          "Equipment"
        ],
        "summary": "Search through Equipment objects in the data cache",
        "description": "InEight equipment data object.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_equipment_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Equipment"
        ],
        "summary": "Gets one Equipment object from the cache.",
        "description": "InEight equipment data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Equipment"
        ],
        "summary": "Gets one Equipment object from the cache.",
        "description": "InEight equipment data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment/cache/SourceSystemId/{SourceSystemId}": {
      "get": {
        "tags": [
          "Equipment"
        ],
        "summary": "Gets one Equipment object from the cache.",
        "description": "InEight equipment data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment/cache/SourceSystemId/{SourceSystemId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "SourceSystemId",
            "in": "path",
            "description": "The SourceSystemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment/cache/equipmentnumber/{EquipmentNumber}": {
      "get": {
        "tags": [
          "Equipment"
        ],
        "summary": "Gets one Equipment object from the cache.",
        "description": "InEight equipment data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment/cache/equipmentnumber/{EquipmentNumber}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "EquipmentNumber",
            "in": "path",
            "description": "The EquipmentNumber portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment/actions/upsert": {
      "post": {
        "tags": [
          "Equipment"
        ],
        "summary": "Executes the Update or insert action for the Equipment data object.",
        "description": "Add or update InEight equipment.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Equipment": {
                    "type": "array",
                    "items": {
                      "required": [
                        "SourceSystemId",
                        "EquipmentNumber",
                        "OwnershipType",
                        "EquipmentType",
                        "EquipmentDescription",
                        "EquipmentSystemStatus",
                        "CurrencyCode",
                        "UoMName"
                      ],
                      "type": "object",
                      "properties": {
                        "EquipmentSystemStatus": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string"
                        },
                        "EquipmentNumber": {
                          "maxLength": 100,
                          "minLength": 0,
                          "type": "string"
                        },
                        "OwnershipType": {
                          "maxLength": 100,
                          "minLength": 0,
                          "type": "string"
                        },
                        "EquipmentType": {
                          "maxLength": 250,
                          "minLength": 0,
                          "type": "string"
                        },
                        "VendorCode": {
                          "maxLength": 250,
                          "minLength": 0,
                          "type": "string",
                          "nullable": true
                        },
                        "SerialNumber": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "nullable": true
                        },
                        "Manufacturer": {
                          "maxLength": 200,
                          "minLength": 0,
                          "type": "string",
                          "nullable": true
                        },
                        "Dot": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "EquipmentDescription": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string"
                        },
                        "IsActive": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "SourceSystemId": {
                          "maxLength": 100,
                          "minLength": 0,
                          "type": "string"
                        },
                        "SourceSystemName": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "nullable": true
                        },
                        "CurrencyCode": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string"
                        },
                        "CostCenterSourceSystemId": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "nullable": true
                        },
                        "Location": {
                          "maxLength": 250,
                          "minLength": 0,
                          "type": "string",
                          "nullable": true
                        },
                        "UnitCost": {
                          "pattern": "^[-+]?[0-9]{1,11}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "UoMName": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string"
                        },
                        "IsAvailableDailyPlan": {
                          "type": "boolean",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "Equipment": {
                      "type": "array",
                      "items": {
                        "required": [
                          "SourceSystemId",
                          "EquipmentNumber",
                          "OwnershipType",
                          "EquipmentType",
                          "EquipmentDescription",
                          "EquipmentSystemStatus",
                          "CurrencyCode",
                          "UoMName"
                        ],
                        "type": "object",
                        "properties": {
                          "EquipmentSystemStatus": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "nullable": true
                          },
                          "EquipmentNumber": {
                            "maxLength": 100,
                            "minLength": 0,
                            "type": "string"
                          },
                          "OwnershipType": {
                            "maxLength": 100,
                            "minLength": 0,
                            "type": "string"
                          },
                          "EquipmentType": {
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string"
                          },
                          "VendorCode": {
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string",
                            "nullable": true
                          },
                          "SerialNumber": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "nullable": true
                          },
                          "Manufacturer": {
                            "maxLength": 200,
                            "minLength": 0,
                            "type": "string",
                            "nullable": true
                          },
                          "Dot": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "EquipmentDescription": {
                            "maxLength": 255,
                            "minLength": 0,
                            "type": "string"
                          },
                          "IsActive": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "SourceSystemId": {
                            "maxLength": 100,
                            "minLength": 0,
                            "type": "string"
                          },
                          "SourceSystemName": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "nullable": true
                          },
                          "CurrencyCode": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                          },
                          "CostCenterSourceSystemId": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "nullable": true
                          },
                          "Location": {
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string",
                            "nullable": true
                          },
                          "UnitCost": {
                            "pattern": "^[-+]?[0-9]{1,11}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "UoMName": {
                            "maxLength": 255,
                            "minLength": 0,
                            "type": "string"
                          },
                          "IsAvailableDailyPlan": {
                            "type": "boolean",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_types/cache": {
      "get": {
        "tags": [
          "Equipment Types"
        ],
        "summary": "Gets all Equipment Types objects from the cache.",
        "description": "InEight equipment type data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_types/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_equipment_types_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_types/cache/search": {
      "post": {
        "tags": [
          "Equipment Types"
        ],
        "summary": "Search through Equipment Types objects in the data cache",
        "description": "InEight equipment type data object.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_types/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_equipment_types_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_types/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Equipment Types"
        ],
        "summary": "Gets one Equipment Types object from the cache.",
        "description": "InEight equipment type data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_types/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_types_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_types/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Equipment Types"
        ],
        "summary": "Gets one Equipment Types object from the cache.",
        "description": "InEight equipment type data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_types/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_types_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_types/cache/equipmenttypeid/{EquipmentTypeId}": {
      "get": {
        "tags": [
          "Equipment Types"
        ],
        "summary": "Gets one Equipment Types object from the cache.",
        "description": "InEight equipment type data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_types/cache/equipmenttypeid/{EquipmentTypeId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "EquipmentTypeId",
            "in": "path",
            "description": "The EquipmentTypeId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_types_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_types/cache/SourceSystemId/{SourceSystemId}": {
      "get": {
        "tags": [
          "Equipment Types"
        ],
        "summary": "Gets one Equipment Types object from the cache.",
        "description": "InEight equipment type data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_types/cache/SourceSystemId/{SourceSystemId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "SourceSystemId",
            "in": "path",
            "description": "The SourceSystemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_types_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_types/actions/upsert": {
      "post": {
        "tags": [
          "Equipment Types"
        ],
        "summary": "Executes the Update or insert action for the Equipment Types data object.",
        "description": "Add or update equipment types",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_types/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "EquipmentTypes": {
                    "type": "array",
                    "items": {
                      "required": [
                        "SourceSystemId",
                        "EquipmentTypeId",
                        "Description",
                        "EquipmentCategoryId",
                        "CurrencyCode",
                        "UoMName"
                      ],
                      "type": "object",
                      "properties": {
                        "EquipmentTypeId": {
                          "maxLength": 250,
                          "minLength": 0,
                          "type": "string"
                        },
                        "Description": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string"
                        },
                        "IsActive": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "EquipmentCategoryId": {
                          "maxLength": 200,
                          "minLength": 0,
                          "type": "string"
                        },
                        "Language": {
                          "type": "string",
                          "nullable": true
                        },
                        "SourceSystemId": {
                          "maxLength": 250,
                          "minLength": 0,
                          "type": "string"
                        },
                        "SourceSystemName": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "nullable": true
                        },
                        "VendorCode": {
                          "maxLength": 250,
                          "minLength": 0,
                          "type": "string",
                          "nullable": true
                        },
                        "CurrencyCode": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string"
                        },
                        "UnitCost": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "UoMName": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "EquipmentTypes": {
                      "type": "array",
                      "items": {
                        "required": [
                          "SourceSystemId",
                          "EquipmentTypeId",
                          "Description",
                          "EquipmentCategoryId",
                          "CurrencyCode",
                          "UoMName"
                        ],
                        "type": "object",
                        "properties": {
                          "EquipmentTypeId": {
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string"
                          },
                          "Description": {
                            "maxLength": 255,
                            "minLength": 0,
                            "type": "string"
                          },
                          "IsActive": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "EquipmentCategoryId": {
                            "maxLength": 200,
                            "minLength": 0,
                            "type": "string"
                          },
                          "Language": {
                            "type": "string",
                            "nullable": true
                          },
                          "SourceSystemId": {
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string"
                          },
                          "SourceSystemName": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "nullable": true
                          },
                          "VendorCode": {
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string",
                            "nullable": true
                          },
                          "CurrencyCode": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                          },
                          "UnitCost": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "UoMName": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_categories/cache": {
      "get": {
        "tags": [
          "Equipment Categories"
        ],
        "summary": "Gets all Equipment Categories objects from the cache.",
        "description": "InEight equipment category data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_categories/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_equipment_categories_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_categories/cache/search": {
      "post": {
        "tags": [
          "Equipment Categories"
        ],
        "summary": "Search through Equipment Categories objects in the data cache",
        "description": "InEight equipment category data object.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_categories/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_equipment_categories_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_categories/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Equipment Categories"
        ],
        "summary": "Gets one Equipment Categories object from the cache.",
        "description": "InEight equipment category data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_categories/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_categories_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_categories/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Equipment Categories"
        ],
        "summary": "Gets one Equipment Categories object from the cache.",
        "description": "InEight equipment category data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_categories/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_categories_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_categories/cache/SourceSystemId/{SourceSystemId}": {
      "get": {
        "tags": [
          "Equipment Categories"
        ],
        "summary": "Gets one Equipment Categories object from the cache.",
        "description": "InEight equipment category data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_categories/cache/SourceSystemId/{SourceSystemId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "SourceSystemId",
            "in": "path",
            "description": "The SourceSystemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_categories_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_categories/cache/equipmentcategoryid/{EquipmentCategoryId}": {
      "get": {
        "tags": [
          "Equipment Categories"
        ],
        "summary": "Gets one Equipment Categories object from the cache.",
        "description": "InEight equipment category data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_categories/cache/equipmentcategoryid/{EquipmentCategoryId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "EquipmentCategoryId",
            "in": "path",
            "description": "The EquipmentCategoryId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_categories_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_categories/actions/upsert": {
      "post": {
        "tags": [
          "Equipment Categories"
        ],
        "summary": "Executes the Update or insert action for the Equipment Categories data object.",
        "description": "Add or update equipment categories.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_categories/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "EquipmentCategories": {
                    "type": "array",
                    "items": {
                      "required": [
                        "SourceSystemId",
                        "EquipmentCategoryId",
                        "Description"
                      ],
                      "type": "object",
                      "properties": {
                        "EquipmentCategoryId": {
                          "maxLength": 200,
                          "minLength": 0,
                          "type": "string"
                        },
                        "Description": {
                          "maxLength": 255,
                          "minLength": 0,
                          "type": "string"
                        },
                        "IsActive": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "Language": {
                          "type": "string",
                          "nullable": true
                        },
                        "SourceSystemId": {
                          "maxLength": 200,
                          "minLength": 0,
                          "type": "string"
                        },
                        "SourceSystemName": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "EquipmentCategories": {
                      "type": "array",
                      "items": {
                        "required": [
                          "SourceSystemId",
                          "EquipmentCategoryId",
                          "Description"
                        ],
                        "type": "object",
                        "properties": {
                          "EquipmentCategoryId": {
                            "maxLength": 200,
                            "minLength": 0,
                            "type": "string"
                          },
                          "Description": {
                            "maxLength": 255,
                            "minLength": 0,
                            "type": "string"
                          },
                          "IsActive": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "Language": {
                            "type": "string",
                            "nullable": true
                          },
                          "SourceSystemId": {
                            "maxLength": 200,
                            "minLength": 0,
                            "type": "string"
                          },
                          "SourceSystemName": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/crafts/cache": {
      "get": {
        "tags": [
          "Crafts"
        ],
        "summary": "Gets all Crafts objects from the cache.",
        "description": "InEight craft data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/crafts/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_crafts_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/crafts/cache/search": {
      "post": {
        "tags": [
          "Crafts"
        ],
        "summary": "Search through Crafts objects in the data cache",
        "description": "InEight craft data object.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/crafts/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_crafts_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/crafts/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Crafts"
        ],
        "summary": "Gets one Crafts object from the cache.",
        "description": "InEight craft data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/crafts/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_crafts_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/crafts/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Crafts"
        ],
        "summary": "Gets one Crafts object from the cache.",
        "description": "InEight craft data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/crafts/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_crafts_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/crafts/cache/craftid/{CraftId}": {
      "get": {
        "tags": [
          "Crafts"
        ],
        "summary": "Gets one Crafts object from the cache.",
        "description": "InEight craft data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/crafts/cache/craftid/{CraftId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "CraftId",
            "in": "path",
            "description": "The CraftId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_crafts_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/crafts/cache/SourceSystemId/{SourceSystemId}": {
      "get": {
        "tags": [
          "Crafts"
        ],
        "summary": "Gets one Crafts object from the cache.",
        "description": "InEight craft data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/crafts/cache/SourceSystemId/{SourceSystemId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "SourceSystemId",
            "in": "path",
            "description": "The SourceSystemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_crafts_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/crafts/actions/upsert": {
      "post": {
        "tags": [
          "Crafts"
        ],
        "summary": "Executes the Update or Insert action for the Crafts data object.",
        "description": "Add or update InEight crafts.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/crafts/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Crafts": {
                    "type": "array",
                    "items": {
                      "required": [
                        "SourceSystemId",
                        "CraftId",
                        "CraftDescription",
                        "TradeId"
                      ],
                      "type": "object",
                      "properties": {
                        "CraftId": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "CraftDescription": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "TradeId": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "CurrencyCode": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "VendorCode": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        },
                        "SourceSystemId": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "SourceSystemName": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "UnionSourceSystemId": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "UoMName": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "UseBaseWageFactors": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "StraightTimeRate": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "OverTimeFactor": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "OverTimeRate": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "DoubleTimeFactor": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "DoubleTimeRate": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "IsActive": {
                          "type": "boolean",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "Crafts": {
                      "type": "array",
                      "items": {
                        "required": [
                          "SourceSystemId",
                          "CraftId",
                          "CraftDescription",
                          "TradeId"
                        ],
                        "type": "object",
                        "properties": {
                          "CraftId": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "CraftDescription": {
                            "maxLength": 255,
                            "type": "string"
                          },
                          "TradeId": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "CurrencyCode": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "VendorCode": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          },
                          "SourceSystemId": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "SourceSystemName": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "UnionSourceSystemId": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "UoMName": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "UseBaseWageFactors": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "StraightTimeRate": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "OverTimeFactor": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "OverTimeRate": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "DoubleTimeFactor": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "DoubleTimeRate": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "IsActive": {
                            "type": "boolean",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/trades/cache": {
      "get": {
        "tags": [
          "Trades"
        ],
        "summary": "Gets all Trades objects from the cache.",
        "description": "The Trades InEight data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/trades/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_trades_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/trades/cache/search": {
      "post": {
        "tags": [
          "Trades"
        ],
        "summary": "Search through Trades objects in the data cache",
        "description": "The Trades InEight data object.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/trades/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_trades_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/trades/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Trades"
        ],
        "summary": "Gets one Trades object from the cache.",
        "description": "The Trades InEight data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/trades/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_trades_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/trades/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Trades"
        ],
        "summary": "Gets one Trades object from the cache.",
        "description": "The Trades InEight data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/trades/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_trades_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/trades/cache/SourceSystemId/{SourceSystemId}": {
      "get": {
        "tags": [
          "Trades"
        ],
        "summary": "Gets one Trades object from the cache.",
        "description": "The Trades InEight data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/trades/cache/SourceSystemId/{SourceSystemId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "SourceSystemId",
            "in": "path",
            "description": "The SourceSystemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_trades_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/trades/cache/tradedisplay/{TradeDisplay}": {
      "get": {
        "tags": [
          "Trades"
        ],
        "summary": "Gets one Trades object from the cache.",
        "description": "The Trades InEight data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/trades/cache/tradedisplay/{TradeDisplay}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "TradeDisplay",
            "in": "path",
            "description": "The TradeDisplay portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_trades_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/trades/actions/upsert": {
      "post": {
        "tags": [
          "Trades"
        ],
        "summary": "Executes the Upsert action for the Trades data object.",
        "description": "Add or update InEight trades.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/trades/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Trades": {
                    "type": "array",
                    "items": {
                      "required": [
                        "SourceSystemId",
                        "TradeDisplay",
                        "TradeDescription"
                      ],
                      "type": "object",
                      "properties": {
                        "TradeDisplay": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "TradeDescription": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "SourceSystemId": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "SourceSystemName": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "IsActive": {
                          "type": "boolean",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "Trades": {
                      "type": "array",
                      "items": {
                        "required": [
                          "SourceSystemId",
                          "TradeDisplay",
                          "TradeDescription"
                        ],
                        "type": "object",
                        "properties": {
                          "TradeDisplay": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "TradeDescription": {
                            "maxLength": 255,
                            "type": "string"
                          },
                          "SourceSystemId": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "SourceSystemName": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "IsActive": {
                            "type": "boolean",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_employees/cache": {
      "get": {
        "tags": [
          "Project Employees"
        ],
        "summary": "Gets all Project Employees objects from the cache.",
        "description": "InEight project employee data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_employees/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_project_employees_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_employees/cache/search": {
      "post": {
        "tags": [
          "Project Employees"
        ],
        "summary": "Search through Project Employees objects in the data cache",
        "description": "InEight project employee data",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_employees/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_project_employees_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_employees/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Project Employees"
        ],
        "summary": "Gets one Project Employees object from the cache.",
        "description": "InEight project employee data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_employees/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_employees_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_employees/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Project Employees"
        ],
        "summary": "Gets one Project Employees object from the cache.",
        "description": "InEight project employee data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_employees/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_employees_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_employees/cache/ProjectEmployeeId/{ProjectId}/{EmployeeId}": {
      "get": {
        "tags": [
          "Project Employees"
        ],
        "summary": "Gets one Project Employees object from the cache.",
        "description": "InEight project employee data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_employees/cache/ProjectEmployeeId/{ProjectId,EmployeeId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ProjectId",
            "in": "path",
            "description": "The ProjectId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmployeeId",
            "in": "path",
            "description": "The EmployeeId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_employees_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_employees/actions/upsert": {
      "post": {
        "tags": [
          "Project Employees"
        ],
        "summary": "Executes the Upsert action for the Project Employees data object.",
        "description": "Update or insert a project employee record",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_employees/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ProjectEmployees": {
                    "type": "array",
                    "items": {
                      "required": [
                        "ProjectId",
                        "EmployeeId"
                      ],
                      "type": "object",
                      "properties": {
                        "ProjectId": {
                          "maxLength": 200,
                          "type": "string"
                        },
                        "EmployeeId": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "StraightTimeRate": {
                          "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "OverTimeFactor": {
                          "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "OverTimeRate": {
                          "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "DoubleTimeFactor": {
                          "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "DoubleTimeRate": {
                          "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "UseBaseWageFactors": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "StartDate": {
                          "maxLength": 25,
                          "type": "string",
                          "nullable": true
                        },
                        "EndDate": {
                          "maxLength": 25,
                          "type": "string",
                          "nullable": true
                        },
                        "UoMName": {
                          "maxLength": 255,
                          "type": "string",
                          "nullable": true
                        },
                        "ProjectCraftSourceSystemId": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "Use the Craft SourceSystemId",
                          "nullable": true
                        },
                        "IsActive": {
                          "type": "boolean",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "ProjectEmployees": {
                      "type": "array",
                      "items": {
                        "required": [
                          "ProjectId",
                          "EmployeeId"
                        ],
                        "type": "object",
                        "properties": {
                          "ProjectId": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "EmployeeId": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "StraightTimeRate": {
                            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "OverTimeFactor": {
                            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "OverTimeRate": {
                            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "DoubleTimeFactor": {
                            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "DoubleTimeRate": {
                            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "SourceSystemId": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "SourceSystemName": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "UseBaseWageFactors": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "StartDate": {
                            "maxLength": 25,
                            "type": "string",
                            "nullable": true
                          },
                          "EndDate": {
                            "maxLength": 25,
                            "type": "string",
                            "nullable": true
                          },
                          "UoMName": {
                            "maxLength": 255,
                            "type": "string",
                            "nullable": true
                          },
                          "ProjectCraftSourceSystemId": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "IsActive": {
                            "type": "boolean",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equipment/cache": {
      "get": {
        "tags": [
          "Project Equipment"
        ],
        "summary": "Gets all Project Equipment objects from the cache.",
        "description": "InEight project equipoment data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equipment/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_project_equipment_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equipment/cache/search": {
      "post": {
        "tags": [
          "Project Equipment"
        ],
        "summary": "Search through Project Equipment objects in the data cache",
        "description": "InEight project equipoment data",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equipment/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_project_equipment_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equipment/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Project Equipment"
        ],
        "summary": "Gets one Project Equipment object from the cache.",
        "description": "InEight project equipoment data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equipment/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_equipment_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equipment/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Project Equipment"
        ],
        "summary": "Gets one Project Equipment object from the cache.",
        "description": "InEight project equipoment data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equipment/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_equipment_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equipment/cache/ProjectEquipmentId/{ProjectNumber}/{EquipmentNumber}": {
      "get": {
        "tags": [
          "Project Equipment"
        ],
        "summary": "Gets one Project Equipment object from the cache.",
        "description": "InEight project equipoment data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equipment/cache/ProjectEquipmentId/{ProjectNumber,EquipmentNumber}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ProjectNumber",
            "in": "path",
            "description": "The ProjectNumber portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EquipmentNumber",
            "in": "path",
            "description": "The EquipmentNumber portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_equipment_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equipment/actions/upsert": {
      "post": {
        "tags": [
          "Project Equipment"
        ],
        "summary": "Executes the upsert action for the Project Equipment data object.",
        "description": "Update or insert a project equipment record",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equipment/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ProjectEquipment": {
                    "type": "array",
                    "items": {
                      "required": [
                        "ProjectNumber",
                        "EquipmentNumber"
                      ],
                      "type": "object",
                      "properties": {
                        "ProjectNumber": {
                          "maxLength": 200,
                          "type": "string"
                        },
                        "EquipmentNumber": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "UnitCost": {
                          "pattern": "^[-+]?[0-9]{1,11}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "SourceSystemId": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "SourceSystemName": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "IsAvailableDailyPlan": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "EquipmentProjectStartDate": {
                          "maxLength": 25,
                          "type": "string",
                          "nullable": true
                        },
                        "EquipmentProjectEndDate": {
                          "maxLength": 25,
                          "type": "string",
                          "nullable": true
                        },
                        "ContractReference": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "ContractLineNumberReference": {
                          "maxLength": 20,
                          "type": "string",
                          "nullable": true
                        },
                        "ContractURL": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        },
                        "IsActive": {
                          "type": "boolean",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "ProjectEquipment": {
                      "type": "array",
                      "items": {
                        "required": [
                          "ProjectNumber",
                          "EquipmentNumber"
                        ],
                        "type": "object",
                        "properties": {
                          "ProjectNumber": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "EquipmentNumber": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "UnitCost": {
                            "pattern": "^[-+]?[0-9]{1,11}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "SourceSystemId": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "SourceSystemName": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "IsAvailableDailyPlan": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "EquipmentProjectStartDate": {
                            "maxLength": 25,
                            "type": "string",
                            "nullable": true
                          },
                          "EquipmentProjectEndDate": {
                            "maxLength": 25,
                            "type": "string",
                            "nullable": true
                          },
                          "ContractReference": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "ContractLineNumberReference": {
                            "maxLength": 20,
                            "type": "string",
                            "nullable": true
                          },
                          "ContractURL": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          },
                          "IsActive": {
                            "type": "boolean",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan/cache": {
      "get": {
        "tags": [
          "Daily Plan"
        ],
        "summary": "Gets all Daily Plan objects from the cache.",
        "description": "InEight Daily Plan resource",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_daily_plan_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan/cache/search": {
      "post": {
        "tags": [
          "Daily Plan"
        ],
        "summary": "Search through Daily Plan objects in the data cache",
        "description": "InEight Daily Plan resource",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_daily_plan_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Daily Plan"
        ],
        "summary": "Gets one Daily Plan object from the cache.",
        "description": "InEight Daily Plan resource",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_daily_plan_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Daily Plan"
        ],
        "summary": "Gets one Daily Plan object from the cache.",
        "description": "InEight Daily Plan resource",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_daily_plan_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan/cache/PlanId/{PlanId}": {
      "get": {
        "tags": [
          "Daily Plan"
        ],
        "summary": "Gets one Daily Plan object from the cache.",
        "description": "InEight Daily Plan resource",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan/cache/PlanId/{PlanId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "PlanId",
            "in": "path",
            "description": "The PlanId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_daily_plan_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan/actions/closeout": {
      "post": {
        "tags": [
          "Daily Plan"
        ],
        "summary": "Executes the Closeout action for the Daily Plan data object.",
        "description": "Closes out the daily plans using the given statues",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan/actions/closeout",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "DailyPlanStatus"
                ],
                "type": "object",
                "properties": {
                  "DailyPlanStatus": {
                    "required": [
                      "DailyPlanId",
                      "PlanStatusCode"
                    ],
                    "type": "object",
                    "properties": {
                      "DailyPlanId": {
                        "type": "number"
                      },
                      "PlanStatusCode": {
                        "type": "string"
                      },
                      "ModifiedById": {
                        "type": "string"
                      },
                      "ModifiedDate": {
                        "type": "string"
                      },
                      "ReleasedDate": {
                        "type": "string"
                      },
                      "ReleasedById": {
                        "type": "string"
                      },
                      "Errors": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "IsAlreadyClosed": {
                      "type": "boolean"
                    },
                    "DailyPlans": {
                      "required": [
                        "PlanId"
                      ],
                      "type": "object",
                      "properties": {
                        "DailyPlanNote": {
                          "type": "array",
                          "items": {
                            "required": [
                              "DailyPlanNoteEmployee",
                              "DailyPlanNoteEquipment",
                              "NoteId",
                              "Description"
                            ],
                            "type": "object",
                            "properties": {
                              "DailyPlanNoteEmployee": {
                                "type": "array",
                                "items": {
                                  "required": [
                                    "EmployeeDisplay"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "EmployeeDisplay": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "DailyPlanNoteEquipment": {
                                "type": "array",
                                "items": {
                                  "required": [
                                    "EquipmentId"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "EquipmentId": {
                                      "maxLength": 50,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "DailyPlanNoteTag": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "TagCode": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "DailyPlanNoteTagId": {
                                      "type": "number",
                                      "nullable": true
                                    }
                                  }
                                }
                              },
                              "DailyPlanNoteTask": {
                                "type": "array",
                                "items": {
                                  "required": [
                                    "CostItemId"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "CostItemId": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              },
                              "NoteId": {
                                "type": "number"
                              },
                              "Description": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "DailyPlanSignoff": {
                          "type": "array",
                          "items": {
                            "required": [
                              "DailyPlanSignoffResponse",
                              "EmployeeId",
                              "SignoffEmployeeId",
                              "SignoffDate",
                              "SignoffStandardHours",
                              "SignoffOvertimeHours",
                              "SignoffDoubletimeHours"
                            ],
                            "type": "object",
                            "properties": {
                              "DailyPlanSignoffResponse": {
                                "type": "array",
                                "items": {
                                  "required": [
                                    "EmployeeId",
                                    "DailyPlanSignoffResponseId",
                                    "ResponseKey",
                                    "ResponseText"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "EmployeeId": {
                                      "maxLength": 50,
                                      "type": "string"
                                    },
                                    "QuestionKey": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "DailyPlanSignoffResponseId": {
                                      "type": "number"
                                    },
                                    "ResponseKey": {
                                      "type": "string"
                                    },
                                    "ResponseText": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "EmployeeId": {
                                "maxLength": 50,
                                "type": "string"
                              },
                              "QuestionnaireKey": {
                                "type": "string",
                                "nullable": true
                              },
                              "SignoffEmployeeId": {
                                "type": "string"
                              },
                              "SignoffDate": {
                                "type": "string"
                              },
                              "SignoffStandardHours": {
                                "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                "type": "string",
                                "nullable": true
                              },
                              "SignoffOvertimeHours": {
                                "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                "type": "string",
                                "nullable": true
                              },
                              "SignoffDoubletimeHours": {
                                "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        },
                        "PlanId": {
                          "type": "number"
                        },
                        "CreatedDate": {
                          "type": "string"
                        },
                        "ProjectId": {
                          "maxLength": 200,
                          "type": "string"
                        },
                        "LanguageKey": {
                          "type": "string"
                        },
                        "Location": {
                          "type": "string"
                        },
                        "CreatedById": {
                          "type": "string"
                        },
                        "DeviceKey": {
                          "type": "string",
                          "nullable": true
                        },
                        "Shift": {
                          "type": "string",
                          "nullable": true
                        },
                        "Approvers": {
                          "type": "array",
                          "items": {
                            "required": [
                              "RoleName"
                            ],
                            "type": "object",
                            "properties": {
                              "RoleName": {
                                "type": "string"
                              },
                              "DisplayId": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        },
                        "Executers": {
                          "type": "array",
                          "items": {
                            "required": [
                              "RoleName"
                            ],
                            "type": "object",
                            "properties": {
                              "RoleName": {
                                "type": "string"
                              },
                              "DisplayId": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        },
                        "ClientSignOff": {
                          "type": "array",
                          "items": {
                            "required": [
                              "Name",
                              "Email"
                            ],
                            "type": "object",
                            "properties": {
                              "Name": {
                                "type": "string"
                              },
                              "Email": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ClientSignoffReportRecipients": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "DailyPlanEmployeePayrollIndicator": {
                          "type": "array",
                          "items": {
                            "required": [
                              "DailyPlanEmployeePayrollIndicatorId",
                              "EmployeeId",
                              "DailyPlanNoteId",
                              "PayrollIndicatorId",
                              "PayrollIdentifier"
                            ],
                            "type": "object",
                            "properties": {
                              "DailyPlanEmployeePayrollIndicatorId": {
                                "type": "number"
                              },
                              "EmployeeId": {
                                "maxLength": 50,
                                "type": "string"
                              },
                              "DailyPlanNoteId": {
                                "type": "number"
                              },
                              "PayrollIndicatorId": {
                                "type": "number"
                              },
                              "CostItemId": {
                                "type": "number",
                                "nullable": true
                              },
                              "PayrollIdentifier": {
                                "type": "string"
                              },
                              "WBSPhaseCode": {
                                "type": "string",
                                "nullable": true
                              },
                              "EmployeeSourceSystemId": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        },
                        "PlanDate": {
                          "type": "string"
                        },
                        "PlanTitle": {
                          "type": "string"
                        },
                        "PlanStatusCode": {
                          "type": "string"
                        },
                        "ModifiedById": {
                          "type": "string"
                        },
                        "ModifiedDate": {
                          "type": "string"
                        },
                        "PlannedDate": {
                          "type": "string"
                        },
                        "PlannedById": {
                          "type": "string",
                          "nullable": true
                        },
                        "ExecutedDate": {
                          "type": "string"
                        },
                        "ExecutedById": {
                          "type": "string"
                        },
                        "ApprovedDate": {
                          "type": "string"
                        },
                        "ApprovedById": {
                          "type": "string"
                        },
                        "CommitmentCode": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan/actions/refresh": {
      "post": {
        "tags": [
          "Daily Plan"
        ],
        "summary": "Executes the Refresh action for the Daily Plan data object.",
        "description": "Refreshes all the daily plans for the given JobCode",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan/actions/refresh",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "JobCode"
                ],
                "type": "object",
                "properties": {
                  "JobCode": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "DailyPlans": {
                      "type": "array",
                      "items": {
                        "required": [
                          "PlanId"
                        ],
                        "type": "object",
                        "properties": {
                          "DailyPlanCostItem": {
                            "type": "array",
                            "items": {
                              "required": [
                                "DailyPlanCostItemEmployee",
                                "DailyPlanCostItemEquipment",
                                "DailyPlanCostItemComponent",
                                "CostItemId",
                                "TaskPriority",
                                "PlanQuantity",
                                "SubmittedQuantity",
                                "ApprovedQuantity",
                                "CostItemSourceSystemId",
                                "WBSCode"
                              ],
                              "type": "object",
                              "properties": {
                                "DailyPlanCostItemEmployee": {
                                  "type": "array",
                                  "items": {
                                    "required": [
                                      "ResourceId",
                                      "EmployeeId",
                                      "CraftCode"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "ResourceId": {
                                        "type": "string"
                                      },
                                      "SubmittedDoubletimeHours": {
                                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "SubmittedOvertimeHours": {
                                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "SubmittedStandardHours": {
                                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "ApprovedDoubletimeHours": {
                                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "ApprovedOvertimeHours": {
                                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "ApprovedStandardHours": {
                                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "PlannedDoubletimeHours": {
                                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "PlannedOvertimeHours": {
                                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "PlannedStandardHours": {
                                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "EmployeeId": {
                                        "maxLength": 50,
                                        "type": "string"
                                      },
                                      "CraftCode": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "DailyPlanCostItemEquipment": {
                                  "title": "The Dailyplancostitemequipment Schema",
                                  "type": "array",
                                  "items": {
                                    "title": "The Items Schema",
                                    "required": [
                                      "ResourceId",
                                      "EquipmentId",
                                      "EquipmentType"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "ResourceId": {
                                        "type": "string"
                                      },
                                      "PlannedStandardHours": {
                                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "ApprovedStandardHours": {
                                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "SubmittedStandardHours": {
                                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "EquipmentId": {
                                        "maxLength": 50,
                                        "type": "string"
                                      },
                                      "EquipmentType": {
                                        "maxLength": 250,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "DailyPlanCostItemComponent": {
                                  "type": "array",
                                  "items": {
                                    "required": [
                                      "ComponentId",
                                      "ComponentType",
                                      "InstalledQuantity",
                                      "ProjectEstimatingResourceId",
                                      "ProjectEstimatingResourceSourceSystemId",
                                      "ResourceId"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "ComponentId": {
                                        "type": "string"
                                      },
                                      "ComponentType": {
                                        "type": "string"
                                      },
                                      "InstalledQuantity": {
                                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                        "type": "string"
                                      },
                                      "ProjectEstimatingResourceId": {
                                        "type": "number"
                                      },
                                      "ProjectEstimatingResourceSourceSystemId": {
                                        "type": "number"
                                      },
                                      "ResourceId": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "CostItemId": {
                                  "type": "string"
                                },
                                "TaskPriority": {
                                  "type": "number"
                                },
                                "PlanQuantity": {
                                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                  "type": "string",
                                  "nullable": true
                                },
                                "SubmittedQuantity": {
                                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                  "type": "string",
                                  "nullable": true
                                },
                                "ApprovedQuantity": {
                                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                  "type": "string",
                                  "nullable": true
                                },
                                "CostItemSourceSystemId": {
                                  "type": "string"
                                },
                                "WBSCode": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "DailyPlanNote": {
                            "title": "The Dailyplannote Schema",
                            "type": "array",
                            "items": {
                              "title": "The Items Schema",
                              "required": [
                                "DailyPlanNoteEmployee",
                                "DailyPlanNoteEquipment",
                                "NoteId",
                                "Description"
                              ],
                              "type": "object",
                              "properties": {
                                "DailyPlanNoteEmployee": {
                                  "type": "array",
                                  "items": {
                                    "required": [
                                      "EmployeeDisplay"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "EmployeeDisplay": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "DailyPlanNoteEquipment": {
                                  "type": "array",
                                  "items": {
                                    "required": [
                                      "EquipmentId"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "EquipmentId": {
                                        "maxLength": 50,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "DailyPlanNoteTag": {
                                  "type": "array",
                                  "items": {
                                    "required": [
                                      "TagCode"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "TagCode": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "DailyPlanNoteTask": {
                                  "type": "array",
                                  "items": {
                                    "required": [
                                      "CostItemId"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "CostItemId": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "NoteId": {
                                  "type": "number"
                                },
                                "Description": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "DailyPlanSignoff": {
                            "type": "array",
                            "items": {
                              "required": [
                                "DailyPlanSignoffResponse",
                                "EmployeeId",
                                "QuestionnaireKey",
                                "SignoffEmployeeId",
                                "SignoffDate",
                                "SignoffStandardHours",
                                "SignoffOvertimeHours",
                                "SignoffDoubletimeHours"
                              ],
                              "type": "object",
                              "properties": {
                                "DailyPlanSignoffResponse": {
                                  "type": "array",
                                  "items": {
                                    "required": [
                                      "EmployeeId",
                                      "QuestionKey",
                                      "DailyPlanSignoffResponseId",
                                      "ResponseKey",
                                      "ResponseText"
                                    ],
                                    "type": "object",
                                    "properties": {
                                      "EmployeeId": {
                                        "maxLength": 50,
                                        "type": "string"
                                      },
                                      "QuestionKey": {
                                        "type": "string"
                                      },
                                      "DailyPlanSignoffResponseId": {
                                        "type": "number"
                                      },
                                      "ResponseKey": {
                                        "type": "string"
                                      },
                                      "ResponseText": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "EmployeeId": {
                                  "maxLength": 50,
                                  "type": "string"
                                },
                                "QuestionnaireKey": {
                                  "type": "string"
                                },
                                "SignoffEmployeeId": {
                                  "type": "string"
                                },
                                "SignoffDate": {
                                  "type": "string"
                                },
                                "SignoffStandardHours": {
                                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                  "type": "string",
                                  "nullable": true
                                },
                                "SignoffOvertimeHours": {
                                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                  "type": "string",
                                  "nullable": true
                                },
                                "SignoffDoubletimeHours": {
                                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                                  "type": "string",
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "PlanId": {
                            "type": "number"
                          },
                          "CreatedDate": {
                            "type": "string"
                          },
                          "ProjectId": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "LanguageKey": {
                            "type": "string"
                          },
                          "Location": {
                            "type": "string"
                          },
                          "CreatedById": {
                            "type": "string"
                          },
                          "DeviceKey": {
                            "type": "string",
                            "nullable": true
                          },
                          "Shift": {
                            "type": "string",
                            "nullable": true
                          },
                          "Approvers": {
                            "type": "array",
                            "items": {
                              "required": [
                                "RoleName"
                              ],
                              "type": "object",
                              "properties": {
                                "RoleName": {
                                  "type": "string"
                                },
                                "DisplayId": {
                                  "type": "string",
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "Executers": {
                            "type": "array",
                            "items": {
                              "required": [
                                "RoleName"
                              ],
                              "type": "object",
                              "properties": {
                                "RoleName": {
                                  "type": "string"
                                },
                                "DisplayId": {
                                  "type": "string",
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "ClientSignOff": {
                            "type": "array",
                            "items": {
                              "required": [
                                "Name",
                                "Email"
                              ],
                              "type": "object",
                              "properties": {
                                "Name": {
                                  "type": "string"
                                },
                                "Email": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "ClientSignoffReportRecipients": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "DailyPlanEmployeePayrollIndicator": {
                            "type": "array",
                            "items": {
                              "required": [
                                "DailyPlanEmployeePayrollIndicatorId",
                                "EmployeeId",
                                "DailyPlanNoteId",
                                "PayrollIndicatorId",
                                "CostItemId",
                                "PayrollIdentifier",
                                "WBSPhaseCode"
                              ],
                              "type": "object",
                              "properties": {
                                "DailyPlanEmployeePayrollIndicatorId": {
                                  "type": "number"
                                },
                                "EmployeeId": {
                                  "maxLength": 50,
                                  "type": "string"
                                },
                                "DailyPlanNoteId": {
                                  "type": "number"
                                },
                                "PayrollIndicatorId": {
                                  "type": "number"
                                },
                                "CostItemId": {
                                  "type": "number"
                                },
                                "PayrollIdentifier": {
                                  "type": "string"
                                },
                                "WBSPhaseCode": {
                                  "type": "string"
                                },
                                "EmployeeSourceSystemId": {
                                  "type": "string",
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "PlanDate": {
                            "type": "string"
                          },
                          "PlanTitle": {
                            "type": "string"
                          },
                          "PlanStatusCode": {
                            "type": "string"
                          },
                          "ModifiedById": {
                            "type": "string"
                          },
                          "ModifiedDate": {
                            "type": "string"
                          },
                          "PlannedDate": {
                            "type": "string"
                          },
                          "PlannedById": {
                            "type": "string"
                          },
                          "ExecutedDate": {
                            "type": "string"
                          },
                          "ExecutedById": {
                            "type": "string"
                          },
                          "ApprovedDate": {
                            "type": "string"
                          },
                          "ApprovedById": {
                            "type": "string"
                          },
                          "CommitmentCode": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_crafts/cache": {
      "get": {
        "tags": [
          "Project Crafts"
        ],
        "summary": "Gets all Project Crafts objects from the cache.",
        "description": "InEight project craft data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_crafts/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_project_crafts_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_crafts/cache/search": {
      "post": {
        "tags": [
          "Project Crafts"
        ],
        "summary": "Search through Project Crafts objects in the data cache",
        "description": "InEight project craft data",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_crafts/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_project_crafts_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_crafts/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Project Crafts"
        ],
        "summary": "Gets one Project Crafts object from the cache.",
        "description": "InEight project craft data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_crafts/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_crafts_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_crafts/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Project Crafts"
        ],
        "summary": "Gets one Project Crafts object from the cache.",
        "description": "InEight project craft data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_crafts/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_crafts_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_crafts/cache/ProjectCraftId/{ProjectId}/{CraftId}": {
      "get": {
        "tags": [
          "Project Crafts"
        ],
        "summary": "Gets one Project Crafts object from the cache.",
        "description": "InEight project craft data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_crafts/cache/ProjectCraftId/{ProjectId,CraftId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ProjectId",
            "in": "path",
            "description": "The ProjectId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CraftId",
            "in": "path",
            "description": "The CraftId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_crafts_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_crafts/actions/upsert": {
      "post": {
        "tags": [
          "Project Crafts"
        ],
        "summary": "Executes the Upsert action for the Project Crafts data object.",
        "description": "Update or insert a Project Craft to InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_crafts/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ProjectCrafts": {
                    "type": "array",
                    "items": {
                      "required": [
                        "CraftId",
                        "ProjectId"
                      ],
                      "type": "object",
                      "properties": {
                        "ProjectId": {
                          "maxLength": 200,
                          "type": "string"
                        },
                        "CraftId": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "StraightTimeRate": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "OverTimeFactor": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "OverTimeRate": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "DoubleTimeFactor": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "DoubleTimeRate": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "IsActive": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "UseBaseWageFactors": {
                          "type": "boolean",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "ProjectCrafts": {
                      "type": "array",
                      "items": {
                        "required": [
                          "CraftId",
                          "ProjectId"
                        ],
                        "type": "object",
                        "properties": {
                          "ProjectId": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "CraftId": {
                            "maxLength": 50,
                            "type": "string"
                          },
                          "StraightTimeRate": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "OverTimeFactor": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "OverTimeRate": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "DoubleTimeFactor": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "DoubleTimeRate": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "IsActive": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "UseBaseWageFactors": {
                            "type": "boolean",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equip_types/cache": {
      "get": {
        "tags": [
          "Project Equipment Types"
        ],
        "summary": "Gets all Project Equipment Types objects from the cache.",
        "description": "InEight project equipment type",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equip_types/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_project_equip_types_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equip_types/cache/search": {
      "post": {
        "tags": [
          "Project Equipment Types"
        ],
        "summary": "Search through Project Equipment Types objects in the data cache",
        "description": "InEight project equipment type",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equip_types/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_project_equip_types_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equip_types/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Project Equipment Types"
        ],
        "summary": "Gets one Project Equipment Types object from the cache.",
        "description": "InEight project equipment type",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equip_types/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_equip_types_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equip_types/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Project Equipment Types"
        ],
        "summary": "Gets one Project Equipment Types object from the cache.",
        "description": "InEight project equipment type",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equip_types/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_equip_types_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equip_types/cache/ProjectEquipTypeId/{ProjectId}/{EquipmentTypeId}": {
      "get": {
        "tags": [
          "Project Equipment Types"
        ],
        "summary": "Gets one Project Equipment Types object from the cache.",
        "description": "InEight project equipment type",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equip_types/cache/ProjectEquipTypeId/{ProjectId,EquipmentTypeId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ProjectId",
            "in": "path",
            "description": "The ProjectId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EquipmentTypeId",
            "in": "path",
            "description": "The EquipmentTypeId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_equip_types_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equip_types/actions/upsert": {
      "post": {
        "tags": [
          "Project Equipment Types"
        ],
        "summary": "Executes the Upsert action for the Project Equipment Types data object.",
        "description": "Updates or inserts a project equipment type",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_equip_types/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ProjectEquipmentTypes": {
                    "type": "array",
                    "items": {
                      "required": [
                        "ProjectId",
                        "EquipmentTypeId"
                      ],
                      "type": "object",
                      "properties": {
                        "ProjectId": {
                          "maxLength": 200,
                          "type": "string"
                        },
                        "EquipmentTypeId": {
                          "maxLength": 250,
                          "type": "string"
                        },
                        "UnitCost": {
                          "pattern": "^[-+]?[0-9]{1,11}(?:.[0-9]{1,5})?$",
                          "type": "string",
                          "nullable": true
                        },
                        "IsActive": {
                          "type": "boolean",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "ProjectEquipmentTypes": {
                      "type": "array",
                      "items": {
                        "required": [
                          "ProjectId",
                          "EquipmentTypeId"
                        ],
                        "type": "object",
                        "properties": {
                          "ProjectId": {
                            "maxLength": 200,
                            "type": "string"
                          },
                          "EquipmentTypeId": {
                            "maxLength": 250,
                            "type": "string"
                          },
                          "UnitCost": {
                            "pattern": "^[-+]?[0-9]{1,11}(?:.[0-9]{1,5})?$",
                            "type": "string",
                            "nullable": true
                          },
                          "IsActive": {
                            "type": "boolean",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/vendors/cache": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Gets all Vendors objects from the cache.",
        "description": "Vendors available for use in InEight cloud applications",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/vendors/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_vendors_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/vendors/cache/search": {
      "post": {
        "tags": [
          "Vendors"
        ],
        "summary": "Search through Vendors objects in the data cache",
        "description": "Vendors available for use in InEight cloud applications",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/vendors/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_vendors_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/vendors/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Gets one Vendors object from the cache.",
        "description": "Vendors available for use in InEight cloud applications",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/vendors/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_vendors_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/vendors/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Gets one Vendors object from the cache.",
        "description": "Vendors available for use in InEight cloud applications",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/vendors/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_vendors_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/vendors/cache/SourceSystemId/{SourceSystemId}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Gets one Vendors object from the cache.",
        "description": "Vendors available for use in InEight cloud applications",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/vendors/cache/SourceSystemId/{SourceSystemId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "SourceSystemId",
            "in": "path",
            "description": "The SourceSystemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_vendors_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/vendors/actions/upsert": {
      "post": {
        "tags": [
          "Vendors"
        ],
        "summary": "Executes the Upsert action for the Vendors data object.",
        "description": "Upserts a vendor into InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/vendors/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Vendors": {
                    "type": "array",
                    "items": {
                      "required": [
                        "SourceSystemId",
                        "VendorCode",
                        "VendorDescription"
                      ],
                      "type": "object",
                      "properties": {
                        "SourceSystemId": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "The unique identifier provided by the system of record for Vendors"
                        },
                        "SourceSystemName": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "The name of the system of record for Vendors",
                          "nullable": true
                        },
                        "VendorCode": {
                          "maxLength": 250,
                          "minLength": 0,
                          "type": "string",
                          "description": "The public unique identifier for a Vendor"
                        },
                        "VendorDescription": {
                          "maxLength": 250,
                          "minLength": 0,
                          "type": "string",
                          "description": "The description for a Vendor"
                        },
                        "IsActive": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "AlternateName": {
                          "maxLength": 250,
                          "minLength": 0,
                          "type": "string",
                          "description": "An alternate name that may be assigned to the vendor to aid searches.",
                          "nullable": true
                        },
                        "Address1": {
                          "maxLength": 250,
                          "minLength": 0,
                          "type": "string",
                          "description": "Street address of the vendor.",
                          "nullable": true
                        },
                        "Address2": {
                          "maxLength": 250,
                          "minLength": 0,
                          "type": "string",
                          "description": "An optional second line for the street address of the vendor.",
                          "nullable": true
                        },
                        "ZipCode": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Postal or zip code of the vendor.",
                          "nullable": true
                        },
                        "City": {
                          "maxLength": 100,
                          "minLength": 0,
                          "type": "string",
                          "description": "City where the vendor is located.",
                          "nullable": true
                        },
                        "RegionISOCode": {
                          "maxLength": 10,
                          "minLength": 0,
                          "type": "string",
                          "description": "The ISO 3166-2 Code for the region of the vendor.​",
                          "nullable": true
                        },
                        "CountryISOCode": {
                          "maxLength": 10,
                          "minLength": 0,
                          "type": "string",
                          "description": "The ISO Alpha-2 code for the country of the vendor.​",
                          "nullable": true
                        },
                        "TelephoneNumber": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Telephone number for the vendor.​",
                          "nullable": true
                        },
                        "FaxNumber": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Fax number for the vendor​",
                          "nullable": true
                        },
                        "DefaultPaymentTerms": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Optional payment terms that will be defaulted when the vendor is added to a contract.​",
                          "nullable": true
                        },
                        "DefaultINCOTerms": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Optional International Commercial (INCO) Terms that will be defaulted when the vendor is added to a contract.​​",
                          "nullable": true
                        },
                        "DefaultINCOTermsLocation": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Optional location at which risk passes from seller to buyer per the specified INCO Terms",
                          "nullable": true
                        },
                        "VendorTypeReference": {
                          "maxLength": 250,
                          "minLength": 0,
                          "type": "string",
                          "description": "Optional reference to a Vendor Type. If used, data provided in this field must match a valid record in the Vendor Type Master Data located in Platform.​",
                          "nullable": true
                        },
                        "VendorTaxJurisdiction": {
                          "maxLength": 60,
                          "minLength": 0,
                          "type": "string",
                          "description": "An optional Tax Jurisdiction Code that can be included when sending Invoice and Pay Requests from Contracts to an external system. This field may also be optionally used to when requesting tax details from an external taxation system for contract line items.​",
                          "nullable": true
                        },
                        "VendorTaxId": {
                          "maxLength": 60,
                          "minLength": 0,
                          "type": "string",
                          "description": "Optional Tax Identification number issued for the vendor from a government tax authority (typically IRS for US Vendors)",
                          "nullable": true,
                          "writeOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "EquipmentCategories": {
                      "type": "array",
                      "items": {
                        "required": [
                          "SourceSystemId",
                          "VendorCode",
                          "VendorDescription"
                        ],
                        "type": "object",
                        "properties": {
                          "SourceSystemId": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "The unique identifier provided by the system of record for Vendors"
                          },
                          "SourceSystemName": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "The name of the system of record for Vendors",
                            "nullable": true
                          },
                          "VendorCode": {
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string",
                            "description": "The public unique identifier for a Vendor"
                          },
                          "VendorDescription": {
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string",
                            "description": "The description for a Vendor"
                          },
                          "IsActive": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "AlternateName": {
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string",
                            "description": "An alternate name that may be assigned to the vendor to aid searches.",
                            "nullable": true
                          },
                          "Address1": {
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string",
                            "description": "Street address of the vendor.",
                            "nullable": true
                          },
                          "Address2": {
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string",
                            "description": "An optional second line for the street address of the vendor.",
                            "nullable": true
                          },
                          "ZipCode": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Postal or zip code of the vendor.",
                            "nullable": true
                          },
                          "City": {
                            "maxLength": 100,
                            "minLength": 0,
                            "type": "string",
                            "description": "City where the vendor is located.",
                            "nullable": true
                          },
                          "RegionISOCode": {
                            "maxLength": 10,
                            "minLength": 0,
                            "type": "string",
                            "description": "The ISO 3166-2 Code for the region of the vendor.​",
                            "nullable": true
                          },
                          "CountryISOCode": {
                            "maxLength": 10,
                            "minLength": 0,
                            "type": "string",
                            "description": "The ISO Alpha-2 code for the country of the vendor.​",
                            "nullable": true
                          },
                          "TelephoneNumber": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Telephone number for the vendor.​",
                            "nullable": true
                          },
                          "FaxNumber": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Fax number for the vendor​",
                            "nullable": true
                          },
                          "DefaultPaymentTerms": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Optional payment terms that will be defaulted when the vendor is added to a contract.​",
                            "nullable": true
                          },
                          "DefaultINCOTerms": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Optional International Commercial (INCO) Terms that will be defaulted when the vendor is added to a contract.​​",
                            "nullable": true
                          },
                          "DefaultINCOTermsLocation": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Optional location at which risk passes from seller to buyer per the specified INCO Terms",
                            "nullable": true
                          },
                          "VendorTypeReference": {
                            "maxLength": 250,
                            "minLength": 0,
                            "type": "string",
                            "description": "Optional reference to a Vendor Type. If used, data provided in this field must match a valid record in the Vendor Type Master Data located in Platform.​",
                            "nullable": true
                          },
                          "VendorTaxJurisdiction": {
                            "maxLength": 60,
                            "minLength": 0,
                            "type": "string",
                            "description": "An optional Tax Jurisdiction Code that can be included when sending Invoice and Pay Requests from Contracts to an external system. This field may also be optionally used to when requesting tax details from an external taxation system for contract line items.​",
                            "nullable": true
                          },
                          "VendorTaxId": {
                            "maxLength": 60,
                            "minLength": 0,
                            "type": "string",
                            "description": "Optional Tax Identification number issued for the vendor from a government tax authority (typically IRS for US Vendors)",
                            "nullable": true,
                            "writeOnly": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/organizations/cache": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Gets all Organizations objects from the cache.",
        "description": "InEight organization data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/organizations/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_organizations_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/organizations/cache/search": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Search through Organizations objects in the data cache",
        "description": "InEight organization data object.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/organizations/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_organizations_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/organizations/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Gets one Organizations object from the cache.",
        "description": "InEight organization data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/organizations/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_organizations_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/organizations/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Gets one Organizations object from the cache.",
        "description": "InEight organization data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/organizations/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_organizations_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/organizations/cache/SourceSystemId/{SourceSystemId}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Gets one Organizations object from the cache.",
        "description": "InEight organization data object.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/organizations/cache/SourceSystemId/{SourceSystemId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "SourceSystemId",
            "in": "path",
            "description": "The SourceSystemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_organizations_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/organizations/actions/upsert": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Executes the Upsert action for the Organizations data object.",
        "description": "Create or update an organization on InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/organizations/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Organizations": {
                    "type": "array",
                    "items": {
                      "required": [
                        "OrganizationName",
                        "OrganizationDescription",
                        "ParentOrganization",
                        "SourceSystemId"
                      ],
                      "type": "object",
                      "properties": {
                        "OrganizationName": {
                          "maxLength": 300,
                          "type": "string"
                        },
                        "OrganizationDescription": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "SourceSystemId": {
                          "maxLength": 300,
                          "type": "string",
                          "nullable": true
                        },
                        "SourceSystemName": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "ParentOrganization": {
                          "maxLength": 300,
                          "type": "string"
                        },
                        "IsActive": {
                          "type": "boolean",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "Organizations": {
                      "type": "array",
                      "items": {
                        "required": [
                          "OrganizationName",
                          "OrganizationDescription",
                          "ParentOrganization",
                          "SourceSystemId"
                        ],
                        "type": "object",
                        "properties": {
                          "OrganizationName": {
                            "maxLength": 300,
                            "type": "string"
                          },
                          "OrganizationDescription": {
                            "maxLength": 255,
                            "type": "string"
                          },
                          "SourceSystemId": {
                            "maxLength": 300,
                            "type": "string",
                            "nullable": true
                          },
                          "SourceSystemName": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "ParentOrganization": {
                            "maxLength": 300,
                            "type": "string"
                          },
                          "IsActive": {
                            "type": "boolean",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/confirmations/cache": {
      "get": {
        "tags": [
          "Confirmations"
        ],
        "summary": "Gets all Confirmations objects from the cache.",
        "description": "InEight confirmation data object",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/confirmations/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_confirmations_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/confirmations/cache/search": {
      "post": {
        "tags": [
          "Confirmations"
        ],
        "summary": "Search through Confirmations objects in the data cache",
        "description": "InEight confirmation data object",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/confirmations/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_confirmations_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/confirmations/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Confirmations"
        ],
        "summary": "Gets one Confirmations object from the cache.",
        "description": "InEight confirmation data object",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/confirmations/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_confirmations_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/confirmations/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Confirmations"
        ],
        "summary": "Gets one Confirmations object from the cache.",
        "description": "InEight confirmation data object",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/confirmations/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_confirmations_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/confirmations/cache/LogToken/{LogToken}": {
      "get": {
        "tags": [
          "Confirmations"
        ],
        "summary": "Gets one Confirmations object from the cache.",
        "description": "InEight confirmation data object",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/confirmations/cache/LogToken/{LogToken}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "LogToken",
            "in": "path",
            "description": "The LogToken portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_confirmations_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/confirmations/actions/closeout": {
      "post": {
        "tags": [
          "Confirmations"
        ],
        "summary": "Executes the Closeout action for the Confirmations data object.",
        "description": "Confirm that the export was either successful or a failure",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/confirmations/actions/closeout",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Confirmation": {
                    "required": [
                      "ProjectId",
                      "InterfaceType",
                      "Status",
                      "LogToken"
                    ],
                    "type": "object",
                    "properties": {
                      "ProjectId": {
                        "maxLength": 25,
                        "type": "string"
                      },
                      "InterfaceType": {
                        "maxLength": 50,
                        "type": "string"
                      },
                      "Status": {
                        "maxLength": 15,
                        "type": "string"
                      },
                      "LogToken": {
                        "maxLength": 50,
                        "type": "string"
                      },
                      "Logger": {
                        "type": "array",
                        "items": {
                          "required": [
                            "LogDate",
                            "LogLevel",
                            "LogMessage",
                            "LogSource"
                          ],
                          "type": "object",
                          "properties": {
                            "LogDate": {
                              "type": "string"
                            },
                            "LogLevel": {
                              "type": "string"
                            },
                            "LogMessage": {
                              "type": "string"
                            },
                            "LogSource": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "IsAlreadyClosed": {
                      "type": "boolean"
                    },
                    "Confirmation": {
                      "required": [
                        "ProjectId",
                        "InterfaceType",
                        "Status",
                        "LogToken"
                      ],
                      "type": "object",
                      "properties": {
                        "ProjectId": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "InterfaceType": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "Status": {
                          "maxLength": 15,
                          "type": "string"
                        },
                        "LogToken": {
                          "maxLength": 50,
                          "type": "string"
                        },
                        "Logger": {
                          "type": "array",
                          "items": {
                            "required": [
                              "LogDate",
                              "LogLevel",
                              "LogMessage",
                              "LogSource"
                            ],
                            "type": "object",
                            "properties": {
                              "LogDate": {
                                "type": "string"
                              },
                              "LogLevel": {
                                "type": "string"
                              },
                              "LogMessage": {
                                "type": "string"
                              },
                              "LogSource": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request/cache": {
      "get": {
        "tags": [
          "Export Request"
        ],
        "summary": "Gets all Export Request objects from the cache.",
        "description": "Ryvit's data object for managing export request items when exporting out of InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_export_request_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request/cache/search": {
      "post": {
        "tags": [
          "Export Request"
        ],
        "summary": "Search through Export Request objects in the data cache",
        "description": "Ryvit's data object for managing export request items when exporting out of InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_export_request_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Export Request"
        ],
        "summary": "Gets one Export Request object from the cache.",
        "description": "Ryvit's data object for managing export request items when exporting out of InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_export_request_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Export Request"
        ],
        "summary": "Gets one Export Request object from the cache.",
        "description": "Ryvit's data object for managing export request items when exporting out of InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_export_request_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request/cache/LogToken/{LogToken}": {
      "get": {
        "tags": [
          "Export Request"
        ],
        "summary": "Gets one Export Request object from the cache.",
        "description": "Ryvit's data object for managing export request items when exporting out of InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request/cache/LogToken/{LogToken}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "LogToken",
            "in": "path",
            "description": "The LogToken portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_export_request_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/account_codes/cache": {
      "get": {
        "tags": [
          "Account Codes"
        ],
        "summary": "Gets all Account Codes objects from the cache.",
        "description": "Account Codes data object for InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/account_codes/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_account_codes_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/account_codes/cache/search": {
      "post": {
        "tags": [
          "Account Codes"
        ],
        "summary": "Search through Account Codes objects in the data cache",
        "description": "Account Codes data object for InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/account_codes/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_account_codes_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/account_codes/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Account Codes"
        ],
        "summary": "Gets one Account Codes object from the cache.",
        "description": "Account Codes data object for InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/account_codes/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_account_codes_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/account_codes/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Account Codes"
        ],
        "summary": "Gets one Account Codes object from the cache.",
        "description": "Account Codes data object for InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/account_codes/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_account_codes_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/account_codes/cache/SourceSystemId/{SourceSystemId}": {
      "get": {
        "tags": [
          "Account Codes"
        ],
        "summary": "Gets one Account Codes object from the cache.",
        "description": "Account Codes data object for InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/account_codes/cache/SourceSystemId/{SourceSystemId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "SourceSystemId",
            "in": "path",
            "description": "The SourceSystemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_account_codes_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/account_codes/actions/upsert": {
      "post": {
        "tags": [
          "Account Codes"
        ],
        "summary": "Executes the Upsert action for the Account Codes data object.",
        "description": "Updates or creates an AccountCode in the InEight system",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/account_codes/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "AccountCodes": {
                    "type": "array",
                    "items": {
                      "required": [
                        "DisplayId",
                        "AccountCodeDescription",
                        "SourceSystemId"
                      ],
                      "type": "object",
                      "properties": {
                        "DisplayId": {
                          "maxLength": 250,
                          "type": "string"
                        },
                        "AccountCodeDescription": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "ParentAccountCodeSourceSystemId": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        },
                        "PrimaryAutoQuantity": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "SecondaryAutoQuantity": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "IsTerminal": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "SourceSystemId": {
                          "maxLength": 300,
                          "type": "string",
                          "nullable": true
                        },
                        "SourceSystemName": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "PrimaryUOMReference": {
                          "maxLength": 255,
                          "type": "string",
                          "nullable": true
                        },
                        "CurrencyCode": {
                          "maxLength": 50,
                          "type": "string",
                          "nullable": true
                        },
                        "SecondaryUOMReference": {
                          "maxLength": 255,
                          "type": "string",
                          "nullable": true
                        },
                        "ContributePrimaryToPrimary": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "ContributePrimaryToSecondary": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "ContributeSecondaryToSecondary": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "FlagAsDisabled": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "SafetyNotes": {
                          "maxLength": 5000,
                          "type": "string",
                          "nullable": true
                        },
                        "Notes": {
                          "maxLength": 5000,
                          "type": "string",
                          "nullable": true
                        },
                        "EnvironmentalNotes": {
                          "type": "string",
                          "nullable": true
                        },
                        "QualityNotes": {
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag1": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag2": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag3": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag4": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag5": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag6": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag7": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag8": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag9": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag10": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag11": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag12": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag13": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag14": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag15": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag16": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag17": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag18": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag19": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "AccountCodeTag20": {
                          "maxLength": 100,
                          "type": "string",
                          "nullable": true
                        },
                        "UserDefinedField1": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        },
                        "UserDefinedField2": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        },
                        "UserDefinedField3": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        },
                        "UserDefinedField4": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        },
                        "UserDefinedField5": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        },
                        "UserDefinedField6": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        },
                        "UserDefinedField7": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        },
                        "UserDefinedField8": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        },
                        "UserDefinedField9": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        },
                        "UserDefinedField10": {
                          "maxLength": 250,
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "Organizations": {
                      "type": "array",
                      "items": {
                        "required": [
                          "DisplayId",
                          "AccountCodeDescription",
                          "SourceSystemId"
                        ],
                        "type": "object",
                        "properties": {
                          "DisplayId": {
                            "maxLength": 250,
                            "type": "string"
                          },
                          "AccountCodeDescription": {
                            "maxLength": 255,
                            "type": "string"
                          },
                          "ParentAccountCodeSourceSystemId": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          },
                          "PrimaryAutoQuantity": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "SecondaryAutoQuantity": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "IsTerminal": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "SourceSystemId": {
                            "maxLength": 300,
                            "type": "string",
                            "nullable": true
                          },
                          "SourceSystemName": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "PrimaryUOMReference": {
                            "maxLength": 255,
                            "type": "string",
                            "nullable": true
                          },
                          "CurrencyCode": {
                            "maxLength": 50,
                            "type": "string",
                            "nullable": true
                          },
                          "SecondaryUOMReference": {
                            "maxLength": 255,
                            "type": "string",
                            "nullable": true
                          },
                          "ContributePrimaryToPrimary": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "ContributePrimaryToSecondary": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "ContributeSecondaryToSecondary": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "FlagAsDisabled": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "SafetyNotes": {
                            "maxLength": 5000,
                            "type": "string",
                            "nullable": true
                          },
                          "Notes": {
                            "maxLength": 5000,
                            "type": "string",
                            "nullable": true
                          },
                          "EnvironmentalNotes": {
                            "type": "string",
                            "nullable": true
                          },
                          "QualityNotes": {
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag1": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag2": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag3": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag4": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag5": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag6": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag7": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag8": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag9": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag10": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag11": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag12": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag13": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag14": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag15": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag16": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag17": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag18": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag19": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "AccountCodeTag20": {
                            "maxLength": 100,
                            "type": "string",
                            "nullable": true
                          },
                          "UserDefinedField1": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          },
                          "UserDefinedField2": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          },
                          "UserDefinedField3": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          },
                          "UserDefinedField4": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          },
                          "UserDefinedField5": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          },
                          "UserDefinedField6": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          },
                          "UserDefinedField7": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          },
                          "UserDefinedField8": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          },
                          "UserDefinedField9": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          },
                          "UserDefinedField10": {
                            "maxLength": 250,
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request_item/cache": {
      "get": {
        "tags": [
          "Export Request Item"
        ],
        "summary": "Gets all Export Request Item objects from the cache.",
        "description": "Ryvit's data object for managing an individual request item when exporting out of InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request_item/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_export_request_item_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request_item/cache/search": {
      "post": {
        "tags": [
          "Export Request Item"
        ],
        "summary": "Search through Export Request Item objects in the data cache",
        "description": "Ryvit's data object for managing an individual request item when exporting out of InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request_item/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_export_request_item_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request_item/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Export Request Item"
        ],
        "summary": "Gets one Export Request Item object from the cache.",
        "description": "Ryvit's data object for managing an individual request item when exporting out of InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request_item/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_export_request_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request_item/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Export Request Item"
        ],
        "summary": "Gets one Export Request Item object from the cache.",
        "description": "Ryvit's data object for managing an individual request item when exporting out of InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request_item/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_export_request_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request_item/cache/ExportRequestItemId/{LogToken}/{RelatedCacheId}": {
      "get": {
        "tags": [
          "Export Request Item"
        ],
        "summary": "Gets one Export Request Item object from the cache.",
        "description": "Ryvit's data object for managing an individual request item when exporting out of InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request_item/cache/ExportRequestItemId/{LogToken,RelatedCacheId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "LogToken",
            "in": "path",
            "description": "The LogToken portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RelatedCacheId",
            "in": "path",
            "description": "The RelatedCacheId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_export_request_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request_item/actions/resolve": {
      "post": {
        "tags": [
          "Export Request Item"
        ],
        "summary": "Executes the Resolve action for the Export Request Item data object.",
        "description": "Sets resolution data on export request item.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/export_request_item/actions/resolve",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "LogToken",
                  "RelatedCacheId",
                  "Status"
                ],
                "type": "object",
                "properties": {
                  "LogToken": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "RelatedCacheId": {
                    "type": "string"
                  },
                  "Status": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "Message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "ExportRequestId",
                    "ProjectId",
                    "InterfaceType",
                    "LogToken",
                    "RelatedCacheId",
                    "HasRelatedCacheChanged"
                  ],
                  "type": "object",
                  "properties": {
                    "ExportRequestId": {
                      "type": "string"
                    },
                    "ProjectId": {
                      "maxLength": 25,
                      "type": "string"
                    },
                    "InterfaceType": {
                      "maxLength": 50,
                      "type": "string"
                    },
                    "LogToken": {
                      "maxLength": 50,
                      "type": "string"
                    },
                    "RelatedCacheId": {
                      "type": "string"
                    },
                    "HasRelatedCacheChanged": {
                      "type": "boolean"
                    },
                    "RelatedCacheChangeOperation": {
                      "type": "string",
                      "nullable": true
                    },
                    "ResolveStatus": {
                      "maxLength": 50,
                      "type": "string"
                    },
                    "ResolvedOn": {
                      "type": "string"
                    },
                    "ResolveMessage": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/cost_item/cache": {
      "get": {
        "tags": [
          "Cost Item"
        ],
        "summary": "Gets all Cost Item objects from the cache.",
        "description": "Cost Breakdown Structure item from an InEight Cost Breakdown Structure push request. The CBS is broken into items to avoid any record size limits and to allow for individual item processing. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/cost_item/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_cost_item_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/cost_item/cache/search": {
      "post": {
        "tags": [
          "Cost Item"
        ],
        "summary": "Search through Cost Item objects in the data cache",
        "description": "Cost Breakdown Structure item from an InEight Cost Breakdown Structure push request. The CBS is broken into items to avoid any record size limits and to allow for individual item processing. ",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/cost_item/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_cost_item_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/cost_item/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Cost Item"
        ],
        "summary": "Gets one Cost Item object from the cache.",
        "description": "Cost Breakdown Structure item from an InEight Cost Breakdown Structure push request. The CBS is broken into items to avoid any record size limits and to allow for individual item processing. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/cost_item/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/cost_item/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Cost Item"
        ],
        "summary": "Gets one Cost Item object from the cache.",
        "description": "Cost Breakdown Structure item from an InEight Cost Breakdown Structure push request. The CBS is broken into items to avoid any record size limits and to allow for individual item processing. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/cost_item/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/cost_item/cache/CostItemId/{ProjectId}/{CostItemId}": {
      "get": {
        "tags": [
          "Cost Item"
        ],
        "summary": "Gets one Cost Item object from the cache.",
        "description": "Cost Breakdown Structure item from an InEight Cost Breakdown Structure push request. The CBS is broken into items to avoid any record size limits and to allow for individual item processing. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/cost_item/cache/CostItemId/{ProjectId,CostItemId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ProjectId",
            "in": "path",
            "description": "The ProjectId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CostItemId",
            "in": "path",
            "description": "The CostItemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/budget_item/cache": {
      "get": {
        "tags": [
          "Budget Item"
        ],
        "summary": "Gets all Budget Item objects from the cache.",
        "description": "Budget item from an InEight Budget push request. The Budget export is broken into items to avoid any record size limits and to allow for individual item processing. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/budget_item/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_budget_item_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/budget_item/cache/search": {
      "post": {
        "tags": [
          "Budget Item"
        ],
        "summary": "Search through Budget Item objects in the data cache",
        "description": "Budget item from an InEight Budget push request. The Budget export is broken into items to avoid any record size limits and to allow for individual item processing. ",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/budget_item/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_budget_item_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/budget_item/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Budget Item"
        ],
        "summary": "Gets one Budget Item object from the cache.",
        "description": "Budget item from an InEight Budget push request. The Budget export is broken into items to avoid any record size limits and to allow for individual item processing. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/budget_item/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_budget_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/budget_item/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Budget Item"
        ],
        "summary": "Gets one Budget Item object from the cache.",
        "description": "Budget item from an InEight Budget push request. The Budget export is broken into items to avoid any record size limits and to allow for individual item processing. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/budget_item/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_budget_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/budget_item/cache/BudgetItemId/{ProjectId}/{CBSPosition}": {
      "get": {
        "tags": [
          "Budget Item"
        ],
        "summary": "Gets one Budget Item object from the cache.",
        "description": "Budget item from an InEight Budget push request. The Budget export is broken into items to avoid any record size limits and to allow for individual item processing. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/budget_item/cache/BudgetItemId/{ProjectId,CBSPosition}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ProjectId",
            "in": "path",
            "description": "The ProjectId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CBSPosition",
            "in": "path",
            "description": "The CBSPosition portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_budget_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/forecast/cache": {
      "get": {
        "tags": [
          "Forecast"
        ],
        "summary": "Gets all Forecast objects from the cache.",
        "description": "Forecast from an InEight Budget push request. The Forecast export contains a list of Forecasts, so each one is broken into its own DataObject to avoid any record size limits and to allow for individual Forecast processing. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/forecast/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_forecast_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/forecast/cache/search": {
      "post": {
        "tags": [
          "Forecast"
        ],
        "summary": "Search through Forecast objects in the data cache",
        "description": "Forecast from an InEight Budget push request. The Forecast export contains a list of Forecasts, so each one is broken into its own DataObject to avoid any record size limits and to allow for individual Forecast processing. ",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/forecast/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_forecast_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/forecast/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Forecast"
        ],
        "summary": "Gets one Forecast object from the cache.",
        "description": "Forecast from an InEight Budget push request. The Forecast export contains a list of Forecasts, so each one is broken into its own DataObject to avoid any record size limits and to allow for individual Forecast processing. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/forecast/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_forecast_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/forecast/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Forecast"
        ],
        "summary": "Gets one Forecast object from the cache.",
        "description": "Forecast from an InEight Budget push request. The Forecast export contains a list of Forecasts, so each one is broken into its own DataObject to avoid any record size limits and to allow for individual Forecast processing. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/forecast/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_forecast_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/forecast/cache/ForecastId/{ProjectId}/{PhaseCode}/{ForecastMethod}": {
      "get": {
        "tags": [
          "Forecast"
        ],
        "summary": "Gets one Forecast object from the cache.",
        "description": "Forecast from an InEight Budget push request. The Forecast export contains a list of Forecasts, so each one is broken into its own DataObject to avoid any record size limits and to allow for individual Forecast processing. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/forecast/cache/ForecastId/{ProjectId,PhaseCode,ForecastMethod}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ProjectId",
            "in": "path",
            "description": "The ProjectId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhaseCode",
            "in": "path",
            "description": "The PhaseCode portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ForecastMethod",
            "in": "path",
            "description": "The ForecastMethod portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_forecast_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_cost_item/cache": {
      "get": {
        "tags": [
          "Daily Plan Cost Item"
        ],
        "summary": "Gets all Daily Plan Cost Item objects from the cache.",
        "description": "Individual breakdown of a daily plan cost item for a Daily Plan export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_cost_item/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_daily_plan_cost_item_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_cost_item/cache/search": {
      "post": {
        "tags": [
          "Daily Plan Cost Item"
        ],
        "summary": "Search through Daily Plan Cost Item objects in the data cache",
        "description": "Individual breakdown of a daily plan cost item for a Daily Plan export from InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_cost_item/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_daily_plan_cost_item_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_cost_item/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Daily Plan Cost Item"
        ],
        "summary": "Gets one Daily Plan Cost Item object from the cache.",
        "description": "Individual breakdown of a daily plan cost item for a Daily Plan export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_cost_item/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_daily_plan_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_cost_item/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Daily Plan Cost Item"
        ],
        "summary": "Gets one Daily Plan Cost Item object from the cache.",
        "description": "Individual breakdown of a daily plan cost item for a Daily Plan export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_cost_item/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_daily_plan_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_cost_item/cache/CostItemId/{DailyPlanCacheId}/{CostItemId}": {
      "get": {
        "tags": [
          "Daily Plan Cost Item"
        ],
        "summary": "Gets one Daily Plan Cost Item object from the cache.",
        "description": "Individual breakdown of a daily plan cost item for a Daily Plan export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_cost_item/cache/CostItemId/{DailyPlanCacheId,CostItemId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "DailyPlanCacheId",
            "in": "path",
            "description": "The DailyPlanCacheId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CostItemId",
            "in": "path",
            "description": "The CostItemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_daily_plan_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/employee_cost_item/cache": {
      "get": {
        "tags": [
          "Employee Cost Item"
        ],
        "summary": "Gets all Employee Cost Item objects from the cache.",
        "description": "Individual breakdown of an employee cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/employee_cost_item/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_employee_cost_item_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/employee_cost_item/cache/search": {
      "post": {
        "tags": [
          "Employee Cost Item"
        ],
        "summary": "Search through Employee Cost Item objects in the data cache",
        "description": "Individual breakdown of an employee cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/employee_cost_item/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_employee_cost_item_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/employee_cost_item/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Employee Cost Item"
        ],
        "summary": "Gets one Employee Cost Item object from the cache.",
        "description": "Individual breakdown of an employee cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/employee_cost_item/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_employee_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/employee_cost_item/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Employee Cost Item"
        ],
        "summary": "Gets one Employee Cost Item object from the cache.",
        "description": "Individual breakdown of an employee cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/employee_cost_item/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_employee_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/employee_cost_item/cache/EmployeeCostItemId/{DailyPlanCostItemCacheId}/{EmployeeId}": {
      "get": {
        "tags": [
          "Employee Cost Item"
        ],
        "summary": "Gets one Employee Cost Item object from the cache.",
        "description": "Individual breakdown of an employee cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/employee_cost_item/cache/EmployeeCostItemId/{DailyPlanCostItemCacheId,EmployeeId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "DailyPlanCostItemCacheId",
            "in": "path",
            "description": "The DailyPlanCostItemCacheId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmployeeId",
            "in": "path",
            "description": "The EmployeeId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_employee_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_cost_item/cache": {
      "get": {
        "tags": [
          "Equipment Cost Item"
        ],
        "summary": "Gets all Equipment Cost Item objects from the cache.",
        "description": "Individual breakdown of an equipment cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_cost_item/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_equipment_cost_item_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_cost_item/cache/search": {
      "post": {
        "tags": [
          "Equipment Cost Item"
        ],
        "summary": "Search through Equipment Cost Item objects in the data cache",
        "description": "Individual breakdown of an equipment cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_cost_item/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_equipment_cost_item_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_cost_item/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Equipment Cost Item"
        ],
        "summary": "Gets one Equipment Cost Item object from the cache.",
        "description": "Individual breakdown of an equipment cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_cost_item/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_cost_item/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Equipment Cost Item"
        ],
        "summary": "Gets one Equipment Cost Item object from the cache.",
        "description": "Individual breakdown of an equipment cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_cost_item/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_cost_item/cache/EquipmentCostItemId/{DailyPlanCostItemCacheId}/{EquipmentId}": {
      "get": {
        "tags": [
          "Equipment Cost Item"
        ],
        "summary": "Gets one Equipment Cost Item object from the cache.",
        "description": "Individual breakdown of an equipment cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/equipment_cost_item/cache/EquipmentCostItemId/{DailyPlanCostItemCacheId,EquipmentId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "DailyPlanCostItemCacheId",
            "in": "path",
            "description": "The DailyPlanCostItemCacheId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EquipmentId",
            "in": "path",
            "description": "The EquipmentId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_equipment_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/component_cost_item/cache": {
      "get": {
        "tags": [
          "Component Cost Item"
        ],
        "summary": "Gets all Component Cost Item objects from the cache.",
        "description": "Individual breakdown of an employee cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/component_cost_item/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_component_cost_item_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/component_cost_item/cache/search": {
      "post": {
        "tags": [
          "Component Cost Item"
        ],
        "summary": "Search through Component Cost Item objects in the data cache",
        "description": "Individual breakdown of an employee cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/component_cost_item/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_component_cost_item_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/component_cost_item/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Component Cost Item"
        ],
        "summary": "Gets one Component Cost Item object from the cache.",
        "description": "Individual breakdown of an employee cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/component_cost_item/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_component_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/component_cost_item/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Component Cost Item"
        ],
        "summary": "Gets one Component Cost Item object from the cache.",
        "description": "Individual breakdown of an employee cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/component_cost_item/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_component_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/component_cost_item/cache/ComponentCostItemId/{DailyPlanCostItemCacheId}/{ComponentId}": {
      "get": {
        "tags": [
          "Component Cost Item"
        ],
        "summary": "Gets one Component Cost Item object from the cache.",
        "description": "Individual breakdown of an employee cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/component_cost_item/cache/ComponentCostItemId/{DailyPlanCostItemCacheId,ComponentId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "DailyPlanCostItemCacheId",
            "in": "path",
            "description": "The DailyPlanCostItemCacheId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ComponentId",
            "in": "path",
            "description": "The ComponentId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_component_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/committed_cost/cache": {
      "get": {
        "tags": [
          "Committed Cost"
        ],
        "summary": "Gets all Committed Cost objects from the cache.",
        "description": "InEight Commited Cost push request. This request indicates to the consumer of what date range to get cost data for a project. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/committed_cost/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_committed_cost_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/committed_cost/cache/search": {
      "post": {
        "tags": [
          "Committed Cost"
        ],
        "summary": "Search through Committed Cost objects in the data cache",
        "description": "InEight Commited Cost push request. This request indicates to the consumer of what date range to get cost data for a project. ",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/committed_cost/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_committed_cost_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/committed_cost/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Committed Cost"
        ],
        "summary": "Gets one Committed Cost object from the cache.",
        "description": "InEight Commited Cost push request. This request indicates to the consumer of what date range to get cost data for a project. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/committed_cost/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_committed_cost_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/committed_cost/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Committed Cost"
        ],
        "summary": "Gets one Committed Cost object from the cache.",
        "description": "InEight Commited Cost push request. This request indicates to the consumer of what date range to get cost data for a project. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/committed_cost/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_committed_cost_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/committed_cost/cache/LogToken/{LogToken}": {
      "get": {
        "tags": [
          "Committed Cost"
        ],
        "summary": "Gets one Committed Cost object from the cache.",
        "description": "InEight Commited Cost push request. This request indicates to the consumer of what date range to get cost data for a project. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/committed_cost/cache/LogToken/{LogToken}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "LogToken",
            "in": "path",
            "description": "The LogToken portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_committed_cost_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/committed_cost/actions/closeout": {
      "post": {
        "tags": [
          "Committed Cost"
        ],
        "summary": "Executes the Closeout action for the Committed Cost data object.",
        "description": "Closes out the CommittedCost request from InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/committed_cost/actions/closeout",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "ProjectDisplay",
                  "LogToken"
                ],
                "type": "object",
                "properties": {
                  "ProjectDisplay": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "LogToken": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "CommittedCost": {
                    "type": "array",
                    "items": {
                      "required": [
                        "PhaseCode",
                        "CBSPosition",
                        "OpenCommitment",
                        "TotalCommitment"
                      ],
                      "type": "object",
                      "properties": {
                        "PhaseCode": {
                          "type": "string"
                        },
                        "CBSPosition": {
                          "type": "string"
                        },
                        "OpenCommitment": {
                          "type": "object",
                          "properties": {
                            "CostCategories": {
                              "type": "array",
                              "items": {
                                "required": [
                                  "Name",
                                  "Amount"
                                ],
                                "properties": {
                                  "Name": {
                                    "type": "string"
                                  },
                                  "Amount": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "TotalCommitment": {
                          "type": "object",
                          "properties": {
                            "CostCategories": {
                              "type": "array",
                              "properties": {
                                "CostCategories": {
                                  "type": "array",
                                  "items": {
                                    "required": [
                                      "Name",
                                      "Amount"
                                    ],
                                    "properties": {
                                      "Name": {
                                        "type": "string"
                                      },
                                      "Amount": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "IsAlreadyClosed"
                  ],
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "IsAlreadyClosed": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "properties": {
                        "HttpStatus": {
                          "type": "integer"
                        },
                        "Message": {
                          "type": "string"
                        },
                        "ErrorText": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/committed_cost/actions/add": {
      "post": {
        "tags": [
          "Committed Cost"
        ],
        "summary": "Executes the Add action for the Committed Cost data object.",
        "description": "Add committed cost to the specified project",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/committed_cost/actions/add",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "ProjectDisplay",
                  "CommittedCost",
                  "SourceSystemId",
                  "SourceSystemName",
                  "LogToken"
                ],
                "type": "object",
                "properties": {
                  "ProjectDisplay": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Identifies the project associated with the Committed Cost request that was received. The ID is unique to a project and its SourceSystemId.",
                    "example": "TestProject"
                  },
                  "CommittedCost": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "PhaseCode": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "WBS phase code associated with the cost item for the Actuals record.",
                          "nullable": true,
                          "example": "1002"
                        },
                        "CBSPosition": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "CBS Position associated with the cost item for the Actuals record.",
                          "example": "1.2"
                        },
                        "OpenCommitment": {
                          "required": [
                            "CostCategories"
                          ],
                          "type": "object",
                          "properties": {
                            "CostCategories": {
                              "type": "array",
                              "items": {
                                "required": [
                                  "Name",
                                  "Amount"
                                ],
                                "type": "object",
                                "properties": {
                                  "Name": {
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Cost category name",
                                    "example": "RE Repair Labor"
                                  },
                                  "Amount": {
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field.",
                                    "example": "5000"
                                  }
                                }
                              },
                              "description": "Array header of the cost categories records.  All fields within this array may be repeated for each cost item that has data."
                            }
                          }
                        },
                        "TotalCommitment": {
                          "required": [
                            "CostCategories"
                          ],
                          "type": "object",
                          "properties": {
                            "CostCategories": {
                              "type": "array",
                              "items": {
                                "required": [
                                  "Name",
                                  "Amount"
                                ],
                                "type": "object",
                                "properties": {
                                  "Name": {
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Cost category name",
                                    "example": "RE Repair Labor"
                                  },
                                  "Amount": {
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field.",
                                    "example": "5000"
                                  }
                                }
                              },
                              "description": "Array header of the cost categories records.  All fields within this array may be repeated for each cost item that has data."
                            }
                          }
                        }
                      }
                    },
                    "description": "Array header of the Committed Cost records for Actuals. All fields within this array may be repeated for each Actual that has data."
                  },
                  "SourceSystemId": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Identifier created by the \"system of record\" and used in all system communications as the primary method of specifying a unique record. This field does not display in normal use of Project Suite applications and may contain internal identifiers such as a GUID that is not understandable by typical system users.",
                    "example": "81de2acd1cf74401bfdd04e1db9b3944"
                  },
                  "SourceSystemName": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field.",
                    "nullable": true,
                    "example": "External System"
                  },
                  "LogToken": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Identifier created by the \"system of record\" and used in all system communications as the primary method of specifying a unique record. This field does not display in normal use of Project Suite applications and may contain internal identifiers such as a GUID that is not understandable by typical system users.",
                    "example": "81de2acd1cf74401bfdd04e1db9b3944"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "CommittedCost": {
                      "required": [
                        "ProjectDisplay",
                        "CommittedCost",
                        "SourceSystemId",
                        "SourceSystemName",
                        "LogToken"
                      ],
                      "type": "object",
                      "properties": {
                        "ProjectDisplay": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "Identifies the project associated with the Committed Cost request that was received. The ID is unique to a project and its SourceSystemId.",
                          "nullable": true,
                          "example": "TestProject"
                        },
                        "CommittedCost": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "PhaseCode": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "WBS phase code associated with the cost item for the Actuals record.",
                                "nullable": true,
                                "example": "1002"
                              },
                              "CBSPosition": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "CBS Position associated with the cost item for the Actuals record.",
                                "example": "1.2"
                              },
                              "OpenCommitment": {
                                "required": [
                                  "CostCategories"
                                ],
                                "properties": {
                                  "CostCategories": {
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "Name",
                                        "Amount"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "Name": {
                                          "maxLength": 30,
                                          "type": "string",
                                          "description": "Cost category name",
                                          "example": "RE Repair Labor"
                                        },
                                        "Amount": {
                                          "maxLength": 30,
                                          "type": "string",
                                          "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field.",
                                          "example": "5000"
                                        }
                                      }
                                    },
                                    "description": "Array header of the cost categories records.  All fields within this array may be repeated for each cost item that has data."
                                  }
                                }
                              },
                              "TotalCommitment": {
                                "required": [
                                  "CostCategories"
                                ],
                                "properties": {
                                  "CostCategories": {
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "Name",
                                        "Amount"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "Name": {
                                          "maxLength": 30,
                                          "type": "string",
                                          "description": "Cost category name",
                                          "example": "RE Repair Labor"
                                        },
                                        "Amount": {
                                          "maxLength": 30,
                                          "type": "string",
                                          "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field.",
                                          "example": "5000"
                                        }
                                      }
                                    },
                                    "description": "Array header of the cost categories records.  All fields within this array may be repeated for each cost item that has data."
                                  }
                                }
                              }
                            }
                          },
                          "description": "Array header of the Committed Cost records for Actuals. All fields within this array may be repeated for each Actual that has data."
                        },
                        "SourceSystemId": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "Identifier created by the \"system of record\" and used in all system communications as the primary method of specifying a unique record. This field does not display in normal use of Project Suite applications and may contain internal identifiers such as a GUID that is not understandable by typical system users.",
                          "example": "81de2acd1cf74401bfdd04e1db9b3944"
                        },
                        "SourceSystemName": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field.",
                          "nullable": true,
                          "example": "External System"
                        },
                        "LogToken": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "Identifier created by the \"system of record\" and used in all system communications as the primary method of specifying a unique record. This field does not display in normal use of Project Suite applications and may contain internal identifiers such as a GUID that is not understandable by typical system users.",
                          "example": "81de2acd1cf74401bfdd04e1db9b3944"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_mh_cost/cache": {
      "get": {
        "tags": [
          "Actual Man Hour Cost"
        ],
        "summary": "Gets all Actual Man Hour Cost objects from the cache.",
        "description": "InEight Actual Man Hour Cost push request. This request indicates to the consumer of what date range to get cost data for a project. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_mh_cost/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_actual_mh_cost_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_mh_cost/cache/search": {
      "post": {
        "tags": [
          "Actual Man Hour Cost"
        ],
        "summary": "Search through Actual Man Hour Cost objects in the data cache",
        "description": "InEight Actual Man Hour Cost push request. This request indicates to the consumer of what date range to get cost data for a project. ",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_mh_cost/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_actual_mh_cost_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_mh_cost/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Actual Man Hour Cost"
        ],
        "summary": "Gets one Actual Man Hour Cost object from the cache.",
        "description": "InEight Actual Man Hour Cost push request. This request indicates to the consumer of what date range to get cost data for a project. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_mh_cost/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_actual_mh_cost_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_mh_cost/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Actual Man Hour Cost"
        ],
        "summary": "Gets one Actual Man Hour Cost object from the cache.",
        "description": "InEight Actual Man Hour Cost push request. This request indicates to the consumer of what date range to get cost data for a project. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_mh_cost/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_actual_mh_cost_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_mh_cost/cache/LogToken/{LogToken}": {
      "get": {
        "tags": [
          "Actual Man Hour Cost"
        ],
        "summary": "Gets one Actual Man Hour Cost object from the cache.",
        "description": "InEight Actual Man Hour Cost push request. This request indicates to the consumer of what date range to get cost data for a project. ",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_mh_cost/cache/LogToken/{LogToken}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "LogToken",
            "in": "path",
            "description": "The LogToken portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_actual_mh_cost_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_mh_cost/actions/closeout": {
      "post": {
        "tags": [
          "Actual Man Hour Cost"
        ],
        "summary": "Executes the Closeout action for the Actual Man Hour Cost data object.",
        "description": "Closes out Actuals requests from InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_mh_cost/actions/closeout",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "ProjectId",
                  "LogToken"
                ],
                "type": "object",
                "properties": {
                  "ProjectId": {
                    "maxLength": 25,
                    "type": "string"
                  },
                  "LogToken": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "Actuals": {
                    "type": "array",
                    "items": {
                      "required": [
                        "PeriodEnd",
                        "PeriodStart",
                        "Cost"
                      ],
                      "type": "object",
                      "properties": {
                        "PhaseCode": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "LaborHours": {
                          "pattern": "^[-+]?[0-9]{1,22}(?:.[0-9]{1,11})?$",
                          "type": "string"
                        },
                        "EquipmentHours": {
                          "pattern": "^[-+]?[0-9]{1,22}(?:.[0-9]{1,11})?$",
                          "type": "string"
                        },
                        "Cost": {
                          "required": [
                            "CostCategories"
                          ],
                          "type": "object",
                          "properties": {
                            "CostCategories": {
                              "required": [
                                "Name",
                                "Amount"
                              ],
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "Name": {
                                    "type": "string"
                                  },
                                  "Amount": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "PeriodStart": {
                          "maxLength": 25,
                          "type": "string"
                        },
                        "PeriodEnd": {
                          "maxLength": 25,
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "IsAlreadyClosed"
                  ],
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "IsAlreadyClosed": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "properties": {
                        "HttpStatus": {
                          "type": "integer"
                        },
                        "Message": {
                          "type": "string"
                        },
                        "ErrorText": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals/cache": {
      "get": {
        "tags": [
          "Actuals"
        ],
        "summary": "Gets all Actuals objects from the cache.",
        "description": "Add actuals to the specified project",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_actuals_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals/cache/search": {
      "post": {
        "tags": [
          "Actuals"
        ],
        "summary": "Search through Actuals objects in the data cache",
        "description": "Add actuals to the specified project",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_actuals_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Actuals"
        ],
        "summary": "Gets one Actuals object from the cache.",
        "description": "Add actuals to the specified project",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_actuals_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Actuals"
        ],
        "summary": "Gets one Actuals object from the cache.",
        "description": "Add actuals to the specified project",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_actuals_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals/cache/SourceSystemId/{SourceSystemId}": {
      "get": {
        "tags": [
          "Actuals"
        ],
        "summary": "Gets one Actuals object from the cache.",
        "description": "Add actuals to the specified project",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals/cache/SourceSystemId/{SourceSystemId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "SourceSystemId",
            "in": "path",
            "description": "The SourceSystemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_actuals_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals/actions/add": {
      "post": {
        "tags": [
          "Actuals"
        ],
        "summary": "Executes the Add action for the Actuals data object.",
        "description": "Add actuals to InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals/actions/add",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "ProjectDisplay",
                  "Actuals",
                  "SourceSystemId"
                ],
                "type": "object",
                "properties": {
                  "ProjectDisplay": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Identifies the project associated with the Actuals request that was received. The ID is unique to a project and is its SourceSystemId.",
                    "example": "TestProject"
                  },
                  "Actuals": {
                    "maxItems": 3000,
                    "type": "array",
                    "items": {
                      "required": [
                        "PostingDate"
                      ],
                      "type": "object",
                      "properties": {
                        "PhaseCode": {
                          "maxLength": 24,
                          "type": "string",
                          "description": "WBS phase code associated with the cost item for the Actuals record.",
                          "nullable": true,
                          "example": "1002"
                        },
                        "CBSPositionCode": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "CBS Position Code associated with the cost item for the Actuals record.",
                          "nullable": true,
                          "example": "1.1"
                        },
                        "PostingDate": {
                          "maxLength": 25,
                          "type": "string",
                          "description": "A date that indicates which financial period the cost, manhours, equipment hours or quantities will be associated to.",
                          "example": "10/18/2018"
                        },
                        "Notes": {
                          "maxLength": 250,
                          "type": "string",
                          "description": "Additional information about the transaction",
                          "nullable": true,
                          "example": "Maintenance"
                        },
                        "Quantity": {
                          "type": "string",
                          "description": "Claimed amount of operational quantity for the cost item",
                          "nullable": true,
                          "example": "5"
                        },
                        "ManHours": {
                          "type": "string",
                          "description": "Claimed amount of manhours for the cost item",
                          "nullable": true,
                          "example": "4"
                        },
                        "EquipmentHours": {
                          "type": "string",
                          "description": "Claimed amount of equipment hours for the cost item",
                          "nullable": true,
                          "example": "5"
                        },
                        "Cost": {
                          "required": [
                            "CostCategories"
                          ],
                          "type": "object",
                          "properties": {
                            "CostCategories": {
                              "type": "array",
                              "items": {
                                "required": [
                                  "Name",
                                  "Amount"
                                ],
                                "type": "object",
                                "properties": {
                                  "Name": {
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Cost category name",
                                    "example": "RE Repair Labor"
                                  },
                                  "Amount": {
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field.",
                                    "example": "5000"
                                  }
                                }
                              },
                              "description": "Array header of the cost categories records.  All fields within this array may be repeated for each cost item that has data."
                            }
                          }
                        }
                      }
                    },
                    "description": "Array header of the cost item records for Actuals. All fields within this array may be repeated for each cost item that has data."
                  },
                  "SourceSystemId": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Identifier created by the \"system of record\" and used in all system communications as the primary method of specifying a unique record. This field does not display in normal use of Project Suite applications and may contain internal identifiers such as a GUID that is not understandable by typical system users.",
                    "example": "81de2acd1cf74401bfdd04e1db9b3944"
                  },
                  "SourceSystemName": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field.",
                    "nullable": true,
                    "example": "External System"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "Actuals": {
                      "required": [
                        "ProjectDisplay",
                        "Actuals",
                        "SourceSystemId"
                      ],
                      "type": "object",
                      "properties": {
                        "ProjectDisplay": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "Identifies the project associated with the Actuals request that was received. The ID is unique to a project and is its SourceSystemId.",
                          "nullable": true,
                          "example": "TestProject"
                        },
                        "Actuals": {
                          "type": "array",
                          "items": {
                            "required": [
                              "PostingDate"
                            ],
                            "type": "object",
                            "properties": {
                              "PhaseCode": {
                                "maxLength": 24,
                                "type": "string",
                                "description": "WBS phase code associated with the cost item for the Actuals record.",
                                "nullable": true,
                                "example": "1002"
                              },
                              "CBSPositionCode": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "CBS Position Code associated with the cost item for the Actuals record.",
                                "nullable": true,
                                "example": "1.1"
                              },
                              "PostingDate": {
                                "maxLength": 25,
                                "type": "string",
                                "description": "A date that indicates which financial period the cost, manhours, equipment hours or quantities will be associated to.",
                                "example": "10/18/2018"
                              },
                              "Notes": {
                                "maxLength": 250,
                                "type": "string",
                                "description": "Additional information about the transaction",
                                "nullable": true,
                                "example": "Maintenance"
                              },
                              "Quantity": {
                                "type": "string",
                                "description": "Claimed amount of operational quantity for the cost item",
                                "nullable": true,
                                "example": "5"
                              },
                              "ManHours": {
                                "type": "string",
                                "description": "Claimed amount of manhours for the cost item",
                                "nullable": true,
                                "example": "4"
                              },
                              "EquipmentHours": {
                                "type": "string",
                                "description": "Claimed amount of equipment hours for the cost item",
                                "nullable": true,
                                "example": "5"
                              },
                              "Cost": {
                                "required": [
                                  "CostCategories"
                                ],
                                "type": "object",
                                "properties": {
                                  "CostCategories": {
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "Name",
                                        "Amount"
                                      ],
                                      "type": "object",
                                      "properties": {
                                        "Name": {
                                          "maxLength": 30,
                                          "type": "string",
                                          "description": "Cost category name",
                                          "example": "RE Repair Labor"
                                        },
                                        "Amount": {
                                          "maxLength": 30,
                                          "type": "string",
                                          "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field.",
                                          "example": "5000"
                                        }
                                      }
                                    },
                                    "description": "Array header of the cost categories records.  All fields within this array may be repeated for each cost item that has data."
                                  }
                                }
                              }
                            }
                          },
                          "description": "Array header of the cost item records for Actuals. All fields within this array may be repeated for each cost item that has data."
                        },
                        "SourceSystemId": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "Identifier created by the \"system of record\" and used in all system communications as the primary method of specifying a unique record. This field does not display in normal use of Project Suite applications and may contain internal identifiers such as a GUID that is not understandable by typical system users.",
                          "example": "81de2acd1cf74401bfdd04e1db9b3944"
                        },
                        "SourceSystemName": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field.",
                          "nullable": true,
                          "example": "External System"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_wos/cache": {
      "get": {
        "tags": [
          "Daily Plan Work Orders"
        ],
        "summary": "Gets all Daily Plan Work Orders objects from the cache.",
        "description": "This integration allows a master list of work orders generated by an external system to be maintained within InEight Plan. Work orders can be selected within a daily plan when recording employee hours to show what the employee was specifically working on and relate that effort back to planned maintenance activities and estimated maintenance costs.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_wos/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_daily_plan_wos_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_wos/cache/search": {
      "post": {
        "tags": [
          "Daily Plan Work Orders"
        ],
        "summary": "Search through Daily Plan Work Orders objects in the data cache",
        "description": "This integration allows a master list of work orders generated by an external system to be maintained within InEight Plan. Work orders can be selected within a daily plan when recording employee hours to show what the employee was specifically working on and relate that effort back to planned maintenance activities and estimated maintenance costs.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_wos/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_daily_plan_wos_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_wos/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Daily Plan Work Orders"
        ],
        "summary": "Gets one Daily Plan Work Orders object from the cache.",
        "description": "This integration allows a master list of work orders generated by an external system to be maintained within InEight Plan. Work orders can be selected within a daily plan when recording employee hours to show what the employee was specifically working on and relate that effort back to planned maintenance activities and estimated maintenance costs.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_wos/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_daily_plan_wos_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_wos/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Daily Plan Work Orders"
        ],
        "summary": "Gets one Daily Plan Work Orders object from the cache.",
        "description": "This integration allows a master list of work orders generated by an external system to be maintained within InEight Plan. Work orders can be selected within a daily plan when recording employee hours to show what the employee was specifically working on and relate that effort back to planned maintenance activities and estimated maintenance costs.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_wos/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_daily_plan_wos_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_wos/cache/SourceSystemId/{SourceSystemId}": {
      "get": {
        "tags": [
          "Daily Plan Work Orders"
        ],
        "summary": "Gets one Daily Plan Work Orders object from the cache.",
        "description": "This integration allows a master list of work orders generated by an external system to be maintained within InEight Plan. Work orders can be selected within a daily plan when recording employee hours to show what the employee was specifically working on and relate that effort back to planned maintenance activities and estimated maintenance costs.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_wos/cache/SourceSystemId/{SourceSystemId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "SourceSystemId",
            "in": "path",
            "description": "The SourceSystemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_daily_plan_wos_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_wos/actions/add": {
      "post": {
        "tags": [
          "Daily Plan Work Orders"
        ],
        "summary": "Executes the Add action for the Daily Plan Work Orders data object.",
        "description": "Adds a daily plan work order to the specific project ID (DisplayId) for the given equipment ID (SourceSystemId)",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/daily_plan_wos/actions/add",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "WorkOrders": {
                    "type": "array",
                    "items": {
                      "required": [
                        "WorkOrderDisplayId",
                        "EquipmentSourceSystemId",
                        "WorkOrderStatusDisplay",
                        "SourceSystemId",
                        "SourceSystemName",
                        "WorkOrderTypeDisplay",
                        "ProjectDisplay",
                        "Description"
                      ],
                      "type": "object",
                      "properties": {
                        "WorkOrderDisplayId": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique identifier of the work order created by the system of record that is understood by users in InEight cloud platform when searching for work orders."
                        },
                        "EquipmentSourceSystemId": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique identifier of the equipment that the work order is for. This must match an existing record from the Equipment integration."
                        },
                        "WorkOrderStatusDisplay": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Status to be displayed for the work order in InEight cloud platform. Possible values that can be sent for this field are Open and Closed "
                        },
                        "Description": {
                          "maxLength": 100,
                          "minLength": 0,
                          "type": "string",
                          "description": "Text name and description of the work order to help users when searching for work orders."
                        },
                        "SourceSystemId": {
                          "maxLength": 100,
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique identifier for the work order that is created by the system of record and used as the method of specifying records when exchanging data between systems."
                        },
                        "SourceSystemName": {
                          "maxLength": 100,
                          "minLength": 0,
                          "type": "string",
                          "description": "Name of the source system from where the data is sourced."
                        },
                        "WorkOrderTypeDisplay": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Text value representing the type of work order that is shown when users search for work orders in the InEight cloud platform. The values allowed for this field are preloaded into the InEight cloud platform and cannot be edited in current versions. Possible values are: '500','Preventative Maintenance', '510','Engine & Exhaust', '520','Power Train', '530','Frame & Cab', '540','Undercarriage Or Tires', '550','Implements', '560','Electrical System', '570','Hydraulic System', '580','Cooling System', '590','Brakes Or Steering System', '600','Air Or Lube System', '610','Standing Work Order', 'NA','Not Applicable'"
                        },
                        "ProjectDisplay": {
                          "maxLength": 200,
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique identifier (DisplayId) of the project that the work order is assigned."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "WorkOrders": {
                      "type": "array",
                      "items": {
                        "required": [
                          "WorkOrderDisplayId",
                          "EquipmentSourceSystemId",
                          "WorkOrderStatusDisplay",
                          "SourceSystemId",
                          "SourceSystemName",
                          "WorkOrderTypeDisplay",
                          "ProjectDisplay",
                          "Description"
                        ],
                        "type": "object",
                        "properties": {
                          "WorkOrderDisplayId": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Unique identifier of the work order created by the system of record that is understood by users in InEight cloud platform when searching for work orders."
                          },
                          "EquipmentSourceSystemId": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Unique identifier of the equipment that the work order is for. This must match an existing record from the Equipment integration."
                          },
                          "WorkOrderStatusDisplay": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Status to be displayed for the work order in InEight cloud platform. Possible values that can be sent for this field are Open and Closed "
                          },
                          "Description": {
                            "maxLength": 100,
                            "minLength": 0,
                            "type": "string",
                            "description": "Text name and description of the work order to help users when searching for work orders."
                          },
                          "SourceSystemId": {
                            "maxLength": 100,
                            "minLength": 0,
                            "type": "string",
                            "description": "Unique identifier for the work order that is created by the system of record and used as the method of specifying records when exchanging data between systems."
                          },
                          "SourceSystemName": {
                            "maxLength": 100,
                            "minLength": 0,
                            "type": "string",
                            "description": "Name of the source system from where the data is sourced."
                          },
                          "WorkOrderTypeDisplay": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Text value representing the type of work order that is shown when users search for work orders in the InEight cloud platform. The values allowed for this field are preloaded into the InEight cloud platform and cannot be edited in current versions. Possible values are: '500','Preventative Maintenance', '510','Engine & Exhaust', '520','Power Train', '530','Frame & Cab', '540','Undercarriage Or Tires', '550','Implements', '560','Electrical System', '570','Hydraulic System', '580','Cooling System', '590','Brakes Or Steering System', '600','Air Or Lube System', '610','Standing Work Order', 'NA','Not Applicable'"
                          },
                          "ProjectDisplay": {
                            "maxLength": 200,
                            "minLength": 0,
                            "type": "string",
                            "description": "Unique identifier (DisplayId) of the project that the work order is assigned."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/maint_cost_item/cache": {
      "get": {
        "tags": [
          "Maintenance Cost Item"
        ],
        "summary": "Gets all Maintenance Cost Item objects from the cache.",
        "description": "Individual breakdown of an maintenance cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/maint_cost_item/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_maint_cost_item_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/maint_cost_item/cache/search": {
      "post": {
        "tags": [
          "Maintenance Cost Item"
        ],
        "summary": "Search through Maintenance Cost Item objects in the data cache",
        "description": "Individual breakdown of an maintenance cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/maint_cost_item/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_maint_cost_item_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/maint_cost_item/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Maintenance Cost Item"
        ],
        "summary": "Gets one Maintenance Cost Item object from the cache.",
        "description": "Individual breakdown of an maintenance cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/maint_cost_item/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_maint_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/maint_cost_item/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Maintenance Cost Item"
        ],
        "summary": "Gets one Maintenance Cost Item object from the cache.",
        "description": "Individual breakdown of an maintenance cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/maint_cost_item/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_maint_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/maint_cost_item/cache/MaintCostItemId/{EmployeeId}/{WorkOrderId}/{MaintenanceEquipmentId}": {
      "get": {
        "tags": [
          "Maintenance Cost Item"
        ],
        "summary": "Gets one Maintenance Cost Item object from the cache.",
        "description": "Individual breakdown of an maintenance cost item for a Daily Plan Cost Item export from InEight",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/maint_cost_item/cache/MaintCostItemId/{EmployeeId,WorkOrderId,MaintenanceEquipmentId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "EmployeeId",
            "in": "path",
            "description": "The EmployeeId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkOrderId",
            "in": "path",
            "description": "The WorkOrderId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaintenanceEquipmentId",
            "in": "path",
            "description": "The MaintenanceEquipmentId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_maint_cost_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/pay_items/cache": {
      "get": {
        "tags": [
          "Pay Items"
        ],
        "summary": "Gets all Pay Items objects from the cache.",
        "description": "Pay Items",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/pay_items/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_pay_items_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/pay_items/cache/search": {
      "post": {
        "tags": [
          "Pay Items"
        ],
        "summary": "Search through Pay Items objects in the data cache",
        "description": "Pay Items",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/pay_items/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_pay_items_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/pay_items/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Pay Items"
        ],
        "summary": "Gets one Pay Items object from the cache.",
        "description": "Pay Items",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/pay_items/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_pay_items_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/pay_items/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Pay Items"
        ],
        "summary": "Gets one Pay Items object from the cache.",
        "description": "Pay Items",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/pay_items/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_pay_items_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/pay_items/cache/PayItemId/{ProjectDisplayNumber}/{PayItemNumber}": {
      "get": {
        "tags": [
          "Pay Items"
        ],
        "summary": "Gets one Pay Items object from the cache.",
        "description": "Pay Items",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/pay_items/cache/PayItemId/{ProjectDisplayNumber,PayItemNumber}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ProjectDisplayNumber",
            "in": "path",
            "description": "The ProjectDisplayNumber portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PayItemNumber",
            "in": "path",
            "description": "The PayItemNumber portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_pay_items_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/time_card/cache": {
      "get": {
        "tags": [
          "Time Card"
        ],
        "summary": "Gets all Time Card objects from the cache.",
        "description": "Time Card\nhttps://portal-apitest.ineight.com/docs/services/integrations-api-v1-0/operations/TimeCard_Get?",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/time_card/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_time_card_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/time_card/cache/search": {
      "post": {
        "tags": [
          "Time Card"
        ],
        "summary": "Search through Time Card objects in the data cache",
        "description": "Time Card\nhttps://portal-apitest.ineight.com/docs/services/integrations-api-v1-0/operations/TimeCard_Get?",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/time_card/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_time_card_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/time_card/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Time Card"
        ],
        "summary": "Gets one Time Card object from the cache.",
        "description": "Time Card\nhttps://portal-apitest.ineight.com/docs/services/integrations-api-v1-0/operations/TimeCard_Get?",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/time_card/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_time_card_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/time_card/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Time Card"
        ],
        "summary": "Gets one Time Card object from the cache.",
        "description": "Time Card\nhttps://portal-apitest.ineight.com/docs/services/integrations-api-v1-0/operations/TimeCard_Get?",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/time_card/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_time_card_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/time_card/cache/timecardid/{TimecardId}": {
      "get": {
        "tags": [
          "Time Card"
        ],
        "summary": "Gets one Time Card object from the cache.",
        "description": "Time Card\nhttps://portal-apitest.ineight.com/docs/services/integrations-api-v1-0/operations/TimeCard_Get?",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/time_card/cache/timecardid/{TimecardId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "TimecardId",
            "in": "path",
            "description": "The TimecardId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_time_card_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_quantities/cache": {
      "get": {
        "tags": [
          "Actual Quantities"
        ],
        "summary": "Gets all Actual Quantities objects from the cache.",
        "description": "Actual Quantities",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_quantities/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_actual_quantities_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_quantities/cache/search": {
      "post": {
        "tags": [
          "Actual Quantities"
        ],
        "summary": "Search through Actual Quantities objects in the data cache",
        "description": "Actual Quantities",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_quantities/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_actual_quantities_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_quantities/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Actual Quantities"
        ],
        "summary": "Gets one Actual Quantities object from the cache.",
        "description": "Actual Quantities",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_quantities/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_actual_quantities_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_quantities/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Actual Quantities"
        ],
        "summary": "Gets one Actual Quantities object from the cache.",
        "description": "Actual Quantities",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actual_quantities/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_actual_quantities_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/tc_confirmation/cache": {
      "get": {
        "tags": [
          "TimeCard Confirmation"
        ],
        "summary": "Gets all TimeCard Confirmation objects from the cache.",
        "description": "The Time Card Confirmation Import integration allows external systems to report on the success or failure to\nprocess time cards obtained from Time Center and update a status to support a business workflow.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/tc_confirmation/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_tc_confirmation_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/tc_confirmation/cache/search": {
      "post": {
        "tags": [
          "TimeCard Confirmation"
        ],
        "summary": "Search through TimeCard Confirmation objects in the data cache",
        "description": "The Time Card Confirmation Import integration allows external systems to report on the success or failure to\nprocess time cards obtained from Time Center and update a status to support a business workflow.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/tc_confirmation/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_tc_confirmation_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/tc_confirmation/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "TimeCard Confirmation"
        ],
        "summary": "Gets one TimeCard Confirmation object from the cache.",
        "description": "The Time Card Confirmation Import integration allows external systems to report on the success or failure to\nprocess time cards obtained from Time Center and update a status to support a business workflow.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/tc_confirmation/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_tc_confirmation_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/tc_confirmation/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "TimeCard Confirmation"
        ],
        "summary": "Gets one TimeCard Confirmation object from the cache.",
        "description": "The Time Card Confirmation Import integration allows external systems to report on the success or failure to\nprocess time cards obtained from Time Center and update a status to support a business workflow.",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/tc_confirmation/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_tc_confirmation_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/tc_confirmation/actions/confirm": {
      "post": {
        "tags": [
          "TimeCard Confirmation"
        ],
        "summary": "Executes the Confirmation action for the TimeCard Confirmation data object.",
        "description": "The Time Card Confirmation Import integration allows external systems to report on the success or failure to\nprocess time cards obtained from Time Center and update a status to support a business workflow.",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/tc_confirmation/actions/confirm",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "TimeCardId",
                  "Status"
                ],
                "type": "object",
                "properties": {
                  "TimeCardId": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "Version": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "Status": {
                    "enum": [
                      "Complete",
                      "Failed"
                    ],
                    "type": "string",
                    "description": "Available status: Complete, Failed"
                  },
                  "Errors": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "success"
                  ],
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals_logs/cache": {
      "get": {
        "tags": [
          "Actuals Logs"
        ],
        "summary": "Gets all Actuals Logs objects from the cache.",
        "description": "Callback logs from using actuals add",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals_logs/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_actuals_logs_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals_logs/cache/search": {
      "post": {
        "tags": [
          "Actuals Logs"
        ],
        "summary": "Search through Actuals Logs objects in the data cache",
        "description": "Callback logs from using actuals add",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals_logs/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_actuals_logs_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals_logs/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Actuals Logs"
        ],
        "summary": "Gets one Actuals Logs object from the cache.",
        "description": "Callback logs from using actuals add",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals_logs/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_actuals_logs_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals_logs/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Actuals Logs"
        ],
        "summary": "Gets one Actuals Logs object from the cache.",
        "description": "Callback logs from using actuals add",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals_logs/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_actuals_logs_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals_logs/cache/id/{ActionInstanceId}": {
      "get": {
        "tags": [
          "Actuals Logs"
        ],
        "summary": "Gets one Actuals Logs object from the cache.",
        "description": "Callback logs from using actuals add",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/actuals_logs/cache/id/{ActionInstanceId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ActionInstanceId",
            "in": "path",
            "description": "The ActionInstanceId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_actuals_logs_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_settings/cache": {
      "get": {
        "tags": [
          "Project Settings"
        ],
        "summary": "Gets all Project Settings objects from the cache.",
        "description": "InEight project settings data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_settings/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_project_settings_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_settings/cache/search": {
      "post": {
        "tags": [
          "Project Settings"
        ],
        "summary": "Search through Project Settings objects in the data cache",
        "description": "InEight project settings data",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_settings/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_project_settings_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_settings/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Project Settings"
        ],
        "summary": "Gets one Project Settings object from the cache.",
        "description": "InEight project settings data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_settings/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_settings_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_settings/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Project Settings"
        ],
        "summary": "Gets one Project Settings object from the cache.",
        "description": "InEight project settings data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_settings/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_settings_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_settings/cache/ProjectSettingsId/{ProjectSourceSystemId}/{ProjectSourceSystemName}": {
      "get": {
        "tags": [
          "Project Settings"
        ],
        "summary": "Gets one Project Settings object from the cache.",
        "description": "InEight project settings data",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_settings/cache/ProjectSettingsId/{ProjectSourceSystemId,ProjectSourceSystemName}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ProjectSourceSystemId",
            "in": "path",
            "description": "The ProjectSourceSystemId portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProjectSourceSystemName",
            "in": "path",
            "description": "The ProjectSourceSystemName portion of the key used to identify the object.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_project_settings_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/project_settings/actions/upsert": {
      "post": {
        "tags": [
          "Project Settings"
        ],
        "summary": "Executes the Upsert action for the Project Settings data object.",
        "description": "Update or insert a project settings record",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/project_settings/actions/upsert",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ProjectSettings": {
                    "type": "array",
                    "items": {
                      "required": [
                        "ProjectSourceSystemId",
                        "ProjectSourceSystemName",
                        "ProjectDisplayId"
                      ],
                      "type": "object",
                      "properties": {
                        "ProjectSourceSystemId": {
                          "maxLength": 200,
                          "minLength": 0,
                          "type": "string",
                          "description": "Identifier created by the system of record and used in all system communications as the primary method of specifying a unique record. This field does not display in normal use of InEight applications and can contain internal identifiers such as a GUID that is not understandable by typical system users."
                        },
                        "ProjectSourceSystemName": {
                          "maxLength": 50,
                          "minLength": 0,
                          "type": "string",
                          "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field."
                        },
                        "ProjectDisplayId": {
                          "maxLength": 200,
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique identifier that is publicly recognizable. This field is displayed in normal use of InEight applications. The value sent in this field can match SourceSystemId if there is no need to use a public versus private unique identifier."
                        },
                        "GlobalOptions": {
                          "type": "object",
                          "properties": {
                            "CostItemIntegrationBehavior": {
                              "type": "string",
                              "description": "Cost Item Integration Behavior"
                            },
                            "IsAdvancedWorkAndSchedulingFeaturesEnabled": {
                              "type": "boolean",
                              "description": "The planned duration of the project in days"
                            },
                            "IsTemplateProject": {
                              "type": "boolean"
                            },
                            "IsValidateEquipmentToProjectCurrency": {
                              "type": "boolean"
                            }
                          },
                          "description": "Use this to set Global Options of the project"
                        },
                        "ProjectInformationTags": {
                          "type": "object",
                          "properties": {
                            "ProjectInformationTag1": {
                              "maxLength": 500,
                              "minLength": 0,
                              "type": "string",
                              "description": "Project Information Tag 1"
                            },
                            "ProjectInformationTag2": {
                              "maxLength": 250,
                              "minLength": 0,
                              "type": "string",
                              "description": "Project Information Tag 2"
                            },
                            "ProjectInformationTag3": {
                              "type": "string",
                              "description": "Project Information Tag 3"
                            },
                            "ProjectInformationTag4": {
                              "type": "string",
                              "description": "Project Information Tag 4"
                            },
                            "ProjectInformationTag5": {
                              "maxLength": 255,
                              "minLength": 0,
                              "type": "string",
                              "description": "Project Information Tag 5"
                            },
                            "ProjectInformationTag6": {
                              "maxLength": 100,
                              "minLength": 0,
                              "type": "string",
                              "description": "Project Information Tag 6"
                            },
                            "ProjectInformationTag7": {
                              "maxLength": 255,
                              "minLength": 0,
                              "type": "string",
                              "description": "Project Information Tag 7"
                            },
                            "ProjectInformationTag8": {
                              "type": "string",
                              "description": "Project Information Tag 8"
                            },
                            "ProjectInformationTag9": {
                              "type": "string",
                              "description": "Project Information Tag 9"
                            },
                            "ProjectInformationTag10": {
                              "type": "string",
                              "description": "Project Information Tag 10"
                            },
                            "ProjectInformationTag11": {
                              "type": "string",
                              "description": "Project Information Tag 11"
                            },
                            "ProjectInformationTag12": {
                              "type": "string",
                              "description": "Project Information Tag 12"
                            },
                            "ProjectInformationTag13": {
                              "type": "string",
                              "description": "Project Information Tag 13"
                            },
                            "ProjectInformationTag14": {
                              "type": "string",
                              "description": "Project Information Tag 14",
                              "format": "date-time"
                            },
                            "ProjectInformationTag15": {
                              "type": "string",
                              "description": "Project Information Tag 15",
                              "format": "date-time"
                            }
                          },
                          "description": "Use this to set Information Tags of the Project."
                        },
                        "CustomLists": {
                          "type": "array",
                          "items": {
                            "required": [
                              "ListName"
                            ],
                            "type": "object",
                            "properties": {
                              "ListName": {
                                "maxLength": 250,
                                "minLength": 0,
                                "type": "string",
                                "description": "Name of the list that's added to the custom label"
                              },
                              "FieldValues": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Comma delimited array of strings with a NON-DUPLICATE list of all field values that are part of the custom list"
                              }
                            }
                          },
                          "description": "Parent field for Custom lists"
                        },
                        "FuelTypes": {
                          "type": "array",
                          "items": {
                            "required": [
                              "FuelTypeDisplay",
                              "UOMSourceSystemId",
                              "CurrencyCode"
                            ],
                            "type": "object",
                            "properties": {
                              "IsEstimatingResourceMapped": {
                                "type": "boolean"
                              },
                              "FuelTypeDisplay": {
                                "maxLength": 50,
                                "minLength": 0,
                                "type": "string",
                                "description": "The name of the type of fuel used"
                              },
                              "UOMSourceSystemId": {
                                "maxLength": 255,
                                "minLength": 0,
                                "type": "string",
                                "description": "The value provided in this field must match a valid Unit of Measure previously provided or defined in your InEight system."
                              },
                              "CurrencyCode": {
                                "maxLength": 50,
                                "minLength": 0,
                                "type": "string",
                                "description": "The currency used to purchase the fuel. The value provided in this field must match a currency code in the InEight cloud platform and that which is selected for the project."
                              },
                              "UnitCost": {
                                "type": "number",
                                "description": "Value of the fuel per unit of measure",
                                "format": "decimal"
                              },
                              "AccountCodeReference": {
                                "maxLength": 251,
                                "minLength": 0,
                                "type": "string",
                                "description": "Account code of the record that will be shown in normal use of product platform applications to assist users when performing searches or selections for particular work completed."
                              },
                              "IsActive": {
                                "type": "boolean"
                              },
                              "SourceSystemId": {
                                "maxLength": 58,
                                "minLength": 0,
                                "type": "string"
                              },
                              "SourceSystemName": {
                                "maxLength": 50,
                                "minLength": 0,
                                "type": "string"
                              }
                            }
                          },
                          "description": "Parent field for fuel type record"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "ProjectSettings": {
                      "type": "array",
                      "items": {
                        "required": [
                          "ProjectSourceSystemId",
                          "ProjectSourceSystemName"
                        ],
                        "type": "object",
                        "properties": {
                          "ProjectSourceSystemId": {
                            "maxLength": 200,
                            "minLength": 0,
                            "type": "string",
                            "description": "Identifier created by the system of record and used in all system communications as the primary method of specifying a unique record. This field does not display in normal use of InEight applications and can contain internal identifiers such as a GUID that is not understandable by typical system users."
                          },
                          "ProjectSourceSystemName": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string",
                            "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field."
                          },
                          "ProjectDisplayId": {
                            "maxLength": 200,
                            "minLength": 0,
                            "type": "string",
                            "description": "Unique identifier that is publicly recognizable. This field is displayed in normal use of InEight applications. The value sent in this field can match SourceSystemId if there is no need to use a public versus private unique identifier."
                          },
                          "GlobalOptions": {
                            "type": "object",
                            "properties": {
                              "CostItemIntegrationBehavior": {
                                "type": "string",
                                "description": "Cost Item Integration Behavior"
                              },
                              "IsAdvancedWorkAndSchedulingFeaturesEnabled": {
                                "type": "boolean",
                                "description": "The planned duration of the project in days"
                              },
                              "IsTemplateProject": {
                                "type": "boolean"
                              },
                              "IsValidateEquipmentToProjectCurrency": {
                                "type": "boolean"
                              }
                            },
                            "description": "Use this to set Global Options of the project"
                          },
                          "ProjectInformationTags": {
                            "type": "object",
                            "properties": {
                              "ProjectInformationTag1": {
                                "maxLength": 500,
                                "minLength": 0,
                                "type": "string",
                                "description": "Project Information Tag 1"
                              },
                              "ProjectInformationTag2": {
                                "maxLength": 250,
                                "minLength": 0,
                                "type": "string",
                                "description": "Project Information Tag 2"
                              },
                              "ProjectInformationTag3": {
                                "type": "string",
                                "description": "Project Information Tag 3"
                              },
                              "ProjectInformationTag4": {
                                "type": "string",
                                "description": "Project Information Tag 4"
                              },
                              "ProjectInformationTag5": {
                                "maxLength": 255,
                                "minLength": 0,
                                "type": "string",
                                "description": "Project Information Tag 5"
                              },
                              "ProjectInformationTag6": {
                                "maxLength": 100,
                                "minLength": 0,
                                "type": "string",
                                "description": "Project Information Tag 6"
                              },
                              "ProjectInformationTag7": {
                                "maxLength": 255,
                                "minLength": 0,
                                "type": "string",
                                "description": "Project Information Tag 7"
                              },
                              "ProjectInformationTag8": {
                                "type": "string",
                                "description": "Project Information Tag 8"
                              },
                              "ProjectInformationTag9": {
                                "type": "string",
                                "description": "Project Information Tag 9"
                              },
                              "ProjectInformationTag10": {
                                "type": "string",
                                "description": "Project Information Tag 10"
                              },
                              "ProjectInformationTag11": {
                                "type": "string",
                                "description": "Project Information Tag 11"
                              },
                              "ProjectInformationTag12": {
                                "type": "string",
                                "description": "Project Information Tag 12"
                              },
                              "ProjectInformationTag13": {
                                "type": "string",
                                "description": "Project Information Tag 13"
                              },
                              "ProjectInformationTag14": {
                                "type": "string",
                                "description": "Project Information Tag 14",
                                "format": "date-time"
                              },
                              "ProjectInformationTag15": {
                                "type": "string",
                                "description": "Project Information Tag 15",
                                "format": "date-time"
                              }
                            },
                            "description": "Use this to set Information Tags of the Project."
                          },
                          "CustomLists": {
                            "type": "array",
                            "items": {
                              "required": [
                                "ListName"
                              ],
                              "type": "object",
                              "properties": {
                                "ListName": {
                                  "maxLength": 250,
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Name of the list that's added to the custom label"
                                },
                                "FieldValues": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Comma delimited array of strings with a NON-DUPLICATE list of all field values that are part of the custom list"
                                }
                              }
                            },
                            "description": "Parent field for Custom lists"
                          },
                          "FuelTypes": {
                            "type": "array",
                            "items": {
                              "required": [
                                "FuelTypeDisplay",
                                "UOMSourceSystemId",
                                "CurrencyCode"
                              ],
                              "type": "object",
                              "properties": {
                                "IsEstimatingResourceMapped": {
                                  "type": "boolean"
                                },
                                "FuelTypeDisplay": {
                                  "maxLength": 50,
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "The name of the type of fuel used"
                                },
                                "UOMSourceSystemId": {
                                  "maxLength": 255,
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "The value provided in this field must match a valid Unit of Measure previously provided or defined in your InEight system."
                                },
                                "CurrencyCode": {
                                  "maxLength": 50,
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "The currency used to purchase the fuel. The value provided in this field must match a currency code in the InEight cloud platform and that which is selected for the project."
                                },
                                "UnitCost": {
                                  "type": "number",
                                  "description": "Value of the fuel per unit of measure",
                                  "format": "decimal"
                                },
                                "AccountCodeReference": {
                                  "maxLength": 251,
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Account code of the record that will be shown in normal use of product platform applications to assist users when performing searches or selections for particular work completed."
                                },
                                "IsActive": {
                                  "type": "boolean"
                                },
                                "SourceSystemId": {
                                  "maxLength": 58,
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "SourceSystemName": {
                                  "maxLength": 50,
                                  "minLength": 0,
                                  "type": "string"
                                }
                              }
                            },
                            "description": "Parent field for fuel type record"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/line_item/cache": {
      "get": {
        "tags": [
          "Line Item"
        ],
        "summary": "Gets all Line Item objects from the cache.",
        "description": "InEight line item data object",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/line_item/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_line_item_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/line_item/cache/search": {
      "post": {
        "tags": [
          "Line Item"
        ],
        "summary": "Search through Line Item objects in the data cache",
        "description": "InEight line item data object",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/line_item/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_line_item_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/line_item/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Line Item"
        ],
        "summary": "Gets one Line Item object from the cache.",
        "description": "InEight line item data object",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/line_item/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_line_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/line_item/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Line Item"
        ],
        "summary": "Gets one Line Item object from the cache.",
        "description": "InEight line item data object",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/line_item/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_line_item_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/line_item/actions/add": {
      "post": {
        "tags": [
          "Line Item"
        ],
        "summary": "Executes the Add action for the Line Item data object.",
        "description": "Add line item",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/line_item/actions/add",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "LineItem"
                ],
                "type": "object",
                "properties": {
                  "LineItem": {
                    "type": "array",
                    "items": {
                      "required": [
                        "ProjectCode",
                        "ItemType",
                        "LineItemType",
                        "LineItemDate",
                        "UOM",
                        "Qty",
                        "SourceSystemName",
                        "SourceSystemID"
                      ],
                      "type": "object",
                      "properties": {
                        "ProjectCode": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "Job/Project identifier"
                        },
                        "TimesheetNumber": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "Billings Timesheet number to use for the item. If a record contains a blank TimesheetNumber value, the import will group all import items by ProjectCode and create one Timesheet in the Billings product to contain the imported Line Item records.",
                          "nullable": true
                        },
                        "ItemType": {
                          "maxLength": 10,
                          "type": "string",
                          "description": "Identifier as to type of item that the record is. Acceptable values are: Personnel, Equipment, Material, LineItem, Other"
                        },
                        "PersonnelCode": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "Resource code that uniquely identifies the person the line item relates to, as per the master resource profile. NOTE: This field is only used if the ItemType value is Personnel, LineItem or Other.",
                          "nullable": true
                        },
                        "PersonnelType": {
                          "maxLength": 10,
                          "type": "string",
                          "description": "Valid value from Code Values list, filtered for CodeType of “LabourType”. NOTE: This field is only used if the ItemType value is Personnel or LineItem.",
                          "nullable": true
                        },
                        "EquipmentCode": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "Resource code that uniquely identifies the piece of equipment the line item relates to, as per the master resource profile. Note: EquipmentUnitNumber OR EquipmentCode can be used to identify a piece of equipment. NOTE: This field is only used if the ItemType value is Equipment, LineItem or Other.",
                          "nullable": true
                        },
                        "EquipmentUnitNumber": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "Resource unit # that uniquely identifies the piece of equipment the line item relates to, as per the master resource profile. Note: EquipmentUnitNumber OR EquipmentCode can be used to identify a piece of equipment. NOTE: This field is only used if the ItemType value is Equipment, LineItem or Other.",
                          "nullable": true
                        },
                        "EquipmentType": {
                          "maxLength": 10,
                          "type": "string",
                          "description": "Valid value from Code Values list, filtered for CodeType of “EquipmentType”. NOTE: This field is only used if the ItemType value is Equipment or LineItem.",
                          "nullable": true
                        },
                        "MaterialCode": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "Resource code that uniquely identifies the material the line item relates to, as per the master resource profile. NOTE: This field is only used if the ItemType value is Material, LineItem or Other.",
                          "nullable": true
                        },
                        "MaterialType": {
                          "maxLength": 10,
                          "type": "string",
                          "description": "Valid value from Code Values list, filtered for CodeType of “MaterialType”. NOTE: This field is only used if the ItemType value is Material or LineItem.",
                          "nullable": true
                        },
                        "SupplierCode": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "Unique code used to identify the company/vendor the line item relates to. NOTE: This field is only used if the ItemType value is LineItem or LineItem.",
                          "nullable": true
                        },
                        "SourceOtherType": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "Valid value from Code Values list, filtered for CodeType of “OtherResourceType”. NOTE: This field is only used if the ItemType value is Other.",
                          "nullable": true
                        },
                        "PONumber": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "Free text field",
                          "nullable": true
                        },
                        "Description": {
                          "type": "string",
                          "description": "Free text field",
                          "nullable": true
                        },
                        "LineItemType": {
                          "maxLength": 10,
                          "type": "string",
                          "description": "Valid value from Code Values list, filtered for CodeType of “LineItemType”"
                        },
                        "WBSCodePath": {
                          "type": "string",
                          "description": "Codes from each level of Project. Contains code from Project (root project code value), plus the code from all WBS levels and cost code code, relevant to placement of record within timesheet. Separated segments with “\\”.",
                          "nullable": true
                        },
                        "WBSPhaseCode": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "Mapped value from Control. This value directly relates to WBSCodePath.",
                          "nullable": true
                        },
                        "PayItem": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "Mapped value from Control. This value directly relates to WBSCodePath.",
                          "nullable": true
                        },
                        "Notes": {
                          "type": "string",
                          "description": "Free text field.",
                          "nullable": true
                        },
                        "WorkOrderCode": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "Work Order code that uniquely identifies the work order the line item relates to, as per the project specific work order list.",
                          "nullable": true
                        },
                        "UserDef1": {
                          "type": "string",
                          "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                          "nullable": true
                        },
                        "UserDef2": {
                          "type": "string",
                          "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                          "nullable": true
                        },
                        "UserDef3": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                          "type": "string",
                          "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a number and can therefore be used to capture vendor subcontractor hours, aboriginal hours, or any other number value specific to aid in reporting or processing of LEM or invoice information.",
                          "nullable": true
                        },
                        "UserDef4": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                          "type": "string",
                          "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a number and can therefore be used to capture vendor subcontractor hours, aboriginal hours, or any other number value specific to aid in reporting or processing of LEM or invoice information.",
                          "nullable": true
                        },
                        "UserDef5": {
                          "type": "string",
                          "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                          "nullable": true
                        },
                        "UserDef6": {
                          "type": "string",
                          "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                          "nullable": true
                        },
                        "UserDef7": {
                          "type": "string",
                          "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                          "nullable": true
                        },
                        "UserDef8": {
                          "type": "string",
                          "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                          "nullable": true
                        },
                        "UserDef9": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                          "type": "string",
                          "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a number and can therefore be used to capture vendor subcontractor hours, aboriginal hours, or any other number value specific to aid in reporting or processing of LEM or invoice information",
                          "nullable": true
                        },
                        "UserDef10": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                          "type": "string",
                          "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a number and can therefore be used to capture vendor subcontractor hours, aboriginal hours, or any other number value specific to aid in reporting or processing of LEM or invoice information",
                          "nullable": true
                        },
                        "LineItemDate": {
                          "maxLength": 10,
                          "type": "string",
                          "description": "Item date associated to the record being processed. A common use for identifying a date for line item entries, is when processing billable accounts payable records, where the invoice date, or invoice payment date, may be used in identifying the date that the record is associated to."
                        },
                        "UOM": {
                          "maxLength": 10,
                          "type": "string",
                          "description": "The unit of measure associated to the record in terms of how it is going to be charged to the client. Each and lump sum are common ones used when processing vendor invoices using subtotal amounts(either by invoice, or invoice line item), but are not limited to those options."
                        },
                        "Qty": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                          "type": "string",
                          "description": "The number used as the basis for multiplying against the rate."
                        },
                        "Rate": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                          "type": "string",
                          "description": "The value of the record that is used to multiply against the quantity.",
                          "nullable": true
                        },
                        "Amount": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                          "type": "string",
                          "description": "TThe quantity multiplied by the rate. Alternatively, the amount can be entered directly, in which the quantity and rate are not used to calculate the amount. This is the value that is used as the basis for the application of project markup amounts. For example, if the amount is $100, and there is a 6% markup for this particular Line Item type, then the following is true: Cost rate = $100; Markup amount = $6; LEM or Invoice total = $106.",
                          "nullable": true
                        },
                        "SourceSystemName": {
                          "maxLength": 255,
                          "type": "string",
                          "description": ""
                        },
                        "SourceSystemID": {
                          "maxLength": 255,
                          "type": "string",
                          "description": ""
                        },
                        "DocumentImage": {
                          "type": "string",
                          "description": "[CURRENTLY NOT IMPLEMENTED] PDF or JPG scan of supporting document (e.g., work ticket, invoice, PO, etc.)",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "LineItem": {
                      "type": "array",
                      "items": {
                        "required": [
                          "ProjectCode",
                          "ItemType",
                          "LineItemType",
                          "LineItemDate",
                          "UOM",
                          "Qty",
                          "SourceSystemName",
                          "SourceSystemID"
                        ],
                        "type": "object",
                        "properties": {
                          "ProjectCode": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "Job/Project identifier"
                          },
                          "TimesheetNumber": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "Billings Timesheet number to use for the item. If a record contains a blank TimesheetNumber value, the import will group all import items by ProjectCode and create one Timesheet in the Billings product to contain the imported Line Item records.",
                            "nullable": true
                          },
                          "ItemType": {
                            "maxLength": 10,
                            "type": "string",
                            "description": "Identifier as to type of item that the record is. Acceptable values are: Personnel, Equipment, Material, LineItem, Other"
                          },
                          "PersonnelCode": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "Resource code that uniquely identifies the person the line item relates to, as per the master resource profile. NOTE: This field is only used if the ItemType value is Personnel, LineItem or Other.",
                            "nullable": true
                          },
                          "PersonnelType": {
                            "maxLength": 10,
                            "type": "string",
                            "description": "Valid value from Code Values list, filtered for CodeType of “LabourType”. NOTE: This field is only used if the ItemType value is Personnel or LineItem.",
                            "nullable": true
                          },
                          "EquipmentCode": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "Resource code that uniquely identifies the piece of equipment the line item relates to, as per the master resource profile. Note: EquipmentUnitNumber OR EquipmentCode can be used to identify a piece of equipment. NOTE: This field is only used if the ItemType value is Equipment, LineItem or Other.",
                            "nullable": true
                          },
                          "EquipmentUnitNumber": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "Resource unit # that uniquely identifies the piece of equipment the line item relates to, as per the master resource profile. Note: EquipmentUnitNumber OR EquipmentCode can be used to identify a piece of equipment. NOTE: This field is only used if the ItemType value is Equipment, LineItem or Other.",
                            "nullable": true
                          },
                          "EquipmentType": {
                            "maxLength": 10,
                            "type": "string",
                            "description": "Valid value from Code Values list, filtered for CodeType of “EquipmentType”. NOTE: This field is only used if the ItemType value is Equipment or LineItem.",
                            "nullable": true
                          },
                          "MaterialCode": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "Resource code that uniquely identifies the material the line item relates to, as per the master resource profile. NOTE: This field is only used if the ItemType value is Material, LineItem or Other.",
                            "nullable": true
                          },
                          "MaterialType": {
                            "maxLength": 10,
                            "type": "string",
                            "description": "Valid value from Code Values list, filtered for CodeType of “MaterialType”. NOTE: This field is only used if the ItemType value is Material or LineItem.",
                            "nullable": true
                          },
                          "SupplierCode": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "Unique code used to identify the company/vendor the line item relates to. NOTE: This field is only used if the ItemType value is LineItem or LineItem.",
                            "nullable": true
                          },
                          "SourceOtherType": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "Valid value from Code Values list, filtered for CodeType of “OtherResourceType”. NOTE: This field is only used if the ItemType value is Other.",
                            "nullable": true
                          },
                          "PONumber": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "Free text field",
                            "nullable": true
                          },
                          "Description": {
                            "type": "string",
                            "description": "Free text field",
                            "nullable": true
                          },
                          "LineItemType": {
                            "maxLength": 10,
                            "type": "string",
                            "description": "Valid value from Code Values list, filtered for CodeType of “LineItemType”"
                          },
                          "WBSCodePath": {
                            "type": "string",
                            "description": "Codes from each level of Project. Contains code from Project (root project code value), plus the code from all WBS levels and cost code code, relevant to placement of record within timesheet. Separated segments with “\\”.",
                            "nullable": true
                          },
                          "WBSPhaseCode": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "Mapped value from Control. This value directly relates to WBSCodePath.",
                            "nullable": true
                          },
                          "PayItem": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "Mapped value from Control. This value directly relates to WBSCodePath.",
                            "nullable": true
                          },
                          "Notes": {
                            "type": "string",
                            "description": "Free text field.",
                            "nullable": true
                          },
                          "WorkOrderCode": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "Work Order code that uniquely identifies the work order the line item relates to, as per the project specific work order list.",
                            "nullable": true
                          },
                          "UserDef1": {
                            "type": "string",
                            "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                            "nullable": true
                          },
                          "UserDef2": {
                            "type": "string",
                            "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                            "nullable": true
                          },
                          "UserDef3": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                            "type": "string",
                            "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a number and can therefore be used to capture vendor subcontractor hours, aboriginal hours, or any other number value specific to aid in reporting or processing of LEM or invoice information.",
                            "nullable": true
                          },
                          "UserDef4": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                            "type": "string",
                            "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a number and can therefore be used to capture vendor subcontractor hours, aboriginal hours, or any other number value specific to aid in reporting or processing of LEM or invoice information.",
                            "nullable": true
                          },
                          "UserDef5": {
                            "type": "string",
                            "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                            "nullable": true
                          },
                          "UserDef6": {
                            "type": "string",
                            "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                            "nullable": true
                          },
                          "UserDef7": {
                            "type": "string",
                            "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                            "nullable": true
                          },
                          "UserDef8": {
                            "type": "string",
                            "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                            "nullable": true
                          },
                          "UserDef9": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                            "type": "string",
                            "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a number and can therefore be used to capture vendor subcontractor hours, aboriginal hours, or any other number value specific to aid in reporting or processing of LEM or invoice information",
                            "nullable": true
                          },
                          "UserDef10": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                            "type": "string",
                            "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a number and can therefore be used to capture vendor subcontractor hours, aboriginal hours, or any other number value specific to aid in reporting or processing of LEM or invoice information",
                            "nullable": true
                          },
                          "LineItemDate": {
                            "maxLength": 10,
                            "type": "string",
                            "description": "Item date associated to the record being processed. A common use for identifying a date for line item entries, is when processing billable accounts payable records, where the invoice date, or invoice payment date, may be used in identifying the date that the record is associated to."
                          },
                          "UOM": {
                            "maxLength": 10,
                            "type": "string",
                            "description": "The unit of measure associated to the record in terms of how it is going to be charged to the client. Each and lump sum are common ones used when processing vendor invoices using subtotal amounts(either by invoice, or invoice line item), but are not limited to those options."
                          },
                          "Qty": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                            "type": "string",
                            "description": "The number used as the basis for multiplying against the rate."
                          },
                          "Rate": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                            "type": "string",
                            "description": "The value of the record that is used to multiply against the quantity.",
                            "nullable": true
                          },
                          "Amount": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                            "type": "string",
                            "description": "TThe quantity multiplied by the rate. Alternatively, the amount can be entered directly, in which the quantity and rate are not used to calculate the amount. This is the value that is used as the basis for the application of project markup amounts. For example, if the amount is $100, and there is a 6% markup for this particular Line Item type, then the following is true: Cost rate = $100; Markup amount = $6; LEM or Invoice total = $106.",
                            "nullable": true
                          },
                          "SourceSystemName": {
                            "maxLength": 255,
                            "type": "string",
                            "description": ""
                          },
                          "SourceSystemID": {
                            "maxLength": 255,
                            "type": "string",
                            "description": ""
                          },
                          "DocumentImage": {
                            "type": "string",
                            "description": "PDF or JPG scan of supporting document (e.g., work ticket, invoice, PO, etc.)",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/code_values/cache": {
      "get": {
        "tags": [
          "Code Values"
        ],
        "summary": "Gets all Code Values objects from the cache.",
        "description": "InEight code values data object",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/code_values/cache",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "$ref": "#/components/parameters/limit_continuation"
          },
          {
            "$ref": "#/components/parameters/modifiedUTCSince"
          },
          {
            "$ref": "#/components/parameters/continuationToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "limit",
                    "data",
                    "next",
                    "continuationToken"
                  ],
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_code_values_withKeys"
                      }
                    },
                    "next": {
                      "type": "string"
                    },
                    "continuationToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/code_values/cache/search": {
      "post": {
        "tags": [
          "Code Values"
        ],
        "summary": "Search through Code Values objects in the data cache",
        "description": "InEight code values data object",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/code_values/cache/search/search",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifiedUtcAfter": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified after the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "modifiedUtcBefore": {
                    "maxLength": 28,
                    "minLength": 28,
                    "type": "string",
                    "description": "Returns objects that were modified before the specified date (ISO 8601 format).  Format: yyyy-MM-ddThh:mm:ss.fffffffZ.  Example '2019-12-11T20:16:58.3419275Z'.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set.",
                    "format": "date-time"
                  },
                  "continuationToken": {
                    "type": "string",
                    "description": "Supplying this token will result in retrieving the next chunk of data if the first request contained more than 100 (up to) records or greater than 1 megabyte in size.  On your first call, you must omit or provide an empty string.  On subsequent calls, provide the continuationToken from the previous result."
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "integer",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "string",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "GreaterThan",
                                "GreaterThanOrEqual",
                                "LessThan",
                                "LessThanOrEqual",
                                "NotEqual",
                                "Like",
                                "EndsWith",
                                "StartsWith",
                                "Contains"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "boolean",
                              "description": "You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "Equal",
                                "NotEqual"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        },
                        {
                          "required": [
                            "propertyName",
                            "value",
                            "operator"
                          ],
                          "type": "object",
                          "properties": {
                            "propertyName": {
                              "type": "string",
                              "description": "Name of the property to apply the filter on. Nested properties are supported with a dot (.) delimiter.  E.g. 'PONumber' or 'Sender.LastName'."
                            },
                            "value": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "description": " This oneOf option is to be used for null values for all data types.  You must match the JSON type value to the propertyName JSON type.  There is no type coercion."
                            },
                            "operator": {
                              "enum": [
                                "In"
                              ],
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "description": ""
                        }
                      ]
                    },
                    "description": "All provided filters are combined with AND conditions. E.g. filter1 AND filter2 AND filter3.  Not providing a filter will result in an unfiltered result.  Filtering can be performed on nested object properties but can not be performed on array item properties.  If provided on the first call, the same value must be provided on all subsequent calls as you use the continuation token for the next result set."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "count",
                    "data"
                  ],
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/data_code_values_withKeys"
                      }
                    },
                    "continuationToken": {
                      "type": "string",
                      "description": "Supply this token on the next request to get the next chunk of data. This will have a value if the result set contains more than 100 records or the set is greater than 1 megabyte."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/code_values/cache/{ryvitId_value}": {
      "get": {
        "tags": [
          "Code Values"
        ],
        "summary": "Gets one Code Values object from the cache.",
        "description": "InEight code values data object",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/code_values/cache/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_code_values_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/code_values/cache/__ryvitId/{ryvitId_value}": {
      "get": {
        "tags": [
          "Code Values"
        ],
        "summary": "Gets one Code Values object from the cache.",
        "description": "InEight code values data object",
        "operationId": "GET /direct/subscribers/{subscriber_code}/ineight/app/1/data/code_values/cache/__ryvitId/{ryvitId_value}",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          },
          {
            "name": "ryvitId_value",
            "in": "path",
            "description": "The code of the data object you want to get.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/data_code_values_withKeys"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          }
        }
      }
    },
    "/direct/subscribers/{subscriber_code}/ineight/app/1/data/code_values/actions/add": {
      "post": {
        "tags": [
          "Code Values"
        ],
        "summary": "Executes the Add action for the Code Values data object.",
        "description": "Add code values to InEight",
        "operationId": "POST /direct/subscribers/{subscriber_code}/ineight/app/1/data/code_values/actions/add",
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriber_code"
          },
          {
            "$ref": "#/components/parameters/X-Application-Key"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "CodeValue": {
                    "type": "array",
                    "items": {
                      "required": [
                        "CodeType",
                        "CodeValue",
                        "Description",
                        "SystemFlag",
                        "DisplayOrder",
                        "SourceSystemId",
                        "SourceSystemName",
                        "IsActive"
                      ],
                      "type": "object",
                      "properties": {
                        "CodeType": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "Identifies lookup by type"
                        },
                        "CodeSubType": {
                          "maxLength": 255,
                          "type": "string",
                          "description": "If the lookup is “nested” (e.g., Country then State or Country then Province), then contains the second level type identifier",
                          "nullable": true
                        },
                        "CodeValue": {
                          "maxLength": 10,
                          "type": "string",
                          "description": "Value of the list item stored in database tables "
                        },
                        "Description": {
                          "maxLength": 2000,
                          "type": "string",
                          "description": "Long description used in user interface and reports"
                        },
                        "DisplayOrder": {
                          "maxLength": 10,
                          "type": "integer",
                          "description": "Integer for ordering list of values by CodeType and CodeSubType"
                        },
                        "IsActive": {
                          "type": "boolean",
                          "description": "Row status indicator, either Y for active or N for inactive"
                        },
                        "ShortDescription": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "Short description used in user interface and reports",
                          "nullable": true
                        },
                        "SourceSystemId": {
                          "type": "string"
                        },
                        "SourceSystemName": {
                          "type": "string"
                        },
                        "SystemFlag": {
                          "type": "boolean",
                          "description": "Flag indicating if the user can modify the row using user interface screens"
                        },
                        "Value1": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                          "type": "string",
                          "description": "Available field that can be used to identify client specific attributes associated to the record being captured.",
                          "nullable": true
                        },
                        "Value2": {
                          "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                          "type": "string",
                          "description": "Available field that can be used to identify client specific attributes associated to the record being captured.",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "operation": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errorResponse"
          },
          "401": {
            "$ref": "#/components/responses/unauth"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/notFound"
          },
          "x-$.result for Successful": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Successful\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlation_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "app_log_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "CodeValue": {
                      "type": "array",
                      "items": {
                        "required": [
                          "CodeType",
                          "CodeValue",
                          "Description",
                          "SystemFlag",
                          "DisplayOrder",
                          "SourceSystemId",
                          "SourceSystemName",
                          "IsActive"
                        ],
                        "type": "object",
                        "properties": {
                          "CodeType": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "Identifies lookup by type. Check API documentation for field values"
                          },
                          "CodeSubType": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "If the lookup is “nested” (e.g., Country then State or Country then Province), then contains the second level type identifier",
                            "nullable": true
                          },
                          "CodeValue": {
                            "maxLength": 10,
                            "type": "string",
                            "description": "Value of the list item stored in database tables "
                          },
                          "Description": {
                            "maxLength": 2000,
                            "type": "string",
                            "description": "Long description used in user interface and reports"
                          },
                          "DisplayOrder": {
                            "maxLength": 10,
                            "type": "integer",
                            "description": "Integer for ordering list of values by CodeType and CodeSubType"
                          },
                          "IsActive": {
                            "type": "boolean",
                            "description": "Row status indicator, either Y for active or N for inactive"
                          },
                          "ShortDescription": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "Short description used in user interface and reports",
                            "nullable": true
                          },
                          "SourceSystemId": {
                            "type": "string"
                          },
                          "SourceSystemName": {
                            "type": "string"
                          },
                          "SystemFlag": {
                            "type": "boolean",
                            "description": "Flag indicating if the user can modify the row using user interface screens"
                          },
                          "Value1": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                            "type": "string",
                            "description": "Available field that can be used to identify client specific attributes associated to the record being captured.",
                            "nullable": true
                          },
                          "Value2": {
                            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                            "type": "string",
                            "description": "Available field that can be used to identify client specific attributes associated to the record being captured.",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-$.result for Failed": {
            "description": "Object returned at $.result from GET /direct/actions/{action_key_value} when $.status = \"Failed\"",
            "content": {
              "application/json": {
                "schema": {
                  "title": "The Root Schema",
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "title": "The Errors Schema",
                      "type": "object",
                      "properties": {
                        "HttpStatus": {
                          "title": "The Httpstatus Schema",
                          "type": "integer",
                          "default": 0
                        },
                        "Message": {
                          "title": "The Message Schema",
                          "type": "string",
                          "default": ""
                        },
                        "ErrorText": {
                          "title": "The ErrorText Schema",
                          "type": "string",
                          "default": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "errorSchema": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "target": {
                      "title": "Describes which field in the request has an issue.",
                      "type": "string"
                    },
                    "message": {
                      "title": "The error message describing the issue.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "data_employees": {
        "required": [
          "CraftId",
          "EmployeeId",
          "FirstName",
          "LastName",
          "CanReportTime",
          "CurrencyCode",
          "UoMName"
        ],
        "type": "object",
        "properties": {
          "CraftId": {
            "maxLength": 50,
            "type": "string"
          },
          "VendorCode": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "EmployeeId": {
            "maxLength": 50,
            "type": "string"
          },
          "FirstName": {
            "maxLength": 100,
            "type": "string"
          },
          "LastName": {
            "maxLength": 100,
            "type": "string"
          },
          "IsActive": {
            "type": "boolean",
            "nullable": true
          },
          "EmployeePIN": {
            "maxLength": 64,
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "CanReportTime": {
            "type": "boolean"
          },
          "SourceSystemId": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "SourceSystemName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "nullable": true
          },
          "EndDate": {
            "type": "string",
            "nullable": true
          },
          "CurrencyCode": {
            "maxLength": 50,
            "type": "string"
          },
          "UoMName": {
            "maxLength": 255,
            "type": "string"
          },
          "StraightTimeRate": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "OverTimeFactor": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "OverTimeRate": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "DoubleTimeFactor": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "DoubleTimeRate": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true,
            "writeOnly": true
          },
          "UseBaseWageFactors": {
            "type": "boolean",
            "nullable": true
          },
          "PrimaryCompany": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "JobTitle": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "CountryISOCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "DefaultCostCenterSourceSystemId": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "AdditionalPayrollInstructionCode": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "IsOverrideAdditionalPayrollInstructionCodeAllowed": {
            "type": "boolean",
            "nullable": true
          },
          "IsAvailableWeeklyTimeSheet": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "data_employees_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "EmployeeId/{EmployeeId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_employees"
          }
        ]
      },
      "data_projects": {
        "required": [
          "ProjectDisplayId",
          "ProjectName",
          "OrganizationSourceSystemId",
          "BaseCurrency",
          "TimeZone",
          "ProjectStatusName"
        ],
        "type": "object",
        "properties": {
          "ProjectDisplayId": {
            "maxLength": 200,
            "type": "string"
          },
          "SourceSystemId": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "SourceSystemName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "ProjectName": {
            "maxLength": 300,
            "type": "string"
          },
          "OrganizationSourceSystemId": {
            "maxLength": 300,
            "type": "string"
          },
          "BaseCurrency": {
            "maxLength": 50,
            "type": "string"
          },
          "TimeZone": {
            "maxLength": 100,
            "type": "string"
          },
          "ProjectStatusName": {
            "maxLength": 50,
            "type": "string"
          },
          "StartDate": {
            "type": "string",
            "nullable": true
          },
          "EndDate": {
            "type": "string",
            "nullable": true
          },
          "City": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "RegionISOCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "CountryISOCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "ZipCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "Address1": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "Address2": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "Latitude": {
            "type": "string",
            "nullable": true
          },
          "Longitude": {
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "nullable": true
          },
          "OriginalContractAmount": {
            "type": "string",
            "nullable": true
          },
          "ContractNumber": {
            "type": "string"
          },
          "DateProjectStarted": {
            "type": "string"
          },
          "ContractDate": {
            "type": "string"
          },
          "OriginalContractCompletionDate": {
            "type": "string"
          },
          "OriginalDuration": {
            "type": "number",
            "nullable": true
          },
          "ForecastStartDate": {
            "type": "string",
            "description": ""
          },
          "ForecastCompletionDate": {
            "type": "string",
            "description": ""
          },
          "ForecastDuration": {
            "type": "string",
            "description": ""
          },
          "ForecastExtensionsReductions": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "ForecastRevisedDuration": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "ForecastRevisedCompletionDate": {
            "type": "string",
            "description": ""
          },
          "ContractExtensionsReductions": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "ContractRevisedDuration": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "ContractRevisedCompletionDate": {
            "type": "string",
            "description": ""
          },
          "CertificateOfSubstantialCompletionExpectedDate": {
            "type": "string",
            "description": ""
          },
          "CertificateOfSubstantialCompletionAwardedDate": {
            "type": "string",
            "description": ""
          },
          "CertificateOfFinalCompletionExpectedDate": {
            "type": "string",
            "description": ""
          },
          "CertificateOfFinalCompletionAwardedDate": {
            "type": "string",
            "description": ""
          },
          "CompanyLegalName": {
            "type": "string",
            "description": ""
          },
          "ProjectAttributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "AttributeName": {
                  "type": "string",
                  "description": "",
                  "nullable": true
                },
                "AttributeSourceSystemId": {
                  "type": "string",
                  "description": "",
                  "nullable": true
                },
                "AttributeValue": {
                  "type": "string",
                  "description": "",
                  "nullable": true
                }
              }
            }
          },
          "Markets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "data_projects_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "ProjectDisplayId/{ProjectDisplayId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_projects"
          }
        ]
      },
      "data_equipment": {
        "required": [
          "EquipmentSystemStatus",
          "EquipmentNumber",
          "EquipmentType",
          "CurrencyCode",
          "UoMName"
        ],
        "type": "object",
        "properties": {
          "EquipmentSystemStatus": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "EquipmentNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "OwnershipType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "EquipmentType": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "VendorCode": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "SerialNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Manufacturer": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Dot": {
            "type": "boolean",
            "nullable": true
          },
          "EquipmentDescription": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "IsActive": {
            "type": "boolean",
            "nullable": true
          },
          "SourceSystemId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "SourceSystemName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CurrencyCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "CostCenterSourceSystemId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Location": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "UnitCost": {
            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "UoMName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "IsAvailableDailyPlan": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "data_equipment_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "SourceSystemId/{SourceSystemId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_equipment"
          }
        ]
      },
      "data_equipment_types": {
        "title": "The EquipmentType Schema",
        "required": [
          "SourceSystemId",
          "EquipmentTypeId",
          "Description",
          "EquipmentCategoryId",
          "CurrencyCode",
          "UoMName"
        ],
        "type": "object",
        "properties": {
          "EquipmentTypeId": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "Description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "IsActive": {
            "type": "boolean",
            "nullable": true
          },
          "EquipmentCategoryId": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "Language": {
            "type": "string",
            "nullable": true
          },
          "SourceSystemId": {
            "maxLength": 250,
            "type": "string"
          },
          "SourceSystemName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "VendorCode": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "CurrencyCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "UnitCost": {
            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "UoMName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "data_equipment_types_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "equipmenttypeid/{EquipmentTypeId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_equipment_types"
          }
        ]
      },
      "data_equipment_categories": {
        "required": [
          "EquipmentCategoryId",
          "Description"
        ],
        "type": "object",
        "properties": {
          "EquipmentCategoryId": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "Description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "IsActive": {
            "type": "boolean",
            "nullable": true
          },
          "Language": {
            "type": "string",
            "nullable": true
          },
          "SourceSystemId": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "SourceSystemName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        }
      },
      "data_equipment_categories_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "SourceSystemId/{SourceSystemId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_equipment_categories"
          }
        ]
      },
      "data_crafts": {
        "required": [
          "CraftId",
          "CraftDescription",
          "TradeId",
          "UoMName",
          "SourceSystemId"
        ],
        "type": "object",
        "properties": {
          "CraftId": {
            "maxLength": 50,
            "type": "string"
          },
          "CraftDescription": {
            "maxLength": 255,
            "type": "string"
          },
          "TradeId": {
            "maxLength": 50,
            "type": "string"
          },
          "CurrencyCode": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "VendorCode": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "SourceSystemId": {
            "maxLength": 50,
            "type": "string"
          },
          "SourceSystemName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "UoMName": {
            "maxLength": 50,
            "type": "string"
          },
          "UseBaseWageFactors": {
            "type": "boolean",
            "nullable": true
          },
          "StraightTimeRate": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "OverTimeFactor": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "OverTimeRate": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "DoubleTimeFactor": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "DoubleTimeRate": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "data_crafts_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "craftid/{CraftId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_crafts"
          }
        ]
      },
      "data_trades": {
        "required": [
          "TradeDisplay",
          "TradeDescription"
        ],
        "type": "object",
        "properties": {
          "TradeDisplay": {
            "maxLength": 50,
            "type": "string"
          },
          "TradeDescription": {
            "maxLength": 255,
            "type": "string"
          },
          "SourceSystemId": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "SourceSystemName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "data_trades_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "SourceSystemId/{SourceSystemId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_trades"
          }
        ]
      },
      "data_project_employees": {
        "required": [
          "ProjectId",
          "EmployeeId"
        ],
        "type": "object",
        "properties": {
          "ProjectId": {
            "maxLength": 200,
            "type": "string"
          },
          "EmployeeId": {
            "maxLength": 50,
            "type": "string"
          },
          "StraightTimeRate": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "OverTimeFactor": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "OverTimeRate": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "DoubleTimeFactor": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "DoubleTimeRate": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "SourceSystemId": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "SourceSystemName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "UseBaseWageFactors": {
            "type": "boolean",
            "nullable": true
          },
          "StartDate": {
            "maxLength": 25,
            "type": "string",
            "nullable": true
          },
          "EndDate": {
            "maxLength": 25,
            "type": "string",
            "nullable": true
          },
          "UoMName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "ProjectCraftSourceSystemId": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "data_project_employees_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "ProjectEmployeeId/{ProjectId}/{EmployeeId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_project_employees"
          }
        ]
      },
      "data_project_equipment": {
        "required": [
          "ProjectNumber",
          "EquipmentNumber"
        ],
        "type": "object",
        "properties": {
          "ProjectNumber": {
            "maxLength": 200,
            "type": "string"
          },
          "EquipmentNumber": {
            "maxLength": 50,
            "type": "string"
          },
          "UnitCost": {
            "pattern": "^[-+]?[0-9]{1,11}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "SourceSystemId": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "SourceSystemName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "IsAvailableDailyPlan": {
            "type": "boolean",
            "nullable": true
          },
          "EquipmentProjectStartDate": {
            "maxLength": 25,
            "type": "string",
            "nullable": true
          },
          "EquipmentProjectEndDate": {
            "maxLength": 25,
            "type": "string",
            "nullable": true
          },
          "ContractReference": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "ContractLineNumberReference": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "ContractURL": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "data_project_equipment_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "ProjectEquipmentId/{ProjectNumber}/{EquipmentNumber}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_project_equipment"
          }
        ]
      },
      "data_daily_plan": {
        "required": [
          "PlanId"
        ],
        "type": "object",
        "properties": {
          "DailyPlanCostItem": {
            "type": "array",
            "items": {
              "required": [
                "DailyPlanCostItemEmployee",
                "DailyPlanCostItemEquipment",
                "DailyPlanCostItemComponent",
                "CostItemId",
                "TaskPriority",
                "PlanQuantity",
                "SubmittedQuantity",
                "ApprovedQuantity",
                "WBSCode"
              ],
              "type": "object",
              "properties": {
                "DailyPlanCostItemEmployee": {
                  "type": "array",
                  "items": {
                    "required": [
                      "ResourceId",
                      "EmployeeId",
                      "CraftCode"
                    ],
                    "type": "object",
                    "properties": {
                      "ResourceId": {
                        "type": "string"
                      },
                      "SubmittedDoubletimeHours": {
                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                        "type": "string",
                        "nullable": true
                      },
                      "SubmittedOvertimeHours": {
                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                        "type": "string",
                        "nullable": true
                      },
                      "SubmittedStandardHours": {
                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                        "type": "string",
                        "nullable": true
                      },
                      "ApprovedDoubletimeHours": {
                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                        "type": "string",
                        "nullable": true
                      },
                      "ApprovedOvertimeHours": {
                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                        "type": "string",
                        "nullable": true
                      },
                      "ApprovedStandardHours": {
                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                        "type": "string",
                        "nullable": true
                      },
                      "PlannedDoubletimeHours": {
                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                        "type": "string",
                        "nullable": true
                      },
                      "PlannedOvertimeHours": {
                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                        "type": "string",
                        "nullable": true
                      },
                      "PlannedStandardHours": {
                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                        "type": "string",
                        "nullable": true
                      },
                      "EmployeeId": {
                        "maxLength": 50,
                        "type": "string"
                      },
                      "CraftCode": {
                        "type": "string"
                      }
                    }
                  },
                  "nullable": true
                },
                "DailyPlanCostItemEquipment": {
                  "title": "The Dailyplancostitemequipment Schema",
                  "type": "array",
                  "items": {
                    "title": "The Items Schema",
                    "required": [
                      "ResourceId",
                      "EquipmentId",
                      "EquipmentType"
                    ],
                    "type": "object",
                    "properties": {
                      "ResourceId": {
                        "type": "string"
                      },
                      "PlannedStandardHours": {
                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                        "type": "string",
                        "nullable": true
                      },
                      "ApprovedStandardHours": {
                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                        "type": "string",
                        "nullable": true
                      },
                      "SubmittedStandardHours": {
                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                        "type": "string",
                        "nullable": true
                      },
                      "EquipmentId": {
                        "maxLength": 50,
                        "type": "string"
                      },
                      "EquipmentType": {
                        "maxLength": 250,
                        "type": "string"
                      }
                    }
                  },
                  "nullable": true
                },
                "DailyPlanCostItemComponent": {
                  "type": "array",
                  "items": {
                    "required": [
                      "ComponentId",
                      "ComponentType",
                      "InstalledQuantity",
                      "ProjectEstimatingResourceId",
                      "ProjectEstimatingResourceSourceSystemId",
                      "ResourceId"
                    ],
                    "type": "object",
                    "properties": {
                      "ComponentId": {
                        "type": "string"
                      },
                      "ComponentType": {
                        "type": "string"
                      },
                      "InstalledQuantity": {
                        "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                        "type": "string"
                      },
                      "ProjectEstimatingResourceId": {
                        "type": "number"
                      },
                      "ProjectEstimatingResourceSourceSystemId": {
                        "type": "number"
                      },
                      "ResourceId": {
                        "type": "string"
                      }
                    }
                  },
                  "nullable": true
                },
                "CostItemId": {
                  "type": "string"
                },
                "TaskPriority": {
                  "type": "number"
                },
                "PlanQuantity": {
                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                  "type": "string",
                  "nullable": true
                },
                "SubmittedQuantity": {
                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                  "type": "string",
                  "nullable": true
                },
                "ApprovedQuantity": {
                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                  "type": "string",
                  "nullable": true
                },
                "CostItemSourceSystemId": {
                  "type": "string",
                  "nullable": true
                },
                "WBSCode": {
                  "type": "string"
                }
              }
            },
            "nullable": true
          },
          "DailyPlanNote": {
            "type": "array",
            "items": {
              "required": [
                "DailyPlanNoteEmployee",
                "DailyPlanNoteEquipment",
                "NoteId",
                "Description"
              ],
              "type": "object",
              "properties": {
                "DailyPlanNoteEmployee": {
                  "type": "array",
                  "items": {
                    "required": [
                      "EmployeeDisplay"
                    ],
                    "type": "object",
                    "properties": {
                      "EmployeeDisplay": {
                        "type": "string"
                      }
                    }
                  }
                },
                "DailyPlanNoteEquipment": {
                  "type": "array",
                  "items": {
                    "required": [
                      "EquipmentId"
                    ],
                    "type": "object",
                    "properties": {
                      "EquipmentId": {
                        "maxLength": 50,
                        "type": "string"
                      }
                    }
                  }
                },
                "DailyPlanNoteTag": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "TagCode": {
                        "type": "string",
                        "nullable": true
                      },
                      "DailyPlanNoteTagId": {
                        "type": "number",
                        "nullable": true
                      }
                    }
                  }
                },
                "DailyPlanNoteTask": {
                  "type": "array",
                  "items": {
                    "required": [
                      "CostItemId"
                    ],
                    "type": "object",
                    "properties": {
                      "CostItemId": {
                        "type": "number"
                      }
                    }
                  }
                },
                "NoteId": {
                  "type": "number"
                },
                "Description": {
                  "type": "string"
                }
              }
            }
          },
          "DailyPlanSignoff": {
            "type": "array",
            "items": {
              "required": [
                "DailyPlanSignoffResponse",
                "EmployeeId",
                "SignoffEmployeeId",
                "SignoffDate",
                "SignoffStandardHours"
              ],
              "type": "object",
              "properties": {
                "DailyPlanSignoffResponse": {
                  "type": "array",
                  "items": {
                    "required": [
                      "EmployeeId",
                      "DailyPlanSignoffResponseId",
                      "ResponseKey",
                      "ResponseText"
                    ],
                    "type": "object",
                    "properties": {
                      "EmployeeId": {
                        "maxLength": 50,
                        "type": "string"
                      },
                      "QuestionKey": {
                        "type": "string",
                        "nullable": true
                      },
                      "DailyPlanSignoffResponseId": {
                        "type": "number"
                      },
                      "ResponseKey": {
                        "type": "string"
                      },
                      "ResponseText": {
                        "type": "string"
                      }
                    }
                  }
                },
                "EmployeeId": {
                  "maxLength": 50,
                  "type": "string"
                },
                "QuestionnaireKey": {
                  "type": "string",
                  "nullable": true
                },
                "SignoffEmployeeId": {
                  "type": "string"
                },
                "SignoffDate": {
                  "type": "string"
                },
                "SignoffStandardHours": {
                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                  "type": "string",
                  "nullable": true
                },
                "SignoffOvertimeHours": {
                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                  "type": "string",
                  "nullable": true
                },
                "SignoffDoubletimeHours": {
                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,5})?$",
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "PlanId": {
            "type": "number"
          },
          "CreatedDate": {
            "type": "string"
          },
          "ProjectId": {
            "maxLength": 200,
            "type": "string"
          },
          "LanguageKey": {
            "type": "string"
          },
          "Location": {
            "type": "string",
            "nullable": true
          },
          "CreatedById": {
            "type": "string"
          },
          "DeviceKey": {
            "type": "string",
            "nullable": true
          },
          "Shift": {
            "type": "string",
            "nullable": true
          },
          "Approvers": {
            "type": "array",
            "items": {
              "required": [
                "RoleName"
              ],
              "type": "object",
              "properties": {
                "RoleName": {
                  "type": "string"
                },
                "DisplayId": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "Executers": {
            "type": "array",
            "items": {
              "required": [
                "RoleName"
              ],
              "type": "object",
              "properties": {
                "RoleName": {
                  "type": "string"
                },
                "DisplayId": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "ClientSignOff": {
            "type": "array",
            "items": {
              "required": [
                "Name",
                "Email"
              ],
              "type": "object",
              "properties": {
                "Name": {
                  "type": "string"
                },
                "Email": {
                  "type": "string"
                }
              }
            }
          },
          "ClientSignoffReportRecipients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "DailyPlanEmployeePayrollIndicator": {
            "type": "array",
            "items": {
              "required": [
                "DailyPlanEmployeePayrollIndicatorId",
                "EmployeeId",
                "DailyPlanNoteId",
                "PayrollIndicatorId",
                "PayrollIdentifier"
              ],
              "type": "object",
              "properties": {
                "DailyPlanEmployeePayrollIndicatorId": {
                  "type": "number"
                },
                "EmployeeId": {
                  "maxLength": 50,
                  "type": "string"
                },
                "DailyPlanNoteId": {
                  "type": "number",
                  "nullable": true
                },
                "PayrollIndicatorId": {
                  "type": "number",
                  "nullable": true
                },
                "CostItemId": {
                  "type": "number",
                  "nullable": true
                },
                "PayrollIdentifier": {
                  "type": "string"
                },
                "WBSPhaseCode": {
                  "type": "string",
                  "nullable": true
                },
                "EmployeeSourceSystemId": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "PlanDate": {
            "type": "string"
          },
          "PlanTitle": {
            "type": "string"
          },
          "PlanStatusCode": {
            "type": "string"
          },
          "ModifiedById": {
            "type": "string"
          },
          "ModifiedDate": {
            "type": "string"
          },
          "PlannedDate": {
            "type": "string"
          },
          "PlannedById": {
            "type": "string",
            "nullable": true
          },
          "ExecutedDate": {
            "type": "string"
          },
          "ExecutedById": {
            "type": "string"
          },
          "ApprovedDate": {
            "type": "string"
          },
          "ApprovedById": {
            "type": "string"
          },
          "CommitmentCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "data_daily_plan_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "PlanId/{PlanId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_daily_plan"
          }
        ]
      },
      "data_project_crafts": {
        "required": [
          "CraftId",
          "ProjectId"
        ],
        "type": "object",
        "properties": {
          "ProjectId": {
            "maxLength": 200,
            "type": "string"
          },
          "CraftId": {
            "maxLength": 50,
            "type": "string"
          },
          "StraightTimeRate": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "OverTimeFactor": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "OverTimeRate": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "DoubleTimeFactor": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "DoubleTimeRate": {
            "pattern": "^[-+]?[0-9]{1,16}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "nullable": true
          },
          "UseBaseWageFactors": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "data_project_crafts_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "ProjectCraftId/{ProjectId}/{CraftId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_project_crafts"
          }
        ]
      },
      "data_project_equip_types": {
        "required": [
          "ProjectId",
          "EquipmentTypeId"
        ],
        "type": "object",
        "properties": {
          "ProjectId": {
            "maxLength": 200,
            "type": "string"
          },
          "EquipmentTypeId": {
            "maxLength": 250,
            "type": "string"
          },
          "UnitCost": {
            "pattern": "^[-+]?[0-9]{1,11}(?:.[0-9]{1,5})?$",
            "type": "string",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "data_project_equip_types_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "ProjectEquipTypeId/{ProjectId}/{EquipmentTypeId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_project_equip_types"
          }
        ]
      },
      "data_vendors": {
        "required": [
          "SourceSystemId",
          "VendorCode",
          "VendorDescription"
        ],
        "type": "object",
        "properties": {
          "SourceSystemId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The unique identifier provided by the system of record for Vendors"
          },
          "SourceSystemName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "The name of the system of record for Vendors",
            "nullable": true
          },
          "VendorCode": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "The public unique identifier for a Vendor"
          },
          "VendorDescription": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "The description for a Vendor"
          },
          "IsActive": {
            "type": "boolean",
            "nullable": true
          },
          "AlternateName": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "An alternate name that may be assigned to the vendor to aid searches.",
            "nullable": true
          },
          "Address1": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "Street address of the vendor.",
            "nullable": true
          },
          "Address2": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "An optional second line for the street address of the vendor.",
            "nullable": true
          },
          "ZipCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Postal or zip code of the vendor.",
            "nullable": true
          },
          "City": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "City where the vendor is located.",
            "nullable": true
          },
          "RegionISOCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "The ISO 3166-2 Code for the region of the vendor.​",
            "nullable": true
          },
          "CountryISOCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "The ISO Alpha-2 code for the country of the vendor.​",
            "nullable": true
          },
          "TelephoneNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Telephone number for the vendor.​",
            "nullable": true
          },
          "FaxNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Fax number for the vendor​",
            "nullable": true
          },
          "DefaultPaymentTerms": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Optional payment terms that will be defaulted when the vendor is added to a contract.​",
            "nullable": true
          },
          "DefaultINCOTerms": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Optional International Commercial (INCO) Terms that will be defaulted when the vendor is added to a contract.​​",
            "nullable": true
          },
          "DefaultINCOTermsLocation": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Optional location at which risk passes from seller to buyer per the specified INCO Terms",
            "nullable": true
          },
          "VendorTypeReference": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "Optional reference to a Vendor Type. If used, data provided in this field must match a valid record in the Vendor Type Master Data located in Platform.​",
            "nullable": true
          },
          "VendorTaxJurisdiction": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "description": "An optional Tax Jurisdiction Code that can be included when sending Invoice and Pay Requests from Contracts to an external system. This field may also be optionally used to when requesting tax details from an external taxation system for contract line items.​",
            "nullable": true
          },
          "VendorTaxId": {
            "maxLength": 60,
            "minLength": 0,
            "type": "string",
            "description": "Optional Tax Identification number issued for the vendor from a government tax authority (typically IRS for US Vendors)",
            "nullable": true,
            "writeOnly": true
          }
        }
      },
      "data_vendors_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "SourceSystemId/{SourceSystemId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_vendors"
          }
        ]
      },
      "data_organizations": {
        "required": [
          "OrganizationName",
          "OrganizationDescription",
          "ParentOrganization",
          "SourceSystemId"
        ],
        "type": "object",
        "properties": {
          "OrganizationName": {
            "maxLength": 300,
            "type": "string"
          },
          "OrganizationDescription": {
            "maxLength": 255,
            "type": "string"
          },
          "SourceSystemId": {
            "maxLength": 300,
            "type": "string",
            "nullable": true
          },
          "SourceSystemName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "ParentOrganization": {
            "maxLength": 300,
            "type": "string",
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "data_organizations_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "SourceSystemId/{SourceSystemId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_organizations"
          }
        ]
      },
      "data_confirmations": {
        "required": [
          "ProjectId",
          "InterfaceType",
          "Status",
          "LogToken"
        ],
        "type": "object",
        "properties": {
          "ProjectId": {
            "maxLength": 25,
            "type": "string"
          },
          "InterfaceType": {
            "maxLength": 50,
            "type": "string"
          },
          "Status": {
            "maxLength": 15,
            "type": "string"
          },
          "LogToken": {
            "maxLength": 50,
            "type": "string"
          },
          "Logger": {
            "type": "array",
            "items": {
              "required": [
                "LogDate",
                "LogLevel",
                "LogMessage",
                "LogSource"
              ],
              "type": "object",
              "properties": {
                "LogDate": {
                  "type": "string"
                },
                "LogLevel": {
                  "type": "string"
                },
                "LogMessage": {
                  "type": "string"
                },
                "LogSource": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "data_confirmations_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "LogToken/{LogToken}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_confirmations"
          }
        ]
      },
      "data_export_request": {
        "required": [
          "ProjectId",
          "InterfaceType",
          "Status",
          "LogToken",
          "FileLocation",
          "TotalItems"
        ],
        "type": "object",
        "properties": {
          "ProjectId": {
            "maxLength": 25,
            "type": "string"
          },
          "InterfaceType": {
            "maxLength": 50,
            "type": "string"
          },
          "Status": {
            "maxLength": 15,
            "type": "string"
          },
          "LogToken": {
            "maxLength": 50,
            "type": "string"
          },
          "FileLocation": {
            "type": "string"
          },
          "TotalItems": {
            "type": "number"
          },
          "FinishedExporting": {
            "type": "boolean"
          }
        }
      },
      "data_export_request_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "LogToken/{LogToken}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_export_request"
          }
        ]
      },
      "data_account_codes": {
        "required": [
          "DisplayId",
          "AccountCodeDescription",
          "SourceSystemId"
        ],
        "type": "object",
        "properties": {
          "DisplayId": {
            "maxLength": 250,
            "type": "string"
          },
          "AccountCodeDescription": {
            "maxLength": 255,
            "type": "string"
          },
          "ParentAccountCodeSourceSystemId": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "PrimaryAutoQuantity": {
            "type": "boolean",
            "nullable": true
          },
          "SecondaryAutoQuantity": {
            "type": "boolean",
            "nullable": true
          },
          "IsTerminal": {
            "type": "boolean",
            "nullable": true
          },
          "SourceSystemId": {
            "maxLength": 300,
            "type": "string",
            "nullable": true
          },
          "SourceSystemName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "PrimaryUOMReference": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "CurrencyCode": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "SecondaryUOMReference": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "ContributePrimaryToPrimary": {
            "type": "boolean",
            "nullable": true
          },
          "ContributePrimaryToSecondary": {
            "type": "boolean",
            "nullable": true
          },
          "ContributeSecondaryToSecondary": {
            "type": "boolean",
            "nullable": true
          },
          "FlagAsDisabled": {
            "type": "boolean",
            "nullable": true
          },
          "SafetyNotes": {
            "maxLength": 5000,
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "maxLength": 5000,
            "type": "string",
            "nullable": true
          },
          "EnvironmentalNotes": {
            "type": "string",
            "nullable": true
          },
          "QualityNotes": {
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag1": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag2": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag3": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag4": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag5": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag6": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag7": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag8": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag9": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag10": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag11": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag12": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag13": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag14": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag15": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag16": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag17": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag18": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag19": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "AccountCodeTag20": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "UserDefinedField1": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "UserDefinedField2": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "UserDefinedField3": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "UserDefinedField4": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "UserDefinedField5": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "UserDefinedField6": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "UserDefinedField7": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "UserDefinedField8": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "UserDefinedField9": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "UserDefinedField10": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          }
        }
      },
      "data_account_codes_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "SourceSystemId/{SourceSystemId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_account_codes"
          }
        ]
      },
      "data_export_request_item": {
        "required": [
          "ExportRequestId",
          "ProjectId",
          "InterfaceType",
          "LogToken",
          "RelatedCacheId",
          "HasRelatedCacheChanged"
        ],
        "type": "object",
        "properties": {
          "ExportRequestId": {
            "type": "string"
          },
          "ProjectId": {
            "maxLength": 25,
            "type": "string"
          },
          "InterfaceType": {
            "maxLength": 50,
            "type": "string"
          },
          "LogToken": {
            "maxLength": 50,
            "type": "string"
          },
          "RelatedCacheId": {
            "type": "string"
          },
          "HasRelatedCacheChanged": {
            "type": "boolean"
          },
          "RelatedCacheChangeOperation": {
            "type": "string",
            "nullable": true
          },
          "ResolveStatus": {
            "maxLength": 50,
            "type": "string"
          },
          "ResolvedOn": {
            "type": "string",
            "nullable": true
          },
          "ResolveMessage": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "data_export_request_item_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "ExportRequestItemId/{LogToken}/{RelatedCacheId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_export_request_item"
          }
        ]
      },
      "data_cost_item": {
        "required": [
          "ProjectId",
          "PhaseCode",
          "WBSDescription",
          "CostItemId",
          "AllowAsBuilt",
          "Level",
          "Suspend"
        ],
        "type": "object",
        "properties": {
          "ProjectId": {
            "type": "string"
          },
          "PhaseCode": {
            "type": "string"
          },
          "WBSDescription": {
            "type": "string"
          },
          "CostItemId": {
            "type": "number"
          },
          "AllowAsBuilt": {
            "type": "string"
          },
          "ParentCostItemReference": {
            "type": "number",
            "nullable": true
          },
          "ChildCostItemReferences": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "CostItemId": {
                  "type": "number",
                  "nullable": true
                }
              }
            }
          },
          "PreviousSiblingReference": {
            "type": "number",
            "nullable": true
          },
          "NextSiblingReference": {
            "type": "number",
            "nullable": true
          },
          "Level": {
            "type": "string"
          },
          "Start": {
            "type": "string"
          },
          "Finish": {
            "type": "string"
          },
          "ActualStart": {
            "type": "string"
          },
          "ActualFinish": {
            "type": "string"
          },
          "EarlyStart": {
            "type": "string"
          },
          "EarlyFinish": {
            "type": "string"
          },
          "LateStart": {
            "type": "string"
          },
          "LateFinish": {
            "type": "string"
          },
          "AccountCode": {
            "type": "string"
          },
          "AccountDescription": {
            "type": "string"
          },
          "Characteristic1": {
            "type": "string"
          },
          "Characteristic2": {
            "type": "string"
          },
          "Characteristic3": {
            "type": "string"
          },
          "Characteristic4": {
            "type": "string"
          },
          "Characteristic5": {
            "type": "string"
          },
          "Characteristic6": {
            "type": "string"
          },
          "Characteristic7": {
            "type": "string"
          },
          "Characteristic8": {
            "type": "string"
          },
          "Characteristic9": {
            "type": "string"
          },
          "Characteristic10": {
            "type": "string"
          },
          "Characteristic11": {
            "type": "string"
          },
          "Characteristic12": {
            "type": "string"
          },
          "Characteristic13": {
            "type": "string"
          },
          "Characteristic14": {
            "type": "string"
          },
          "Characteristic15": {
            "type": "string"
          },
          "Characteristic16": {
            "type": "string"
          },
          "Characteristic17": {
            "type": "string"
          },
          "Characteristic18": {
            "type": "string"
          },
          "Characteristic19": {
            "type": "string"
          },
          "Characteristic20": {
            "type": "string"
          },
          "Characteristic21": {
            "type": "string"
          },
          "Characteristic22": {
            "type": "string"
          },
          "Characteristic23": {
            "type": "string"
          },
          "Characteristic24": {
            "type": "string"
          },
          "Characteristic25": {
            "type": "string"
          },
          "Characteristic26": {
            "type": "string"
          },
          "Characteristic27": {
            "type": "string"
          },
          "Characteristic28": {
            "type": "string"
          },
          "Characteristic29": {
            "type": "string"
          },
          "Characteristic30": {
            "type": "string"
          },
          "Characteristic31": {
            "type": "string"
          },
          "Characteristic32": {
            "type": "string"
          },
          "Suspend": {
            "type": "boolean"
          },
          "PayItemNumber": {
            "type": "string",
            "nullable": true
          },
          "PayItemDescription": {
            "type": "string",
            "nullable": true
          },
          "PayItemSourceSystemId": {
            "type": "string",
            "nullable": true
          },
          "IssueName": {
            "type": "string",
            "nullable": true
          },
          "IssueID": {
            "type": "string",
            "nullable": true
          },
          "ChangeID": {
            "type": "number",
            "nullable": true
          }
        }
      },
      "data_cost_item_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "CostItemId/{ProjectId}/{CostItemId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_cost_item"
          }
        ]
      },
      "data_budget_item": {
        "required": [
          "ProjectId",
          "IsTerminal",
          "CBSPosition",
          "IsActive",
          "Suspend",
          "IsBudgetLocked",
          "OriginalBudgetQuantity",
          "OriginalBudgetUnitOfMeasure",
          "OriginalBudgetManHours",
          "OriginalBudgetTotalCost",
          "OriginalBudgetCostCategory",
          "CurrentBudgetQuantity",
          "CurrentBudgetUnitOfMeasure",
          "CurrentBudgetManHours",
          "CurrentBudgetTotalCost",
          "CurrentBudgetCostCategory",
          "CurrentEstimateQuantity",
          "CurrentEstimateUnitOfMeasure",
          "CurrentEstimateManHours",
          "CurrentEstimateTotalCost",
          "CurrentEstimateCostCategory"
        ],
        "type": "object",
        "properties": {
          "ProjectId": {
            "type": "string"
          },
          "PhaseCode": {
            "type": "string",
            "nullable": true
          },
          "IsTerminal": {
            "type": "boolean"
          },
          "CBSPosition": {
            "type": "string"
          },
          "IsActive": {
            "type": "boolean"
          },
          "Suspend": {
            "type": "boolean"
          },
          "IsBudgetLocked": {
            "type": "boolean"
          },
          "OriginalBudgetQuantity": {
            "type": "string"
          },
          "OriginalBudgetUnitOfMeasure": {
            "type": "string"
          },
          "OriginalBudgetManHours": {
            "type": "string"
          },
          "OriginalBudgetTotalCost": {
            "type": "string"
          },
          "OriginalBudgetCostCategory": {
            "type": "array",
            "items": {
              "required": [
                "Name",
                "Cost",
                "IsTerminalCostCategory"
              ],
              "type": "object",
              "properties": {
                "Name": {
                  "type": "string"
                },
                "Cost": {
                  "type": "string"
                },
                "IsTerminalCostCategory": {
                  "type": "boolean"
                }
              }
            }
          },
          "CurrentBudgetQuantity": {
            "type": "string"
          },
          "CurrentBudgetUnitOfMeasure": {
            "type": "string"
          },
          "CurrentBudgetManHours": {
            "type": "string"
          },
          "CurrentBudgetTotalCost": {
            "type": "string"
          },
          "CurrentBudgetCostCategory": {
            "type": "array",
            "items": {
              "required": [
                "Name",
                "Cost",
                "IsTerminalCostCategory"
              ],
              "type": "object",
              "properties": {
                "Name": {
                  "type": "string"
                },
                "Cost": {
                  "type": "string"
                },
                "IsTerminalCostCategory": {
                  "type": "boolean"
                }
              }
            }
          },
          "CurrentEstimateQuantity": {
            "type": "string"
          },
          "CurrentEstimateUnitOfMeasure": {
            "type": "string"
          },
          "CurrentEstimateManHours": {
            "type": "string"
          },
          "CurrentEstimateTotalCost": {
            "type": "string"
          },
          "CurrentEstimateCostCategory": {
            "type": "array",
            "items": {
              "required": [
                "Name",
                "Cost",
                "IsTerminalCostCategory"
              ],
              "type": "object",
              "properties": {
                "Name": {
                  "type": "string"
                },
                "Cost": {
                  "type": "string"
                },
                "IsTerminalCostCategory": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "data_budget_item_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "BudgetItemId/{ProjectId}/{CBSPosition}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_budget_item"
          }
        ]
      },
      "data_forecast": {
        "required": [
          "Suspend",
          "PlannedQuantity",
          "UnitOfMeasure",
          "LaborHours",
          "ProjectId",
          "PhaseCode",
          "ForecastMethod",
          "ForecastMethodChangeNotes",
          "IsActive",
          "ForecastCostCategory"
        ],
        "type": "object",
        "properties": {
          "Suspend": {
            "type": "boolean"
          },
          "PlannedQuantity": {
            "pattern": "^[-+]?[0-9]{1,22}(?:.[0-9]{1,11})?$",
            "type": "string"
          },
          "UnitOfMeasure": {
            "maxLength": 25,
            "type": "string"
          },
          "LaborHours": {
            "pattern": "^[-+]?[0-9]{1,22}(?:.[0-9]{1,11})?$",
            "type": "string"
          },
          "ProjectId": {
            "maxLength": 25,
            "type": "string"
          },
          "PhaseCode": {
            "maxLength": 50,
            "type": "string"
          },
          "ForecastMethod": {
            "maxLength": 50,
            "type": "string"
          },
          "ForecastMethodChangeNotes": {
            "maxLength": 500,
            "type": "string"
          },
          "IsActive": {
            "type": "boolean"
          },
          "ForecastCostCategory": {
            "type": "array",
            "items": {
              "required": [
                "Name",
                "Amount",
                "IsTerminalCostCategory"
              ],
              "type": "object",
              "properties": {
                "Name": {
                  "maxLength": 50,
                  "type": "string"
                },
                "Amount": {
                  "pattern": "^[-+]?[0-9]{1,22}(?:.[0-9]{1,11})?$",
                  "type": "string"
                },
                "IsTerminalCostCategory": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "data_forecast_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "ForecastId/{ProjectId}/{PhaseCode}/{ForecastMethod}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_forecast"
          }
        ]
      },
      "data_daily_plan_cost_item": {
        "required": [
          "DailyPlanCacheId",
          "CostItemId",
          "TaskPriority",
          "PlanQuantity",
          "SubmittedQuantity",
          "ApprovedQuantity",
          "WBSCode"
        ],
        "type": "object",
        "properties": {
          "DailyPlanCacheId": {
            "type": "string"
          },
          "CostItemId": {
            "type": "string"
          },
          "TaskPriority": {
            "type": "string"
          },
          "PlanQuantity": {
            "type": "string"
          },
          "SubmittedQuantity": {
            "type": "string"
          },
          "ApprovedQuantity": {
            "type": "string"
          },
          "CostItemSourceSystemId": {
            "type": "string",
            "nullable": true
          },
          "WBSCode": {
            "type": "string"
          }
        }
      },
      "data_daily_plan_cost_item_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "CostItemId/{DailyPlanCacheId}/{CostItemId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_daily_plan_cost_item"
          }
        ]
      },
      "data_employee_cost_item": {
        "required": [
          "DailyPlanCostItemCacheId",
          "ResourceId",
          "EmployeeId",
          "CraftCode"
        ],
        "type": "object",
        "properties": {
          "DailyPlanCostItemCacheId": {
            "type": "string"
          },
          "ResourceId": {
            "type": "string"
          },
          "SubmittedDoubletimeHours": {
            "type": "string",
            "nullable": true
          },
          "SubmittedOvertimeHours": {
            "type": "string",
            "nullable": true
          },
          "SubmittedStandardHours": {
            "type": "string",
            "nullable": true
          },
          "ApprovedDoubletimeHours": {
            "type": "string",
            "nullable": true
          },
          "ApprovedOvertimeHours": {
            "type": "string",
            "nullable": true
          },
          "ApprovedStandardHours": {
            "type": "string",
            "nullable": true
          },
          "PlannedDoubletimeHours": {
            "type": "string",
            "nullable": true
          },
          "PlannedOvertimeHours": {
            "type": "string",
            "nullable": true
          },
          "PlannedStandardHours": {
            "type": "string",
            "nullable": true
          },
          "EmployeeId": {
            "type": "string"
          },
          "CraftCode": {
            "type": "string"
          },
          "ReasonCode": {
            "type": "object",
            "properties": {
              "ResourceCodeId": {
                "type": "string",
                "nullable": true
              },
              "Hours": {
                "type": "string",
                "nullable": true
              },
              "HourType": {
                "type": "string",
                "nullable": true
              },
              "Premiums": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            }
          }
        }
      },
      "data_employee_cost_item_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "EmployeeCostItemId/{DailyPlanCostItemCacheId}/{EmployeeId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_employee_cost_item"
          }
        ]
      },
      "data_equipment_cost_item": {
        "required": [
          "DailyPlanCostItemCacheId",
          "ResourceId",
          "EquipmentId",
          "EquipmentType"
        ],
        "type": "object",
        "properties": {
          "DailyPlanCostItemCacheId": {
            "type": "string"
          },
          "ResourceId": {
            "type": "string"
          },
          "PlannedStandardHours": {
            "type": "string",
            "nullable": true
          },
          "ApprovedStandardHours": {
            "type": "string",
            "nullable": true
          },
          "SubmittedStandardHours": {
            "type": "string",
            "nullable": true
          },
          "EquipmentId": {
            "type": "string"
          },
          "EquipmentType": {
            "type": "string"
          }
        }
      },
      "data_equipment_cost_item_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "EquipmentCostItemId/{DailyPlanCostItemCacheId}/{EquipmentId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_equipment_cost_item"
          }
        ]
      },
      "data_component_cost_item": {
        "required": [
          "DailyPlanCostItemCacheId",
          "ComponentId",
          "ComponentType",
          "InstalledQuantity",
          "ProjectEstimatingResourceId",
          "ProjectEstimatingResourceSourceSystemId",
          "ResourceId"
        ],
        "type": "object",
        "properties": {
          "DailyPlanCostItemCacheId": {
            "type": "string"
          },
          "ComponentId": {
            "type": "string"
          },
          "ComponentType": {
            "type": "string"
          },
          "InstalledQuantity": {
            "type": "string"
          },
          "ProjectEstimatingResourceId": {
            "type": "string"
          },
          "ProjectEstimatingResourceSourceSystemId": {
            "type": "string"
          },
          "ResourceId": {
            "type": "string"
          }
        }
      },
      "data_component_cost_item_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "ComponentCostItemId/{DailyPlanCostItemCacheId}/{ComponentId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_component_cost_item"
          }
        ]
      },
      "data_committed_cost": {
        "required": [
          "ProjectId",
          "CurrentDate",
          "CurrentTime",
          "LogToken"
        ],
        "type": "object",
        "properties": {
          "ProjectId": {
            "maxLength": 30,
            "type": "string"
          },
          "CurrentDate": {
            "maxLength": 25,
            "type": "string"
          },
          "CurrentTime": {
            "maxLength": 25,
            "type": "string"
          },
          "LogToken": {
            "maxLength": 50,
            "type": "string"
          }
        }
      },
      "data_committed_cost_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "LogToken/{LogToken}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_committed_cost"
          }
        ]
      },
      "data_actual_mh_cost": {
        "required": [
          "ProjectId",
          "DateFrom",
          "TimeFrom",
          "DateTo",
          "TimeTo",
          "LogToken"
        ],
        "type": "object",
        "properties": {
          "ProjectId": {
            "maxLength": 30,
            "type": "string"
          },
          "DateFrom": {
            "maxLength": 25,
            "type": "string"
          },
          "TimeFrom": {
            "maxLength": 25,
            "type": "string"
          },
          "DateTo": {
            "maxLength": 25,
            "type": "string"
          },
          "TimeTo": {
            "maxLength": 25,
            "type": "string"
          },
          "LogToken": {
            "maxLength": 50,
            "type": "string"
          }
        }
      },
      "data_actual_mh_cost_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "LogToken/{LogToken}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_actual_mh_cost"
          }
        ]
      },
      "data_actuals": {
        "required": [
          "ProjectDisplay",
          "Actuals",
          "SourceSystemId"
        ],
        "type": "object",
        "properties": {
          "ProjectDisplay": {
            "maxLength": 50,
            "type": "string",
            "description": "Identifies the project associated with the Actuals request that was received. The ID is unique to a project and is its SourceSystemId.",
            "example": "TestProject"
          },
          "Actuals": {
            "type": "array",
            "items": {
              "required": [
                "PostingDate"
              ],
              "type": "object",
              "properties": {
                "PhaseCode": {
                  "maxLength": 24,
                  "type": "string",
                  "description": "WBS phase code associated with the cost item for the Actuals record.",
                  "nullable": true,
                  "example": "1002"
                },
                "CBSPositionCode": {
                  "maxLength": 50,
                  "type": "string",
                  "description": "CBS Position Code associated with the cost item for the Actuals record.",
                  "nullable": true,
                  "example": "1.1"
                },
                "PostingDate": {
                  "maxLength": 25,
                  "type": "string",
                  "description": "A date that indicates which financial period the cost, manhours, equipment hours or quantities will be associated to.",
                  "example": "10/18/2018"
                },
                "Notes": {
                  "maxLength": 250,
                  "type": "string",
                  "description": "Additional information about the transaction",
                  "nullable": true,
                  "example": "Maintenance"
                },
                "Quantity": {
                  "type": "string",
                  "description": "Claimed amount of operational quantity for the cost item",
                  "nullable": true,
                  "example": "5"
                },
                "ManHours": {
                  "type": "string",
                  "description": "Claimed amount of manhours for the cost item",
                  "nullable": true,
                  "example": "4"
                },
                "EquipmentHours": {
                  "type": "string",
                  "description": "Claimed amount of equipment hours for the cost item",
                  "nullable": true,
                  "example": "5"
                },
                "Cost": {
                  "required": [
                    "CostCategories"
                  ],
                  "type": "object",
                  "properties": {
                    "CostCategories": {
                      "type": "array",
                      "items": {
                        "required": [
                          "Name",
                          "Amount"
                        ],
                        "type": "object",
                        "properties": {
                          "Name": {
                            "maxLength": 30,
                            "type": "string",
                            "description": "Cost category name",
                            "example": "RE Repair Labor"
                          },
                          "Amount": {
                            "maxLength": 30,
                            "type": "string",
                            "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field.",
                            "example": "5000"
                          }
                        }
                      },
                      "description": "Array header of the cost categories records.  All fields within this array may be repeated for each cost item that has data."
                    }
                  }
                }
              }
            },
            "description": "Array header of the cost item records for Actuals. All fields within this array may be repeated for each cost item that has data."
          },
          "SourceSystemId": {
            "maxLength": 50,
            "type": "string",
            "description": "Identifier created by the \"system of record\" and used in all system communications as the primary method of specifying a unique record. This field does not display in normal use of Project Suite applications and may contain internal identifiers such as a GUID that is not understandable by typical system users.",
            "example": "81de2acd1cf74401bfdd04e1db9b3944"
          },
          "SourceSystemName": {
            "maxLength": 50,
            "type": "string",
            "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field.",
            "nullable": true,
            "example": "External System"
          }
        }
      },
      "data_actuals_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "SourceSystemId/{SourceSystemId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_actuals"
          }
        ]
      },
      "data_daily_plan_wos": {
        "required": [
          "WorkOrderDisplayId",
          "EquipmentSourceSystemId",
          "WorkOrderStatusDisplay",
          "SourceSystemId",
          "SourceSystemName",
          "WorkOrderTypeDisplay",
          "ProjectDisplay",
          "Description"
        ],
        "type": "object",
        "properties": {
          "WorkOrderDisplayId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the work order created by the system of record that is understood by users in InEight cloud platform when searching for work orders."
          },
          "EquipmentSourceSystemId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the equipment that the work order is for. This must match an existing record from the Equipment integration."
          },
          "WorkOrderStatusDisplay": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Status to be displayed for the work order in InEight cloud platform. Possible values that can be sent for this field are Open and Closed "
          },
          "Description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Text name and description of the work order to help users when searching for work orders."
          },
          "SourceSystemId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier for the work order that is created by the system of record and used as the method of specifying records when exchanging data between systems."
          },
          "SourceSystemName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Name of the source system from where the data is sourced."
          },
          "WorkOrderTypeDisplay": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Text value representing the type of work order that is shown when users search for work orders in the InEight cloud platform. The values allowed for this field are preloaded into the InEight cloud platform and cannot be edited in current versions. Possible values are: '500','Preventative Maintenance', '510','Engine & Exhaust', '520','Power Train', '530','Frame & Cab', '540','Undercarriage Or Tires', '550','Implements', '560','Electrical System', '570','Hydraulic System', '580','Cooling System', '590','Brakes Or Steering System', '600','Air Or Lube System', '610','Standing Work Order', 'NA','Not Applicable'"
          },
          "ProjectDisplay": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier (DisplayId) of the project that the work order is assigned."
          }
        }
      },
      "data_daily_plan_wos_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "SourceSystemId/{SourceSystemId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_daily_plan_wos"
          }
        ]
      },
      "data_maint_cost_item": {
        "required": [
          "EmployeeId",
          "WorkOrderId",
          "MaintenanceEquipmentId"
        ],
        "type": "object",
        "properties": {
          "DailyPlanCacheId": {
            "type": "string"
          },
          "EmployeeId": {
            "type": "string"
          },
          "WorkOrderId": {
            "type": "string"
          },
          "WBSPhaseCode": {
            "type": "string",
            "nullable": true
          },
          "CostItemSourceSystemId": {
            "type": "string",
            "nullable": true
          },
          "TotalHours": {
            "type": "string"
          },
          "MaintenanceEquipmentId": {
            "type": "string"
          },
          "Segment1": {
            "type": "string",
            "nullable": true
          },
          "Segment2": {
            "type": "string",
            "nullable": true
          },
          "Segment3": {
            "type": "string",
            "nullable": true
          },
          "Segment4": {
            "type": "string",
            "nullable": true
          },
          "ReasonCode": {
            "type": "object",
            "properties": {
              "ResourceCodeId": {
                "type": "string",
                "nullable": true
              },
              "Hours": {
                "type": "string",
                "nullable": true
              },
              "HourType": {
                "type": "string",
                "nullable": true
              },
              "Premiums": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            }
          }
        }
      },
      "data_maint_cost_item_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "MaintCostItemId/{EmployeeId}/{WorkOrderId}/{MaintenanceEquipmentId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_maint_cost_item"
          }
        ]
      },
      "data_pay_items": {
        "required": [
          "ProjectDisplayNumber",
          "PayItemNumber"
        ],
        "type": "object",
        "properties": {
          "ProjectDisplayNumber": {
            "type": "string"
          },
          "PayItemNumber": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "LineNumber": {
            "type": "number"
          },
          "RowNumber": {
            "type": "number"
          },
          "TotalPrice": {
            "type": "number"
          },
          "UnitPrice": {
            "type": "number"
          },
          "PayQuantity": {
            "type": "number"
          },
          "ForecastTakeOffQuantity": {
            "type": "number"
          },
          "UOM": {
            "type": "string"
          },
          "IsBilled": {
            "type": "boolean"
          },
          "BillingMethod": {
            "type": "string"
          },
          "ChangeOrderCount": {
            "type": "number"
          },
          "SalesOrder": {
            "type": "string"
          },
          "PayItemTag1": {
            "type": "string"
          },
          "PayItemTag2": {
            "type": "string"
          },
          "PayItemTag3": {
            "type": "string"
          },
          "PayItemTag4": {
            "type": "string"
          },
          "PayItemTag5": {
            "type": "string"
          },
          "PayItemTag6": {
            "type": "string"
          },
          "PayItemTag7": {
            "type": "string"
          },
          "PayItemTag8": {
            "type": "string"
          },
          "PayItemTag9": {
            "type": "string"
          },
          "PayItemTag10": {
            "type": "string"
          },
          "PayItemUserDefined1": {
            "type": "string"
          },
          "PayItemUserDefined2": {
            "type": "string"
          },
          "PayItemUserDefined3": {
            "type": "string"
          },
          "PayItemUserDefined4": {
            "type": "string"
          },
          "PayItemUserDefined5": {
            "type": "string"
          },
          "PayItemUserDefined6": {
            "type": "string"
          },
          "PayItemUserDefined7": {
            "type": "string"
          },
          "PayItemUserDefined8": {
            "type": "string"
          },
          "PayItemUserDefined9": {
            "type": "string"
          },
          "PayItemUserDefined10": {
            "type": "string"
          },
          "SourceSystemId": {
            "type": "string"
          },
          "OriginalPrice": {
            "type": "number"
          },
          "OriginalPayQuantity": {
            "type": "number"
          },
          "OriginalUnitPrice": {
            "type": "number"
          },
          "OriginalBillingMethod": {
            "type": "string"
          },
          "OriginalForecastTakeOffQuantity": {
            "type": "number"
          },
          "IsPayItemLocked": {
            "type": "boolean"
          },
          "PayItemPosition": {
            "type": "string"
          },
          "IsTerminal": {
            "type": "boolean"
          },
          "RetainagePercentage": {
            "type": "number"
          },
          "RetentionWithHeld": {
            "type": "number"
          },
          "NetBilledRevenue": {
            "type": "number"
          }
        }
      },
      "data_pay_items_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "PayItemId/{ProjectDisplayNumber}/{PayItemNumber}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_pay_items"
          }
        ]
      },
      "data_time_card": {
        "required": [
          "TimecardId"
        ],
        "type": "object",
        "properties": {
          "PlanId": {
            "type": "integer",
            "description": "Unique identifier of the daily plan where the hours were reported for the employee.",
            "example": "1234"
          },
          "PlanDate": {
            "type": "string",
            "description": "Date on which the daily plan hours were performed.",
            "example": "2018-05-31T00:00:00Z"
          },
          "PlanTitle": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Name given to the daily plan where the hours were entered.",
            "example": "Excavation - Mike’s crew"
          },
          "TimecardId": {
            "maxLength": 21,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the time card record.",
            "example": "RD1234"
          },
          "TimeCardType": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Indicates what type of timecard is being sent. Labor, Equipment, Labor-Equipment, Administrative, Maintenance",
            "nullable": true,
            "example": "Labor"
          },
          "CreatedDate": {
            "type": "string",
            "description": "Date when this specific time card version, was originally created.",
            "nullable": true,
            "example": "2018-02-20T14:47:05.9833049Z"
          },
          "ModifiedDate": {
            "type": "string",
            "description": "Date when the this specific time card version was last modified.",
            "nullable": true,
            "example": "2018-02-20T14:58:47.4779635Z"
          },
          "Executor": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the employee representing the role of Executor on the daily plan.",
            "nullable": true,
            "example": "foreman@company.com"
          },
          "ShiftDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Shift": {
                  "maxLength": 100,
                  "minLength": 0,
                  "type": "string",
                  "description": "Name or abbreviated code of the shift represented by the daily plan. Shift names are custom-defined in Plan application settings.",
                  "nullable": true,
                  "example": "Day"
                },
                "ShiftStartDateTime": {
                  "type": "string",
                  "description": "The default datetime that the crew began work for a specific daily plan.",
                  "nullable": true,
                  "example": "2018-06-29T00:00:00Z"
                },
                "ShiftEndDateTime": {
                  "type": "string",
                  "description": "The default datetime that the crew completed work for a specific daily plan.",
                  "nullable": true,
                  "example": "2018-06-30T00:00:00Z"
                },
                "EmployeeShiftDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ShiftStartDateTime": {
                        "type": "string",
                        "description": "The datetime that a specific employee began work for a specific daily plan.",
                        "nullable": true,
                        "example": "2018-06-29T00:00:00Z"
                      },
                      "ShiftEndDateTime": {
                        "type": "string",
                        "description": "The datetime that a specific employee completed work for a specific daily plan.",
                        "nullable": true,
                        "example": "2018-06-30T00:00:00Z"
                      }
                    },
                    "nullable": true
                  },
                  "description": "Array of employees that worked within the shift on the daily plan.",
                  "nullable": true
                }
              },
              "nullable": true
            },
            "nullable": true
          },
          "Trade": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier from the trade system of record for the employee/time card.  The system will evaluate Project Employee Trade first (if present), and Employee Trade second",
            "nullable": true,
            "example": "CARP"
          },
          "Craft": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier from the craft system of record for the employee/time card.  The system will evaluate Project Employee Craft first (if present), and Employee Craft second",
            "nullable": true,
            "example": "APP1"
          },
          "EmployeeId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier from the HR system of record of the employee. This must match the employee’s SourceSystemId.",
            "nullable": true,
            "example": "301847"
          },
          "EquipmentId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Equipment that was operated while performing labor operations for reported hours. This value is based on the SourceSystemId received from an external system.",
            "nullable": true,
            "example": "478933"
          },
          "EmployeeReasonCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "One of the following:• Reason code for labor hours, • Reason code for allowances, if the time card is for allowance only.Each allowance given to an employee for the day will be on a separate time card with zero hours.Each reason code/hours combination for an employee are on a separate time card. NOTE: The exception is when there are hours worked and equipment operated (linked). In this case, the employee reason code is in this field and the equipment reason code is in the equipment reason code field on the same time card.",
            "nullable": true,
            "example": "AWK"
          },
          "EmployeeBillingClass": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "A description of the type of work performed by the employee which will be used to bill to the client.",
            "nullable": true,
            "example": "Carpenter Foreman"
          },
          "EquipmentReasonCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "If the hours entered in a daily plan are for operated equipment and a reason code was selected for the block of hours, the reason code will be reported here.",
            "nullable": true,
            "example": "OPT"
          },
          "LaborHourType": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "The hour type associated with the reason code on the timecard.",
            "nullable": true,
            "example": "Standard time"
          },
          "EmployeeHours": {
            "type": "number",
            "description": "This field is used to for employee activities hours that are entered on the time card. When the time card represents work against a work order, the hours spent on the work order is shown here.",
            "format": "decimal(16,5)",
            "nullable": true,
            "example": "7.50"
          },
          "EquipmentHours": {
            "type": "number",
            "description": "Hours reported for equipment being operated during labor operations.",
            "format": "decimal(16,5)",
            "nullable": true,
            "example": "7.50"
          },
          "Version": {
            "type": "integer",
            "description": "Current version of the Time Card. Versioning starts at 0 and is incremented each time it is resent to the receiving system.",
            "format": "int64",
            "nullable": true,
            "example": "1"
          },
          "Segment1": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "First segment of the cost item associated with the hours.",
            "nullable": true,
            "example": "104354"
          },
          "Segment2": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Second segment of the cost item associated with the hours.",
            "nullable": true,
            "example": "104354A"
          },
          "Segment3": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Third segment of the cost item associated with the hours.",
            "nullable": true,
            "example": "4093"
          },
          "Segment4": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Fourth segment of the cost item associated with the hours.",
            "nullable": true,
            "example": "1234"
          },
          "WorkOrder": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier for a work order if one was selected for the hours. This value is based on the SourceSystemId received from an external system.",
            "nullable": true,
            "example": "EQ12387"
          },
          "MaintenanceEquipmentId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier for the equipment that was either specified by a work order, or the selected equipment for maintenance hours. A value for this field is only present if a work order was selected for the hours. This value is based on the SourceSystemId received from an external system.",
            "nullable": true,
            "example": "834698"
          },
          "OverrideTrade": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "If the trade has been overridden on the time card from the default trade assigned to the employee, this field will show the overridden TradeId value.",
            "nullable": true,
            "example": "ELECT"
          },
          "OverrideCraft": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "If the craft has been overridden on the time card from the default craft assigned to the employee, this field will show the overridden CraftId value.",
            "nullable": true,
            "example": "APP1"
          },
          "Premiums": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Array for the list of all premium code payroll indicators belonging to the premiums category that were assigned to this specific time card version.",
              "nullable": true,
              "example": "D/N"
            },
            "nullable": true
          },
          "TimeCardCharacteristics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Name": {
                  "maxLength": 50,
                  "minLength": 0,
                  "type": "string",
                  "description": "Name of the time card characteristic for which the value is being set. This field may be repeated as needed within the TimeCardCharacteristic list. Available options for name are EmployeeCostType and EquipmentCostType.",
                  "nullable": true,
                  "example": "EquipmentCostType"
                },
                "Value": {
                  "maxLength": 50,
                  "minLength": 0,
                  "type": "string",
                  "description": "Value of the time card characteristic name. This field may be repeated for each characteristic name provided.",
                  "nullable": true,
                  "example": "1940"
                }
              },
              "nullable": true
            },
            "description": "Array header for the custom-defined fields used in the daily plan and associated with the hours in the time card. Within this array, any characteristic name/value pair may be repeated if there are hours in the time card for multiple resource types (e.g. Labor and Equipment).",
            "nullable": true
          },
          "AdditionalPayrollInstructionCodeOverridden": {
            "type": "boolean",
            "description": "If the Allow Additional Payroll Instruction Code for the employee has been modified (changed or removed) for the time card for any reason, this field will show as true.",
            "example": "false"
          },
          "IsActive": {
            "type": "boolean",
            "description": "If the timecard is active, this field will show true",
            "example": "true"
          },
          "EmployeeUDF1": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "Project Employee User Defined Field",
            "nullable": true,
            "example": "$30"
          },
          "ProjectId": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "DisplayId of the project associated with the daily plan.",
            "nullable": true,
            "example": "WTDC"
          },
          "WBSPhaseCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "WBS phase code for the cost item that the payroll indicator was assigned.",
            "nullable": true,
            "example": "3615212.19101L04"
          },
          "BillingCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "One of the following:• Billing code for the employee reason code used in the Project, • Billing code for the extra pay used in the Project, if the time card is for allowance only.",
            "nullable": true,
            "example": "EMPBILL"
          },
          "EquipmentBillingCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Billing code for the equipment reason code used in the Project.",
            "nullable": true,
            "example": "EQUBILL"
          },
          "PremiumList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Premium": {
                  "maxLength": 25,
                  "minLength": 0,
                  "type": "string",
                  "description": "Premium code associated with the employee/maintenance reason code.",
                  "nullable": true,
                  "example": "PREMIUM1"
                },
                "BillingCode": {
                  "maxLength": 10,
                  "minLength": 0,
                  "type": "string",
                  "description": "Billing code for the employee/maintenance premium used in the Project.",
                  "nullable": true,
                  "example": "BILLPREM"
                }
              }
            },
            "description": "Array header for premiums associated to the employee reason code.",
            "nullable": true
          }
        }
      },
      "data_time_card_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "timecardid/{TimecardId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_time_card"
          }
        ]
      },
      "data_actual_quantities": {
        "required": [
          "ProjectId"
        ],
        "type": "object",
        "properties": {
          "ProjectId": {
            "type": "string"
          },
          "PhaseCode": {
            "type": "string"
          },
          "InstalledQuantity": {
            "type": "string"
          },
          "UnitOfMeasure": {
            "type": "string"
          },
          "PostingDate": {
            "type": "string"
          },
          "DocumentDate": {
            "type": "string"
          },
          "Notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "data_actual_quantities_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "__ryvitId/<guid>"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_actual_quantities"
          }
        ]
      },
      "data_tc_confirmation": {
        "required": [
          "TimeCardId",
          "Status"
        ],
        "type": "object",
        "properties": {
          "TimeCardId": {
            "maxLength": 50,
            "type": "string"
          },
          "Version": {
            "maxLength": 50,
            "type": "string"
          },
          "Status": {
            "enum": [
              "Complete",
              "Failed"
            ],
            "type": "string"
          },
          "Errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "data_tc_confirmation_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "__ryvitId/<guid>"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_tc_confirmation"
          }
        ]
      },
      "data_actuals_logs": {
        "required": [
          "ProjectDisplay",
          "LogToken",
          "ActionInstanceId"
        ],
        "type": "object",
        "properties": {
          "ProjectDisplay": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "CorrelationId": {
            "type": "string"
          },
          "ActionInstanceId": {
            "type": "string"
          },
          "LogToken": {
            "type": "string"
          },
          "ErrorDetails": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "data_actuals_logs_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "id/{ActionInstanceId}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_actuals_logs"
          }
        ]
      },
      "data_project_settings": {
        "required": [
          "ProjectSourceSystemId",
          "ProjectSourceSystemName"
        ],
        "type": "object",
        "properties": {
          "ProjectSourceSystemId": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Identifier created by the system of record and used in all system communications as the primary method of specifying a unique record. This field does not display in normal use of InEight applications and can contain internal identifiers such as a GUID that is not understandable by typical system users."
          },
          "ProjectSourceSystemName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name of the external system that is using the integration. Work with InEight to provision a unique value for this field."
          },
          "ProjectDisplayId": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier that is publicly recognizable. This field is displayed in normal use of InEight applications. The value sent in this field can match SourceSystemId if there is no need to use a public versus private unique identifier."
          },
          "GlobalOptions": {
            "type": "object",
            "properties": {
              "CostItemIntegrationBehavior": {
                "type": "string",
                "description": "Cost Item Integration Behavior"
              },
              "IsAdvancedWorkAndSchedulingFeaturesEnabled": {
                "type": "boolean",
                "description": "The planned duration of the project in days"
              },
              "IsTemplateProject": {
                "type": "boolean"
              },
              "IsValidateEquipmentToProjectCurrency": {
                "type": "boolean"
              }
            },
            "description": "Use this to set Global Options of the project"
          },
          "ProjectInformationTags": {
            "type": "object",
            "properties": {
              "ProjectInformationTag1": {
                "maxLength": 500,
                "minLength": 0,
                "type": "string",
                "description": "Project Information Tag 1"
              },
              "ProjectInformationTag2": {
                "maxLength": 250,
                "minLength": 0,
                "type": "string",
                "description": "Project Information Tag 2"
              },
              "ProjectInformationTag3": {
                "type": "string",
                "description": "Project Information Tag 3"
              },
              "ProjectInformationTag4": {
                "type": "string",
                "description": "Project Information Tag 4"
              },
              "ProjectInformationTag5": {
                "maxLength": 255,
                "minLength": 0,
                "type": "string",
                "description": "Project Information Tag 5"
              },
              "ProjectInformationTag6": {
                "maxLength": 100,
                "minLength": 0,
                "type": "string",
                "description": "Project Information Tag 6"
              },
              "ProjectInformationTag7": {
                "maxLength": 255,
                "minLength": 0,
                "type": "string",
                "description": "Project Information Tag 7"
              },
              "ProjectInformationTag8": {
                "type": "string",
                "description": "Project Information Tag 8"
              },
              "ProjectInformationTag9": {
                "type": "string",
                "description": "Project Information Tag 9"
              },
              "ProjectInformationTag10": {
                "type": "string",
                "description": "Project Information Tag 10"
              },
              "ProjectInformationTag11": {
                "type": "string",
                "description": "Project Information Tag 11"
              },
              "ProjectInformationTag12": {
                "type": "string",
                "description": "Project Information Tag 12"
              },
              "ProjectInformationTag13": {
                "type": "string",
                "description": "Project Information Tag 13"
              },
              "ProjectInformationTag14": {
                "type": "string",
                "description": "Project Information Tag 14",
                "format": "date-time"
              },
              "ProjectInformationTag15": {
                "type": "string",
                "description": "Project Information Tag 15",
                "format": "date-time"
              }
            },
            "description": "Use this to set Information Tags of the Project."
          },
          "CustomLists": {
            "type": "array",
            "items": {
              "required": [
                "ListName"
              ],
              "type": "object",
              "properties": {
                "ListName": {
                  "maxLength": 250,
                  "minLength": 0,
                  "type": "string",
                  "description": "Name of the list that's added to the custom label"
                },
                "FieldValues": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Comma delimited array of strings with a NON-DUPLICATE list of all field values that are part of the custom list"
                }
              }
            },
            "description": "Parent field for Custom lists"
          },
          "FuelTypes": {
            "type": "array",
            "items": {
              "required": [
                "FuelTypeDisplay",
                "UOMSourceSystemId",
                "CurrencyCode"
              ],
              "type": "object",
              "properties": {
                "IsEstimatingResourceMapped": {
                  "type": "boolean"
                },
                "FuelTypeDisplay": {
                  "maxLength": 50,
                  "minLength": 0,
                  "type": "string",
                  "description": "The name of the type of fuel used"
                },
                "UOMSourceSystemId": {
                  "maxLength": 255,
                  "minLength": 0,
                  "type": "string",
                  "description": "The value provided in this field must match a valid Unit of Measure previously provided or defined in your InEight system."
                },
                "CurrencyCode": {
                  "maxLength": 50,
                  "minLength": 0,
                  "type": "string",
                  "description": "The currency used to purchase the fuel. The value provided in this field must match a currency code in the InEight cloud platform and that which is selected for the project."
                },
                "UnitCost": {
                  "type": "number",
                  "description": "Value of the fuel per unit of measure",
                  "format": "decimal"
                },
                "AccountCodeReference": {
                  "maxLength": 251,
                  "minLength": 0,
                  "type": "string",
                  "description": "Account code of the record that will be shown in normal use of product platform applications to assist users when performing searches or selections for particular work completed."
                },
                "IsActive": {
                  "type": "boolean"
                },
                "SourceSystemId": {
                  "maxLength": 58,
                  "minLength": 0,
                  "type": "string"
                },
                "SourceSystemName": {
                  "maxLength": 50,
                  "minLength": 0,
                  "type": "string"
                }
              }
            },
            "description": "Parent field for fuel type record"
          }
        }
      },
      "data_project_settings_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "ProjectSettingsId/{ProjectSourceSystemId}/{ProjectSourceSystemName}"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_project_settings"
          }
        ]
      },
      "data_line_item": {
        "type": "object",
        "properties": {
          "LineItem": {
            "type": "array",
            "items": {
              "required": [
                "ProjectCode",
                "ItemType",
                "LineItemType",
                "LineItemDate",
                "UOM",
                "Qty",
                "SourceSystemName",
                "SourceSystemID"
              ],
              "type": "object",
              "properties": {
                "ProjectCode": {
                  "maxLength": 255,
                  "type": "string",
                  "description": "Job/Project identifier"
                },
                "TimesheetNumber": {
                  "maxLength": 255,
                  "type": "string",
                  "description": "Billings Timesheet number to use for the item. If a record contains a blank TimesheetNumber value, the import will group all import items by ProjectCode and create one Timesheet in the Billings product to contain the imported Line Item records.",
                  "nullable": true
                },
                "ItemType": {
                  "maxLength": 10,
                  "type": "string",
                  "description": "Identifier as to type of item that the record is. Acceptable values are: Personnel, Equipment, Material, LineItem, Other"
                },
                "PersonnelCode": {
                  "maxLength": 255,
                  "type": "string",
                  "description": "Resource code that uniquely identifies the person the line item relates to, as per the master resource profile. NOTE: This field is only used if the ItemType value is Personnel, LineItem or Other.",
                  "nullable": true
                },
                "PersonnelType": {
                  "maxLength": 10,
                  "type": "string",
                  "description": "Valid value from Code Values list, filtered for CodeType of “LabourType”. NOTE: This field is only used if the ItemType value is Personnel or LineItem.",
                  "nullable": true
                },
                "EquipmentCode": {
                  "maxLength": 255,
                  "type": "string",
                  "description": "Resource code that uniquely identifies the piece of equipment the line item relates to, as per the master resource profile. Note: EquipmentUnitNumber OR EquipmentCode can be used to identify a piece of equipment. NOTE: This field is only used if the ItemType value is Equipment, LineItem or Other.",
                  "nullable": true
                },
                "EquipmentUnitNumber": {
                  "maxLength": 255,
                  "type": "string",
                  "description": "Resource unit # that uniquely identifies the piece of equipment the line item relates to, as per the master resource profile. Note: EquipmentUnitNumber OR EquipmentCode can be used to identify a piece of equipment. NOTE: This field is only used if the ItemType value is Equipment, LineItem or Other.",
                  "nullable": true
                },
                "EquipmentType": {
                  "maxLength": 10,
                  "type": "string",
                  "description": "Valid value from Code Values list, filtered for CodeType of “EquipmentType”. NOTE: This field is only used if the ItemType value is Equipment or LineItem.",
                  "nullable": true
                },
                "MaterialCode": {
                  "maxLength": 255,
                  "type": "string",
                  "description": "Resource code that uniquely identifies the material the line item relates to, as per the master resource profile. NOTE: This field is only used if the ItemType value is Material, LineItem or Other.",
                  "nullable": true
                },
                "MaterialType": {
                  "maxLength": 10,
                  "type": "string",
                  "description": "Valid value from Code Values list, filtered for CodeType of “MaterialType”. NOTE: This field is only used if the ItemType value is Material or LineItem.",
                  "nullable": true
                },
                "SupplierCode": {
                  "maxLength": 255,
                  "type": "string",
                  "description": "Unique code used to identify the company/vendor the line item relates to. NOTE: This field is only used if the ItemType value is LineItem or LineItem.",
                  "nullable": true
                },
                "SourceOtherType": {
                  "maxLength": 255,
                  "type": "string",
                  "description": "Valid value from Code Values list, filtered for CodeType of “OtherResourceType”. NOTE: This field is only used if the ItemType value is Other.",
                  "nullable": true
                },
                "PONumber": {
                  "maxLength": 255,
                  "type": "string",
                  "description": "Free text field",
                  "nullable": true
                },
                "Description": {
                  "type": "string",
                  "description": "Free text field",
                  "nullable": true
                },
                "LineItemType": {
                  "maxLength": 10,
                  "type": "string",
                  "description": "Valid value from Code Values list, filtered for CodeType of “LineItemType”"
                },
                "WBSCodePath": {
                  "type": "string",
                  "description": "Codes from each level of Project. Contains code from Project (root project code value), plus the code from all WBS levels and cost code code, relevant to placement of record within timesheet. Separated segments with “\\”.",
                  "nullable": true
                },
                "WBSPhaseCode": {
                  "maxLength": 255,
                  "type": "string",
                  "description": "Mapped value from Control. This value directly relates to WBSCodePath.",
                  "nullable": true
                },
                "PayItem": {
                  "maxLength": 255,
                  "type": "string",
                  "description": "Mapped value from Control. This value directly relates to WBSCodePath.",
                  "nullable": true
                },
                "Notes": {
                  "type": "string",
                  "description": "Free text field.",
                  "nullable": true
                },
                "WorkOrderCode": {
                  "maxLength": 255,
                  "type": "string",
                  "description": "Work Order code that uniquely identifies the work order the line item relates to, as per the project specific work order list.",
                  "nullable": true
                },
                "UserDef1": {
                  "type": "string",
                  "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                  "nullable": true
                },
                "UserDef2": {
                  "type": "string",
                  "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                  "nullable": true
                },
                "UserDef3": {
                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                  "type": "string",
                  "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a number and can therefore be used to capture vendor subcontractor hours, aboriginal hours, or any other number value specific to aid in reporting or processing of LEM or invoice information.",
                  "nullable": true
                },
                "UserDef4": {
                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                  "type": "string",
                  "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a number and can therefore be used to capture vendor subcontractor hours, aboriginal hours, or any other number value specific to aid in reporting or processing of LEM or invoice information.",
                  "nullable": true
                },
                "UserDef5": {
                  "type": "string",
                  "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                  "nullable": true
                },
                "UserDef6": {
                  "type": "string",
                  "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                  "nullable": true
                },
                "UserDef7": {
                  "type": "string",
                  "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                  "nullable": true
                },
                "UserDef8": {
                  "type": "string",
                  "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a string and can therefore be used to capture vendor invoice #, or other relevant info.",
                  "nullable": true
                },
                "UserDef9": {
                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                  "type": "string",
                  "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a number and can therefore be used to capture vendor subcontractor hours, aboriginal hours, or any other number value specific to aid in reporting or processing of LEM or invoice information",
                  "nullable": true
                },
                "UserDef10": {
                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                  "type": "string",
                  "description": "Available field that can be used to identify client specific attributes associated to the record being captured. This is a number and can therefore be used to capture vendor subcontractor hours, aboriginal hours, or any other number value specific to aid in reporting or processing of LEM or invoice information",
                  "nullable": true
                },
                "LineItemDate": {
                  "maxLength": 10,
                  "type": "string",
                  "description": "Item date associated to the record being processed. A common use for identifying a date for line item entries, is when processing billable accounts payable records, where the invoice date, or invoice payment date, may be used in identifying the date that the record is associated to."
                },
                "UOM": {
                  "maxLength": 10,
                  "type": "string",
                  "description": "The unit of measure associated to the record in terms of how it is going to be charged to the client. Each and lump sum are common ones used when processing vendor invoices using subtotal amounts(either by invoice, or invoice line item), but are not limited to those options."
                },
                "Qty": {
                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,3})?$",
                  "type": "string",
                  "description": "The number used as the basis for multiplying against the rate."
                },
                "Rate": {
                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                  "type": "string",
                  "description": "The value of the record that is used to multiply against the quantity.",
                  "nullable": true
                },
                "Amount": {
                  "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
                  "type": "string",
                  "description": "TThe quantity multiplied by the rate. Alternatively, the amount can be entered directly, in which the quantity and rate are not used to calculate the amount. This is the value that is used as the basis for the application of project markup amounts. For example, if the amount is $100, and there is a 6% markup for this particular Line Item type, then the following is true: Cost rate = $100; Markup amount = $6; LEM or Invoice total = $106.",
                  "nullable": true
                },
                "SourceSystemName": {
                  "maxLength": 255,
                  "type": "string",
                  "description": ""
                },
                "SourceSystemID": {
                  "maxLength": 255,
                  "type": "string",
                  "description": ""
                },
                "DocumentImage": {
                  "type": "string",
                  "description": "[CURRENTLY NOT IMPLEMENTED] PDF or JPG scan of supporting document (e.g., work ticket, invoice, PO, etc.)",
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "data_line_item_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "__ryvitId/<guid>"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_line_item"
          }
        ]
      },
      "data_code_values": {
        "required": [
          "CodeType",
          "CodeValue",
          "Description",
          "SystemFlag",
          "DisplayOrder",
          "SourceSystemId",
          "SourceSystemName",
          "IsActive"
        ],
        "type": "object",
        "properties": {
          "CodeType": {
            "maxLength": 255,
            "type": "string",
            "description": "Identifies lookup by type. Check API documentation for field values"
          },
          "CodeSubType": {
            "maxLength": 255,
            "type": "string",
            "description": "If the lookup is “nested” (e.g., Country then State or Country then Province), then contains the second level type identifier",
            "nullable": true
          },
          "CodeValue": {
            "maxLength": 10,
            "type": "string",
            "description": "Value of the list item stored in database tables "
          },
          "Description": {
            "maxLength": 2000,
            "type": "string",
            "description": "Long description used in user interface and reports"
          },
          "DisplayOrder": {
            "maxLength": 10,
            "type": "string",
            "description": "Integer for ordering list of values by CodeType and CodeSubType"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Row status indicator, either Y for active or N for inactive"
          },
          "ShortDescription": {
            "maxLength": 100,
            "type": "string",
            "description": "Short description used in user interface and reports",
            "nullable": true
          },
          "SourceSystemId": {
            "type": "string"
          },
          "SourceSystemName": {
            "type": "string"
          },
          "SystemFlag": {
            "type": "boolean",
            "description": "Flag indicating if the user can modify the row using user interface screens"
          },
          "Value1": {
            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
            "type": "string",
            "description": "Available field that can be used to identify client specific attributes associated to the record being captured.",
            "nullable": true
          },
          "Value2": {
            "pattern": "^[-+]?[0-9]{1,10}(?:.[0-9]{1,2})?$",
            "type": "string",
            "description": "Available field that can be used to identify client specific attributes associated to the record being captured.",
            "nullable": true
          }
        }
      },
      "data_code_values_withKeys": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "__ryvitKeys": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "__ryvitId/<guid>"
              },
              "__modifiedUTC": {
                "type": "string",
                "example": "2020-01-01T13:01:01.1234567Z"
              }
            }
          },
          {
            "$ref": "#/components/schemas/data_code_values"
          }
        ]
      }
    },
    "responses": {
      "unauth": {
        "description": "You have not provided a proper X-Application-Key in the header of this request."
      },
      "forbidden": {
        "description": "The X-Application-Key provided is valid but the key does not have access to this resource."
      },
      "notFound": {
        "description": "The object with the given ID was not found OR a subscriber with the given URL was not found."
      },
      "errorResponse": {
        "description": "Describes issues with the request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/errorSchema"
            }
          }
        }
      }
    },
    "parameters": {
      "X-Application-Key": {
        "name": "X-Application-Key",
        "in": "header",
        "description": "Used to authorize access to the Direct API.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "subscriber_code": {
        "name": "subscriber_code",
        "in": "path",
        "description": "The code of the subscriber that you are making this request for.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "action_key_value": {
        "name": "action_key_value",
        "in": "path",
        "description": "Action Instance Identifier.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Limits the number of records returned by the API, up to a maximum of 1,000.",
        "schema": {
          "type": "integer"
        }
      },
      "limit_continuation": {
        "name": "limit",
        "in": "query",
        "description": "Limits the number of records returned by the API, up to a maximum of 1,000.  The API may return less than the limit even when more records exist.  Always examine the 'next' and 'continuationToken' properties to determin if more records are available.",
        "schema": {
          "type": "integer"
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "Offsets the number of records returned by the API.",
        "schema": {
          "type": "integer"
        }
      },
      "modifiedUTCSince": {
        "name": "modifiedUTCSince",
        "in": "query",
        "description": "A string specifies a datetime against which to filter the results. When specified the result will be ordered oldest __modifiedUTC to newest.  Example 2019-12-11T20:16:58.3419275Z. Optional. If unspecified, all cached objects will be returned.",
        "schema": {
          "type": "string"
        }
      },
      "continuationToken": {
        "name": "continuationToken",
        "in": "query",
        "description": "A URL Encoded continuationToken value from a previous GET response.  When provided, the next set of results for the original GET will be returned.",
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "security": [
    { }
  ],
  "tags": [
    {
      "name": "InEight InEight Application v1 Direct API"
    }
  ]
}